{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/anatole/source/demo/fixedbgbug.html","path":"demo/fixedbgbug.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/interview.html","path":"demo/interview.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js-with-async.html","path":"demo/js-with-async.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js-with-defer.html","path":"demo/js-with-defer.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js-without-async.html","path":"demo/js-without-async.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js-without-defer.html","path":"demo/js-without-defer.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/window-onscroll-nothing-to-run.html","path":"demo/window-onscroll-nothing-to-run.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/blog_basic.css","path":"css/blog_basic.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.css.map","path":"css/style.css.map","modified":0,"renderable":1},{"_id":"themes/anatole/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/favicon.png","path":"images/favicon.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/images/logo@2x.png","path":"images/logo@2x.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","path":"js/jquery-migrate-1.2.1.min.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.appear.js","path":"js/jquery.appear.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg","path":"pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/ie.css","path":"assets/css/ie.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/monokai_sublime.min.css","path":"assets/css/monokai_sublime.min.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/normalize.css","path":"assets/css/normalize.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/reveal.css","path":"assets/css/reveal.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/reveal.min.css","path":"assets/css/reveal.min.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/style.css","path":"assets/css/style.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/img/avatar.jpg","path":"assets/img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/img/avatar.svg","path":"assets/img/avatar.svg","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/pic/js-with-async.png","path":"demo/pic/js-with-async.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/pic/js-without-async.png","path":"demo/pic/js-without-async.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/sugar-slide/index.html","path":"demo/sugar-slide/index.html","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/sugar-slide/jquery.sugarslide.js","path":"demo/sugar-slide/jquery.sugarslide.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/dianrong/office-01@640.jpeg","path":"pic/dianrong/office-01@640.jpeg","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/dianrong/office-02@640.jpeg","path":"pic/dianrong/office-02@640.jpeg","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/sample.ppt.001.png","path":"pic/sample.ppt.001.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg","path":"assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/IMG_0230.JPG","path":"pic/IMG_0230.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/IMG_0231.JPG","path":"pic/IMG_0231.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/IMG_0232.JPG","path":"pic/IMG_0232.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/print/paper.css","path":"assets/css/print/paper.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/print/pdf.css","path":"assets/css/print/pdf.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/README.md","path":"assets/css/theme/README.md","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/beige.css","path":"assets/css/theme/beige.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/blood.css","path":"assets/css/theme/blood.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/default.css","path":"assets/css/theme/default.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/moon.css","path":"assets/css/theme/moon.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/serif.css","path":"assets/css/theme/serif.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/night.css","path":"assets/css/theme/night.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/simple.css","path":"assets/css/theme/simple.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/sky.css","path":"assets/css/theme/sky.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/solarized.css","path":"assets/css/theme/solarized.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/js/highlight.min.js","path":"assets/js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/dianrong/office-01@640.jpeg","path":"assets/pic/dianrong/office-01@640.jpeg","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/dianrong/office-02@640.jpeg","path":"assets/pic/dianrong/office-02@640.jpeg","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/sample.ppt.001.png","path":"assets/pic/sample.ppt.001.png","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/css/async-defer/style.css","path":"demo/css/async-defer/style.css","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js/async-defer/1.js","path":"demo/js/async-defer/1.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js/async-defer/2.js","path":"demo/js/async-defer/2.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/demo/js/async-defer/sleep.js","path":"demo/js/async-defer/sleep.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/anatole/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"themes/anatole/source/pic/IMG_0233.JPG","path":"pic/IMG_0233.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/IMG_0230.JPG","path":"assets/pic/IMG_0230.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/IMG_0231.JPG","path":"assets/pic/IMG_0231.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/IMG_0232.JPG","path":"assets/pic/IMG_0232.JPG","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/template/mixins.scss","path":"assets/css/theme/template/mixins.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/template/settings.scss","path":"assets/css/theme/template/settings.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/template/theme.scss","path":"assets/css/theme/template/theme.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/beige.scss","path":"assets/css/theme/source/beige.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/blood.scss","path":"assets/css/theme/source/blood.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/default.scss","path":"assets/css/theme/source/default.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/moon.scss","path":"assets/css/theme/source/moon.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/night.scss","path":"assets/css/theme/source/night.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/serif.scss","path":"assets/css/theme/source/serif.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/simple.scss","path":"assets/css/theme/source/simple.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/sky.scss","path":"assets/css/theme/source/sky.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/css/theme/source/solarized.scss","path":"assets/css/theme/source/solarized.scss","modified":0,"renderable":1},{"_id":"themes/anatole/source/assets/pic/IMG_0233.JPG","path":"assets/pic/IMG_0233.JPG","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"8dbf2603fba1335dd37e427037046e6d86e9291b","modified":1527688055101},{"_id":"source/CNAME","hash":"1e9e441879e382b836d270990050ac2149251ca4","modified":1527727658261},{"_id":"themes/anatole/.DS_Store","hash":"070f7ab40ca1d3edfb61b090d5bd48ad410ed569","modified":1527687021293},{"_id":"themes/anatole/.gitignore","hash":"9fcbb05b158b5d3ba1ee60d38889e05e8b0f3f2a","modified":1527675463349},{"_id":"themes/anatole/LICENSE","hash":"359cb81298c1fdbccf531548fc097466b0151be4","modified":1527675463349},{"_id":"themes/anatole/README.md","hash":"75a3829b8a316249ec0b4fd8eae2d371de879494","modified":1527675463349},{"_id":"themes/anatole/_config.yml","hash":"62b594a662b3266de094a8440f9dbc924be65e18","modified":1527752262597},{"_id":"themes/anatole/package.json","hash":"cf731a3ebf3913747fccb6c4c6615eba7d7e88a4","modified":1527675463355},{"_id":"source/_posts/2013-03-18-about.md","hash":"ea2e112c12b80e999d7320d452f2bfecf4e945d8","modified":1527688352707},{"_id":"source/_posts/2013-03-18-bootstrap.md","hash":"cbf416755a3d563e29a02c6505625914b426c873","modified":1527667935838},{"_id":"source/_posts/2013-03-18-links.md","hash":"315bffb19f1b46ec2d2d05153fa58165f8f7ae43","modified":1527780993514},{"_id":"source/_posts/2013-03-20-frontend-tandard.md","hash":"673c8d16e9983d2b1ee2d161817a6d12b1989d9b","modified":1527667935838},{"_id":"source/_posts/2013-04-10-how-to-install-sublime-text-2.md","hash":"07c85952c1c8b8bb600c7bf5a19e82590aa2da15","modified":1527667935839},{"_id":"source/_posts/2013-05-20-getting-start-nodejs.md","hash":"344ffeff39ddaf454a78874593bf327d16252f85","modified":1527667935840},{"_id":"source/_posts/2013-05-29-how-to-use-node-middleware-nodemailer.md","hash":"90fddcf567fde4094f47c41d1b2d122e63172ff7","modified":1527667935841},{"_id":"source/_posts/2013-06-10-get-job-at-gionee.md","hash":"7e147dcb01e1e58886f1f98a60f560c5dac7014c","modified":1527667935842},{"_id":"source/_posts/2013-06-13-quick-start-lookitui.md","hash":"44cbacf03d45f87b5c0bf2ea08b5ebb73aff83cf","modified":1527667935842},{"_id":"source/_posts/2013-07-07-owner-one-skill-in-it-industy.md","hash":"fa79c3f5cf121655f2f57f9e7e683aee35c1dabc","modified":1527667935843},{"_id":"source/_posts/2013-07-12-ubuntu-install-node-js.md","hash":"0dc8015fe6e44f68e7ff7c6806fe6b5c2182462a","modified":1527667935844},{"_id":"source/_posts/2013-07-17-javascript-question-collection.md","hash":"da5a71a9244f8de16a17fb25bafd3b823f9436c7","modified":1527667935844},{"_id":"source/_posts/2013-08-02-sublime-text-open-dump-bug.md","hash":"ad487a438556dbe6c56a96c3153f0b06ec6c2bb6","modified":1527667935845},{"_id":"source/_posts/2013-08-10-ubuntu-install-sublime-text-2.md","hash":"c9fb5bb41041a5d0077ac9dfe05bdae304c576b0","modified":1527667935845},{"_id":"source/_posts/2013-09-06-media-your-device-by-javascript.md","hash":"9bdf6e0f575f9751eb6792c1c521fc04d4da256a","modified":1527667935846},{"_id":"source/_posts/2013-09-07-feeling-in-your-heart.md","hash":"a7a3072359392c5edaf2b31817193d91e402a237","modified":1527667935846},{"_id":"source/_posts/2013-09-15-snake-year-in-my-life.md","hash":"b77f372d26eb3dd2a704b3a10dcbbf06380ca412","modified":1527667935847},{"_id":"source/_posts/2013-09-17-ubuntu-heroku-build-node-app.md","hash":"7e3ebe09a785c82cc45a67d638f2266e548c5767","modified":1527667935848},{"_id":"source/_posts/2013-09-18-ubuntu-vim-install-markdown-plugin.md","hash":"207fbf70b3f695344df1d7819b5630d297efc67f","modified":1527667935849},{"_id":"source/_posts/2013-10-07-happy-national-day.md","hash":"843b833f3febbb4cdd1a12ad460e2599ab50ee9e","modified":1527667935849},{"_id":"source/_posts/2013-10-07-work-in-gionee-for-one-year.md","hash":"d578798b41ef36343c12ae5601f3de90f7345f24","modified":1527667935850},{"_id":"source/_posts/2013-10-14-summary-of-mobile-frontend-development.md","hash":"7cd25d47cc38dad557800a3a9644aef1c90b2fc4","modified":1527667935851},{"_id":"source/_posts/2013-10-17-web-rebuild-party.md","hash":"2af641ad6afb4e0489acdb999f4926f851bf00d9","modified":1527667935853},{"_id":"source/_posts/2013-10-23-thinking-about-frontend-future.md","hash":"e968174bdbaec89d0fbc63baa561f8217c6c9b6f","modified":1527667935855},{"_id":"source/_posts/2013-11-20-html5-and-css3-for-mobile-development.md","hash":"2437bb8ff2bde551deba626f4a08eb1e827fcf7c","modified":1527667935856},{"_id":"source/_posts/2013-12-28-2013-year.md","hash":"c10813c56772084cf84d2f2d27033a78ce0a5047","modified":1527667935857},{"_id":"source/_posts/2014-01-18-third-product-center-annual-party.md","hash":"3e004ef94722e5b1ad23af8fe4d160d5bfba0809","modified":1527667935858},{"_id":"source/_posts/2014-01-22-wordpress-blog-to-github-pages.md","hash":"b639911d60ee6a44e879278f337e0c85fe77642c","modified":1527667935859},{"_id":"source/_posts/2014-01-26-gionee-group-annual-party.md","hash":"6f24874dc514d265aef6c960470497dc0681c8f1","modified":1527667935860},{"_id":"source/_posts/2014-02-19-jekyll-use-google-code-prettify.md","hash":"7915e94736bfa2705eb26aa6aeeaf7522ee0ea9b","modified":1527667935861},{"_id":"source/_posts/2014-03-01-publish-code-to-online.md","hash":"c1f7b47ba44334ac1bfad578b0f70b310fe24066","modified":1527667935861},{"_id":"source/_posts/2014-05-30-new-power-new-life.md","hash":"80d957b14f6fd83a55448be1b09c1c192aca6c74","modified":1527667935862},{"_id":"source/_posts/2014-07-20-the-7-habits-of-outstanding-manager.md","hash":"c8c93e37e19d5eed4537a7f4fd06d223ae50251a","modified":1527667935863},{"_id":"source/_posts/2015-01-10-2014-year.md","hash":"9357f06285f9b5c9fb9c6084479f80bb5341c717","modified":1527667935864},{"_id":"source/_posts/2015-02-27-how-to-improve-the-efficiency-of-fe-develop.md","hash":"1066a16a506243cc9c18c861b80d3a0a3ef8f004","modified":1527667935865},{"_id":"source/_posts/2015-02-27-quick-start-guide-of-shell-command.md","hash":"94eeab3006838a9ffeb11ebdbfaa7a0924f3b083","modified":1527667935866},{"_id":"source/_posts/2015-03-03-happy-day-for-free-heart.md","hash":"6c67df7b69e5da6aaab2457f4561952f18daf447","modified":1527667935866},{"_id":"source/_posts/2015-03-09-mac-os-x-install-php-extension.md","hash":"683f43957180edffe83d44456a24f19877447cc5","modified":1527667935868},{"_id":"source/_posts/2015-05-03-mobile-brower-web-page-meta.md","hash":"56a01815517e1e28d057993330ba4f72037639f2","modified":1527667935869},{"_id":"source/_posts/2015-08-25-how-to-realize-the-two-numbers-together.md","hash":"1ebf3839f776ed2ebc6fb4f69cec7b6a409546d6","modified":1527667935870},{"_id":"source/_posts/2015-09-09-some-of-the-recent-summary.md","hash":"115ca0b84888c78e5297550d1b5ed90ce700542b","modified":1527667935870},{"_id":"source/_posts/2015-09-15-today-is-my-birthday.md","hash":"18030d71c9ef0f49064413de8a55524fe89be9db","modified":1527667935871},{"_id":"source/_posts/2015-09-16-an-interview-questions-of-javascript.md","hash":"0672b15b6bdda787591c7c1674ff80c09ebc4f31","modified":1527667935873},{"_id":"source/_posts/2015-12-14-java-and-javascript-calls-each-other.md","hash":"3d73baca91a54770c7a10b2aa46abd90d6ecc670","modified":1527667935875},{"_id":"source/_posts/2016-01-20-window-onscroll-nothing-to-run.md","hash":"8417a29dbd435686f35c992ec097ab3336b34df8","modified":1527667935876},{"_id":"source/_posts/2016-03-08-node-error-listen-eaddrinuse.md","hash":"180d6d6dd73293ec3ed6694850630d82339895d9","modified":1527667935877},{"_id":"source/_posts/2016-04-20-frontend-sublime-text3-plugins.md","hash":"26aa9cebe02c691ae3637c745bf22c51da3ed459","modified":1527667935879},{"_id":"source/_posts/2016-08-20-install-jekyll-on-centos7.md","hash":"1e68cc33d26c29f1d6d76e8060428c22803398cf","modified":1527667935881},{"_id":"source/_posts/2016-09-12-how-to-implement-the-HTML-tags-to-escape-and-escape.md","hash":"7aad386867e7180c27c42411042fc0089d3831e0","modified":1527667935882},{"_id":"source/_posts/2016-09-13-git-opreation-question.md","hash":"f4d97345b68bad430183f93a585fd8f708b043a1","modified":1527667935884},{"_id":"source/_posts/2016-10-11-how-to-use-gitignore.md","hash":"b7afbe47d24a368dad5ed5128b7389b8949f0132","modified":1527667935885},{"_id":"source/_posts/2016-10-15-happy-birthday-to-27.md","hash":"59487eb435a3de4684f8373165eae73bcbc90e30","modified":1527667935887},{"_id":"source/_posts/2016-10-23-about-something-of-in-the-yonyou-industrial-park.md","hash":"318c31358fbdbfcbc40e1bca25fd31cf506719a1","modified":1527667935888},{"_id":"source/_posts/2017-03-24-antd-local-hosted-iconfont.md","hash":"7de6386c4c25fa437178aced168c822dceb92f24","modified":1527667935889},{"_id":"source/_posts/2017-06-05-how-to-close-amazon-web-services.md","hash":"7abff3f5ce1c5e8d76750e588df5832b7c2b1fdf","modified":1527667935890},{"_id":"source/_posts/2017-06-12-about-use-someing-of-chart.md","hash":"5f8e1daf9b203ecb3edce4c498623c0e3d6e8ee5","modified":1527667935892},{"_id":"source/_posts/2017-06-19-javascript-lazy-man.md","hash":"dbeb03fcfd950e7a08525a79b2d62acee9d857c6","modified":1527667935894},{"_id":"source/_posts/2017-06-22-git-FAQ-01.md","hash":"07b7386997fee98493850459911061b2dfdd1d1e","modified":1527667935895},{"_id":"source/_posts/2017-06-25-javascript-array-sortx.md","hash":"ec805db86ac9243d8d11e5c998ffc858f27b4297","modified":1527667935896},{"_id":"source/_posts/2017-06-27-2017-new-starting-point.md","hash":"47e0f35647dcf8a576a3008a18c956544bc10a67","modified":1527667935897},{"_id":"source/_posts/2017-06-28-git-flow-code-mamagement.md","hash":"44f6a4c2c453c79caea5b81af969f6fbbdb4ee21","modified":1527667935899},{"_id":"source/_posts/2017-07-07-async-and-defer-diff.md","hash":"9af3d77a4e7c861a8f1772f8517b1d1168ded0f3","modified":1527667935900},{"_id":"source/_posts/2017-07-15-http-protocol-version-differences.md","hash":"7cd798f9ee1ef5a9a1f5e35af50ac5611259f23b","modified":1527667935901},{"_id":"source/_posts/2017-07-22-common-web-security-issues.md","hash":"f71ec37ab71ba1205cc0dbeb0033b7537e60865d","modified":1527667935902},{"_id":"source/_posts/2017-07-25-a-surprising-thing-in-the-heroku.md","hash":"100f28c52d26d576a343dd8bd251e679592498c5","modified":1527667935903},{"_id":"source/_posts/2017-07-26-promise-of-chapter-1th.md","hash":"359f66bab25193740760ca6767d07f6797c80fef","modified":1527667935903},{"_id":"source/_posts/2017-08-13-period-summary.md","hash":"edf21fe8b42bb479a6462b6fe19f7a7e162e8b2d","modified":1527667935905},{"_id":"source/_posts/2017-08-27-A-new-experience-in-the-work-of-Internet-finance-companies.md","hash":"8a35e75e352bf0dbd61ce113c285d04c387288fa","modified":1527667935906},{"_id":"source/_posts/2017-09-14-about-dianrong-mafia.md","hash":"80adc2f5e9fc63f7488410e28b2aa1ec2ebfdb1a","modified":1527667935907},{"_id":"source/_posts/2017-11-17-talk-about-the-past-of-front-end-development-through-bridges.md","hash":"1af172adb4f35391535d19702b28b274438f8ec0","modified":1527733190990},{"_id":"source/_posts/2017-12-14-a-sad-thing.md","hash":"fa0326bbb36c23f42b833f1e0f2d09dee85f55eb","modified":1527667935909},{"_id":"source/_posts/2017-12-27-how-to-debug-that-send-an-array-with-an-http-get.md","hash":"8a45657a93f83d0d529fc957e981e206f1c9d2ae","modified":1527667935910},{"_id":"source/_posts/2018-01-02-summary-of-the-year.md","hash":"5328aa84fb70d6ee3e3928b7d86ab751e9ef5bde","modified":1527667935911},{"_id":"source/_posts/2018-05-31-blog-migration-from-jekyll-to-hexo.md","hash":"29c8cd1423d9262a554d3d56df24c72cfb7169e2","modified":1527762721134},{"_id":"themes/anatole/.git/FETCH_HEAD","hash":"8242c83f8f53ee19d8f3620e4359953eaa2b5c22","modified":1527675474240},{"_id":"themes/anatole/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1527675463342},{"_id":"themes/anatole/.git/ORIG_HEAD","hash":"4e9e5a0b5469574bda161119710358dcd7be14df","modified":1527675474254},{"_id":"themes/anatole/.git/config","hash":"831e9fdc6bb9fa56130a1292e248c5ad420f7229","modified":1527675463344},{"_id":"themes/anatole/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1527675457538},{"_id":"themes/anatole/.git/index","hash":"d3d90ea34cfe95df44a8fc06d60f9a3a64d1b7a5","modified":1527687146068},{"_id":"themes/anatole/.git/packed-refs","hash":"6b7ed84afec6720f2895cde290133ad0440e35b1","modified":1527675463337},{"_id":"themes/anatole/languages/pt-BR.yml","hash":"ac5a0003d7793aade51f70643b2e2a631b6a65c3","modified":1527675463350},{"_id":"themes/anatole/languages/zh-CN.yml","hash":"dab1823e036f4adb3b7ae9efe95a37a15e47bec2","modified":1527675463350},{"_id":"themes/anatole/layout/archive.pug","hash":"1a161404966000b25a84762f08da3ca60af146bc","modified":1527675463351},{"_id":"themes/anatole/layout/index.pug","hash":"53da3cfd498951148acb33de1574df80ae282dc5","modified":1527675463351},{"_id":"themes/anatole/layout/category.pug","hash":"ae894ef4baee4a0c7c8e66641166061e789f1fa7","modified":1527675463351},{"_id":"themes/anatole/layout/mixins.pug","hash":"107bfd2fe10de0d8b110c13bb1168af79e62a37c","modified":1527675463352},{"_id":"themes/anatole/layout/page.pug","hash":"15142c94e5c2247aba8efb64cffd695b3f133670","modified":1527675463352},{"_id":"themes/anatole/layout/tag.pug","hash":"7017a8bae4f4a412dafb556772bdcf2cfddeb79f","modified":1527675463354},{"_id":"themes/anatole/layout/post.pug","hash":"0ab7854042a2465afe3322d56bb66c44864bb674","modified":1527686463750},{"_id":"themes/anatole/source/.DS_Store","hash":"679cb73ebd52f4c94cfd58b1ca27b3b7fe4b6baa","modified":1527728913346},{"_id":"themes/anatole/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1527675457540},{"_id":"themes/anatole/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1527675457542},{"_id":"themes/anatole/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1527675457538},{"_id":"themes/anatole/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1527675457542},{"_id":"themes/anatole/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1527675457540},{"_id":"themes/anatole/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1527675457543},{"_id":"themes/anatole/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1527675457539},{"_id":"themes/anatole/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1527675457541},{"_id":"themes/anatole/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1527675457541},{"_id":"themes/anatole/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1527675457543},{"_id":"themes/anatole/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1527675457537},{"_id":"themes/anatole/.git/logs/HEAD","hash":"0241eec04264ad6bad9c94002fca95e608641db7","modified":1527675463343},{"_id":"themes/anatole/layout/partial/comments.pug","hash":"fad5bbe7c2a134c892fcb1c731d979463145a49b","modified":1527675463352},{"_id":"themes/anatole/layout/partial/footer.pug","hash":"772f03a2dd9fa4fed422c4eb4d5d1ace84c65580","modified":1527675463353},{"_id":"themes/anatole/layout/partial/head.pug","hash":"78fabb31c1bf7db08cb563cf1e763a3e4b72865d","modified":1527677338404},{"_id":"themes/anatole/layout/partial/layout.pug","hash":"174050fa9ee919f5bcb2c5426224ec1968db672c","modified":1527675463353},{"_id":"themes/anatole/layout/partial/nav.pug","hash":"e26d7da93212f7e43bb4180b3326b4773d2cb99b","modified":1527739159967},{"_id":"themes/anatole/layout/partial/sidebar.pug","hash":"911084e11eefef7945b553f6a34c6621570f3779","modified":1527694056913},{"_id":"themes/anatole/source/assets/.DS_Store","hash":"01e211ff31d204e1387910d48a03e89d272315a7","modified":1527733140112},{"_id":"themes/anatole/source/demo/.DS_Store","hash":"b0b9a07bef5312dca6a692920dd78678918b0338","modified":1510673597000},{"_id":"themes/anatole/source/demo/fixedbgbug.html","hash":"6830f37254515960290bf577f0ab2af888a618cd","modified":1476344702000},{"_id":"themes/anatole/source/demo/interview.html","hash":"77cac2d998b2dc4158cfc09223fb5f38abe2f302","modified":1499661270000},{"_id":"themes/anatole/source/demo/js-with-async.html","hash":"4ebc195ea2c291944b6bc4d1acc7836263e2c210","modified":1499674539000},{"_id":"themes/anatole/source/demo/js-with-defer.html","hash":"1d92c73f5dbbd6ec09fffa8bb5cd9748d0dc393d","modified":1499411517000},{"_id":"themes/anatole/source/demo/js-without-async.html","hash":"34f37727c5fcfde35260c8173b7794dd24c51228","modified":1499411521000},{"_id":"themes/anatole/source/demo/js-without-defer.html","hash":"ccd7aaec03fb13eb69f4e84356040c527d4e07be","modified":1499411563000},{"_id":"themes/anatole/source/demo/window-onscroll-nothing-to-run.html","hash":"e46b4c4779063e7cb53e67ae2676b3d05c7fd0af","modified":1476344702000},{"_id":"themes/anatole/source/css/blog_basic.css","hash":"7db88f0873e858b21a4c981c8481708ad9117478","modified":1527675463355},{"_id":"themes/anatole/source/css/font-awesome.min.css","hash":"95d0b0c4d11105c81be1857b744076a1d2bed918","modified":1527675463356},{"_id":"themes/anatole/source/css/style.css","hash":"8bd80b7ca233485b86b810d3539291688725174b","modified":1527687167963},{"_id":"themes/anatole/source/css/style.css.map","hash":"c92fca37d975dfa3bc405c461062fbf12ec21755","modified":1527687168302},{"_id":"themes/anatole/source/css/style.scss","hash":"c8be36d2aab2aa5836aa333c860c3b5651cdece1","modified":1527686638788},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.eot","hash":"0183979056f0b87616cd99d5c54a48f3b771eee6","modified":1527675463358},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.woff","hash":"7d65e0227d0d7cdc1718119cd2a7dce0638f151c","modified":1527675463363},{"_id":"themes/anatole/source/images/avatar.jpg","hash":"4eddb4eb25b09961521a9103759b8cd73233bc72","modified":1476284160000},{"_id":"themes/anatole/source/images/favicon.png","hash":"85670f3bf5569d230da6a4362d1ac0aa6ff2d824","modified":1476344702000},{"_id":"themes/anatole/source/images/logo.png","hash":"41bdf2ebd8cc193ad82a211758af827d891b1a90","modified":1527675463364},{"_id":"themes/anatole/source/images/logo@2x.png","hash":"49c3fa97724abf53861bf11356ea9ba5bcb11576","modified":1527675463365},{"_id":"themes/anatole/source/js/jquery-migrate-1.2.1.min.js","hash":"743052320809514fb788fe1d3df37fc87ce90452","modified":1527675463365},{"_id":"themes/anatole/source/js/jquery.appear.js","hash":"1f8067d7bd4c0bde30785e8016100f239e14394f","modified":1527675463366},{"_id":"themes/anatole/source/pic/.DS_Store","hash":"4746884125d5a0ba9f51e0d48aee19d82838da6a","modified":1513925254491},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.ttf","hash":"6225ccc4ec94d060f19efab97ca42d842845b949","modified":1527675463363},{"_id":"themes/anatole/source/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg","hash":"beace4a4ffa88adb9d38b36c671da79ad8f20553","modified":1510711195000},{"_id":"themes/anatole/.git/objects/pack/pack-69d2c2e43575ecb8fab5f53e9b73dfe79ad25945.idx","hash":"f1d3abfa92e3ca5ff012e8cbd1183e3208ea61b4","modified":1527675463328},{"_id":"themes/anatole/.git/refs/heads/master","hash":"4e9e5a0b5469574bda161119710358dcd7be14df","modified":1527675463343},{"_id":"themes/anatole/source/assets/css/.DS_Store","hash":"f36020d34af817e44533a3c2f8db7eabc246947e","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/ie.css","hash":"fd8ced0f6068c9ae8836a14bc3d592c3f2dbe133","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/monokai_sublime.min.css","hash":"bcaac150ca9c552659ab33a758420288b2f121d9","modified":1497313718000},{"_id":"themes/anatole/source/assets/css/normalize.css","hash":"9b97b57947a4d320c0aea1653fafba7c8e83f242","modified":1476348290000},{"_id":"themes/anatole/source/assets/css/reveal.css","hash":"38f17d4b7eedcacf1e25b518e45242c1a2982bf1","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/reveal.min.css","hash":"ddffe265b38ea3dd6c8a8f06488cf2337f607a8b","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/style.css","hash":"1762caee1ae88103e69fef306174f0051b347142","modified":1510893343000},{"_id":"themes/anatole/source/assets/img/avatar.jpg","hash":"4eddb4eb25b09961521a9103759b8cd73233bc72","modified":1476284160000},{"_id":"themes/anatole/source/assets/img/avatar.svg","hash":"6657ba50e702d84afb32fe846bed54fba1a77add","modified":1476266804000},{"_id":"themes/anatole/source/assets/pic/.DS_Store","hash":"4746884125d5a0ba9f51e0d48aee19d82838da6a","modified":1513925254491},{"_id":"themes/anatole/source/demo/pic/js-with-async.png","hash":"ec95db2b596dcb693298cb9a8ad2119c21e3ffcc","modified":1500770739000},{"_id":"themes/anatole/source/demo/pic/js-without-async.png","hash":"7a14fdcc4e34b962e12cb4433d142269835f172d","modified":1500770681000},{"_id":"themes/anatole/source/demo/sugar-slide/index.html","hash":"a031b625e68c8c5bddad9dbaf44d7babd9f3f0d1","modified":1476344702000},{"_id":"themes/anatole/source/demo/sugar-slide/jquery.sugarslide.js","hash":"283d62cb181d0f826b7aaf38bfabeae90e8ec800","modified":1476344702000},{"_id":"themes/anatole/source/pic/dianrong/.DS_Store","hash":"bb5c99d2a0ef3e18e6ea97c6b71f9876d478118b","modified":1513925458597},{"_id":"themes/anatole/source/pic/dianrong/office-01@640.jpeg","hash":"0464a752c8919bb0261e9b6cce46cab80c508989","modified":1513925180320},{"_id":"themes/anatole/source/pic/dianrong/office-02@640.jpeg","hash":"06b212fcbc60d6df8d07b9264c615c9b0c7d6eeb","modified":1513925177053},{"_id":"themes/anatole/source/pic/sample.ppt.001.png","hash":"20d06f1ba5ed38c8435442b632a3fa2b84a99592","modified":1510933752000},{"_id":"themes/anatole/source/assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg","hash":"beace4a4ffa88adb9d38b36c671da79ad8f20553","modified":1510711195000},{"_id":"themes/anatole/source/pic/IMG_0230.JPG","hash":"48b358b965164f5526a9a6bfeac7d8eb45bb2aac","modified":1500826234000},{"_id":"themes/anatole/source/pic/IMG_0231.JPG","hash":"303e5e4d2815bd9fc6d4c0f926ba0c7ebffba767","modified":1500826246000},{"_id":"themes/anatole/source/pic/IMG_0232.JPG","hash":"303e5e4d2815bd9fc6d4c0f926ba0c7ebffba767","modified":1500826246000},{"_id":"themes/anatole/.git/logs/refs/heads/master","hash":"0241eec04264ad6bad9c94002fca95e608641db7","modified":1527675463343},{"_id":"themes/anatole/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1527675463340},{"_id":"themes/anatole/source/assets/css/print/paper.css","hash":"723df79c139f3cb4466addef67df64de3131c3ea","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/print/pdf.css","hash":"e2429dbc1e421de9b809ee7f43fb88820ae612b9","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/theme/README.md","hash":"ecac9016fc91d976a237a2e930f2518f9c8f6278","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/beige.css","hash":"300d89785cbaca77ebbc32a549626378cd61fd77","modified":1476344701000},{"_id":"themes/anatole/source/assets/css/theme/blood.css","hash":"e7c88c67ed4e3326fdf565b5c33b8372c8b9ee6b","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/default.css","hash":"080d61fcd5f943ff0115d484014783b592999113","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/moon.css","hash":"3ab6bca7b2f2ba3cd17e68d59624d3bab3aef41e","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/serif.css","hash":"bf962f5f4d142ae31782a3671e5c33c5a9757c74","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/night.css","hash":"85872b99fe3ce6dc3a9f30fd3ef94096f8944e63","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/simple.css","hash":"8b0e6d04a3d95a092c192de7a01f43949875cc40","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/sky.css","hash":"0a0b2257ae24f1d9b31402c86c62bbf53b67649b","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/solarized.css","hash":"df5b11af57bae65bb6767b694b8fa71411a3b5fd","modified":1476344702000},{"_id":"themes/anatole/source/assets/js/highlight.min.js","hash":"5e0224aca893e62677ee58bf4f4a5d18951353a9","modified":1497313732000},{"_id":"themes/anatole/source/assets/pic/dianrong/.DS_Store","hash":"bb5c99d2a0ef3e18e6ea97c6b71f9876d478118b","modified":1513925458597},{"_id":"themes/anatole/source/assets/pic/dianrong/office-01@640.jpeg","hash":"0464a752c8919bb0261e9b6cce46cab80c508989","modified":1513925180320},{"_id":"themes/anatole/source/assets/pic/dianrong/office-02@640.jpeg","hash":"06b212fcbc60d6df8d07b9264c615c9b0c7d6eeb","modified":1513925177053},{"_id":"themes/anatole/source/assets/pic/sample.ppt.001.png","hash":"20d06f1ba5ed38c8435442b632a3fa2b84a99592","modified":1510933752000},{"_id":"themes/anatole/source/demo/css/async-defer/style.css","hash":"93e63028adf00d0854ed5d4dd72050d26a1abe46","modified":1499405859000},{"_id":"themes/anatole/source/demo/js/async-defer/1.js","hash":"f6d0f81541e6c74a378efc899a6358898c915d1d","modified":1499409519000},{"_id":"themes/anatole/source/demo/js/async-defer/2.js","hash":"f2bc2f6c8a85a5510c464b91ab9f6df86fc55c8a","modified":1499409535000},{"_id":"themes/anatole/source/demo/js/async-defer/sleep.js","hash":"328bc963640e4055bd816fd0694869addbbd8e42","modified":1500771657000},{"_id":"themes/anatole/source/fonts/fontawesome-webfont.svg","hash":"cd980eab6db5fa57db670cb2e4278e67e1a4d6c9","modified":1527675463361},{"_id":"themes/anatole/source/js/jquery.js","hash":"bfc05b695dfa4f23e11d04b84993585da7a764bf","modified":1527675463368},{"_id":"themes/anatole/source/pic/IMG_0233.JPG","hash":"501f038b22c3f7011db831374f7c0e1309263937","modified":1500826247000},{"_id":"themes/anatole/source/assets/pic/IMG_0230.JPG","hash":"48b358b965164f5526a9a6bfeac7d8eb45bb2aac","modified":1500826234000},{"_id":"themes/anatole/source/assets/pic/IMG_0231.JPG","hash":"303e5e4d2815bd9fc6d4c0f926ba0c7ebffba767","modified":1500826246000},{"_id":"themes/anatole/source/assets/pic/IMG_0232.JPG","hash":"303e5e4d2815bd9fc6d4c0f926ba0c7ebffba767","modified":1500826246000},{"_id":"themes/anatole/.git/logs/refs/remotes/origin/HEAD","hash":"0241eec04264ad6bad9c94002fca95e608641db7","modified":1527675463340},{"_id":"themes/anatole/source/assets/css/theme/template/mixins.scss","hash":"4d6f4df61e76c543e0963a6f59795d101c94d09b","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/template/settings.scss","hash":"06d097a128c4543b3aff1c425e104ff3fc3e597c","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/template/theme.scss","hash":"adbeaf80fcf1fc66f5fdee411098ffd728fa15b6","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/beige.scss","hash":"0a6fd954691f7c23c663c6aa202f5b9a7f9b2c51","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/blood.scss","hash":"82559ca1f9109f4f4a903e96e27efa526f53c2e9","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/default.scss","hash":"4ab4bbb2e41374f02e03ad62db6e37ca99873993","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/moon.scss","hash":"9828a9cf103a94b55e4599b409d9b85d17f2e90d","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/night.scss","hash":"bee61285145c9dca27eb973cd3eab3bfba9a1e89","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/serif.scss","hash":"6b780d1022d880ace670a594d9b2f1c12c11d0d8","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/simple.scss","hash":"bf0dd9ea8299c152cbed7fccbfd8720a6b6bbd91","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/sky.scss","hash":"45f60140a02c8c379ce7455e62c2d4b691e197ae","modified":1476344702000},{"_id":"themes/anatole/source/assets/css/theme/source/solarized.scss","hash":"b206e4ef9f70b99f3357aa74c14c94f0385f9ad4","modified":1476344702000},{"_id":"themes/anatole/source/assets/pic/IMG_0233.JPG","hash":"501f038b22c3f7011db831374f7c0e1309263937","modified":1500826247000},{"_id":"themes/anatole/source/css/.sass-cache/54bcdaf1a1a1ce334d492071a396c4cdcd9c0bdc/style.scssc","hash":"a5e4fc94045bb9b9ba700ea0945ee5549ce5842c","modified":1527687167938},{"_id":"themes/anatole/.git/objects/pack/pack-69d2c2e43575ecb8fab5f53e9b73dfe79ad25945.pack","hash":"d97c9e8043d095f81a8b0d09115f832f68a83707","modified":1527675463327},{"_id":"source/_drafts/2018-05-31-blog-migration-from-jekyll-to-hexo.md","hash":"29c8cd1423d9262a554d3d56df24c72cfb7169e2","modified":1527762730931},{"_id":"source/_drafts/2013-03-18-links.md","hash":"315bffb19f1b46ec2d2d05153fa58165f8f7ae43","modified":1527781010519}],"Category":[{"name":"水","_id":"cjhubytix0002yis57sqfv634"},{"name":"工作与生活","_id":"cjhubytj30006yis5r4260gtj"},{"name":"前端开发","_id":"cjhubytjc000dyis5url7gvml"},{"name":"引用","_id":"cjhubytju0011yis5ufkhmyfm"},{"name":"培训与交流","_id":"cjhubytk3001dyis5ccfp27qr"},{"name":"服务器","_id":"cjhubytko0028yis5nh9bvn0e"},{"name":"移动开发","_id":"cjhubytks002eyis58b0vhj7i"},{"name":"javascript","_id":"cjhubytkx002jyis5xto1ujjg"},{"name":"Node开发","_id":"cjhubytl9002yyis5vqx8zgvy"},{"name":"版本管理","_id":"cjhubytlc0034yis57hhaowq0"},{"name":"其他","_id":"cjhubytlj003fyis5elmtsk4h"},{"name":"git常见问题","_id":"cjhubytlm003lyis5mgpf2pho"},{"name":"研发管理","_id":"cjhubytlq003syis5e8m2f2bv"},{"name":"前端安全","_id":"cjhubytlu003zyis5kitj8h1r"},{"name":"神","_id":"cjhubytm3004eyis5yaf0e93a"},{"name":"总结","_id":"cjhubytm6004jyis56kbh9r96"},{"name":"博客人生","_id":"cjhubytm7004nyis5cl0nnj45"}],"Data":[],"Page":[],"Post":[{"layout":"page","title":"关于我","date":"2013-03-18T12:00:00.000Z","comments":1,"_content":"\n2010年毕业一直从事互联网/IT行业，曾就职于[中兴通讯](http://www.zte.com.cn/)、[金立](http://www.gionee.com/)、[用友网络](http://www.yonyou.com/)等知名企业。担任过PHP前端工程师、高级前端工程师以及项目经理等职务，现工作于[点融科技](http://www.dianrong.com/)。\n\n本博客撰写目的主要是阐述作者对生活、工作、技术等方面的一些思考和感悟。写博客前前后后也有好几年了，由于种种原因以及写作水平有限导致博客更新比较慢。后面我将尽最大努力保证文章的更新频率，提升文章内容的质量。\n\n本人对大自然充满好奇，喜欢通过旅游和摄影体验生活，丰富自我！专注于技术研究，喜欢折腾！常年混迹于[UED](http://www.daqianduan.com/nav)、[stackoverflow](http://stackoverflow.com/)、[Startup News](http://news.dbanotes.net/)、[Hacker News](https://news.ycombinator.com/news)、[博客园](http://www.cnblogs.com/)、[Github](https://github.com/)等。\n\n通过以下更多方式了解我：\n\n- [简历](http://hankewins.com/profile)\n- [微博](http://weibo.com/hankewins)\n- [Github](https://github.com/hankewins)\n- [Twitter](https://twitter.com/hankewins)\n- [Facebook](https://www.facebook.com/hankewins)\n\n我的Email地址是：me(at)hankewins.com。\n\n","source":"_posts/2013-03-18-about.md","raw":"---\nlayout: page\ntitle: 关于我\ndate: 2013-03-18 20:00\ncomments: true\ncategories: [水]\n---\n\n2010年毕业一直从事互联网/IT行业，曾就职于[中兴通讯](http://www.zte.com.cn/)、[金立](http://www.gionee.com/)、[用友网络](http://www.yonyou.com/)等知名企业。担任过PHP前端工程师、高级前端工程师以及项目经理等职务，现工作于[点融科技](http://www.dianrong.com/)。\n\n本博客撰写目的主要是阐述作者对生活、工作、技术等方面的一些思考和感悟。写博客前前后后也有好几年了，由于种种原因以及写作水平有限导致博客更新比较慢。后面我将尽最大努力保证文章的更新频率，提升文章内容的质量。\n\n本人对大自然充满好奇，喜欢通过旅游和摄影体验生活，丰富自我！专注于技术研究，喜欢折腾！常年混迹于[UED](http://www.daqianduan.com/nav)、[stackoverflow](http://stackoverflow.com/)、[Startup News](http://news.dbanotes.net/)、[Hacker News](https://news.ycombinator.com/news)、[博客园](http://www.cnblogs.com/)、[Github](https://github.com/)等。\n\n通过以下更多方式了解我：\n\n- [简历](http://hankewins.com/profile)\n- [微博](http://weibo.com/hankewins)\n- [Github](https://github.com/hankewins)\n- [Twitter](https://twitter.com/hankewins)\n- [Facebook](https://www.facebook.com/hankewins)\n\n我的Email地址是：me(at)hankewins.com。\n\n","slug":"about","published":1,"updated":"2018-05-30T13:52:32.707Z","photos":[],"link":"","_id":"cjhubytip0000yis58k0fy262","content":"<p>2010年毕业一直从事互联网/IT行业，曾就职于<a href=\"http://www.zte.com.cn/\" target=\"_blank\" rel=\"noopener\">中兴通讯</a>、<a href=\"http://www.gionee.com/\" target=\"_blank\" rel=\"noopener\">金立</a>、<a href=\"http://www.yonyou.com/\" target=\"_blank\" rel=\"noopener\">用友网络</a>等知名企业。担任过PHP前端工程师、高级前端工程师以及项目经理等职务，现工作于<a href=\"http://www.dianrong.com/\" target=\"_blank\" rel=\"noopener\">点融科技</a>。</p>\n<p>本博客撰写目的主要是阐述作者对生活、工作、技术等方面的一些思考和感悟。写博客前前后后也有好几年了，由于种种原因以及写作水平有限导致博客更新比较慢。后面我将尽最大努力保证文章的更新频率，提升文章内容的质量。</p>\n<p>本人对大自然充满好奇，喜欢通过旅游和摄影体验生活，丰富自我！专注于技术研究，喜欢折腾！常年混迹于<a href=\"http://www.daqianduan.com/nav\" target=\"_blank\" rel=\"noopener\">UED</a>、<a href=\"http://stackoverflow.com/\" target=\"_blank\" rel=\"noopener\">stackoverflow</a>、<a href=\"http://news.dbanotes.net/\" target=\"_blank\" rel=\"noopener\">Startup News</a>、<a href=\"https://news.ycombinator.com/news\" target=\"_blank\" rel=\"noopener\">Hacker News</a>、<a href=\"http://www.cnblogs.com/\" target=\"_blank\" rel=\"noopener\">博客园</a>、<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a>等。</p>\n<p>通过以下更多方式了解我：</p>\n<ul>\n<li><a href=\"http://hankewins.com/profile\" target=\"_blank\" rel=\"noopener\">简历</a></li>\n<li><a href=\"http://weibo.com/hankewins\" target=\"_blank\" rel=\"noopener\">微博</a></li>\n<li><a href=\"https://github.com/hankewins\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li><a href=\"https://twitter.com/hankewins\" target=\"_blank\" rel=\"noopener\">Twitter</a></li>\n<li><a href=\"https://www.facebook.com/hankewins\" target=\"_blank\" rel=\"noopener\">Facebook</a></li>\n</ul>\n<p>我的Email地址是：me(at)hankewins.com。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2010年毕业一直从事互联网/IT行业，曾就职于<a href=\"http://www.zte.com.cn/\" target=\"_blank\" rel=\"noopener\">中兴通讯</a>、<a href=\"http://www.gionee.com/\" target=\"_blank\" rel=\"noopener\">金立</a>、<a href=\"http://www.yonyou.com/\" target=\"_blank\" rel=\"noopener\">用友网络</a>等知名企业。担任过PHP前端工程师、高级前端工程师以及项目经理等职务，现工作于<a href=\"http://www.dianrong.com/\" target=\"_blank\" rel=\"noopener\">点融科技</a>。</p>\n<p>本博客撰写目的主要是阐述作者对生活、工作、技术等方面的一些思考和感悟。写博客前前后后也有好几年了，由于种种原因以及写作水平有限导致博客更新比较慢。后面我将尽最大努力保证文章的更新频率，提升文章内容的质量。</p>\n<p>本人对大自然充满好奇，喜欢通过旅游和摄影体验生活，丰富自我！专注于技术研究，喜欢折腾！常年混迹于<a href=\"http://www.daqianduan.com/nav\" target=\"_blank\" rel=\"noopener\">UED</a>、<a href=\"http://stackoverflow.com/\" target=\"_blank\" rel=\"noopener\">stackoverflow</a>、<a href=\"http://news.dbanotes.net/\" target=\"_blank\" rel=\"noopener\">Startup News</a>、<a href=\"https://news.ycombinator.com/news\" target=\"_blank\" rel=\"noopener\">Hacker News</a>、<a href=\"http://www.cnblogs.com/\" target=\"_blank\" rel=\"noopener\">博客园</a>、<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a>等。</p>\n<p>通过以下更多方式了解我：</p>\n<ul>\n<li><a href=\"http://hankewins.com/profile\" target=\"_blank\" rel=\"noopener\">简历</a></li>\n<li><a href=\"http://weibo.com/hankewins\" target=\"_blank\" rel=\"noopener\">微博</a></li>\n<li><a href=\"https://github.com/hankewins\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li><a href=\"https://twitter.com/hankewins\" target=\"_blank\" rel=\"noopener\">Twitter</a></li>\n<li><a href=\"https://www.facebook.com/hankewins\" target=\"_blank\" rel=\"noopener\">Facebook</a></li>\n</ul>\n<p>我的Email地址是：me(at)hankewins.com。</p>\n"},{"layout":"post","title":"起点","date":"2013-03-18T14:47:00.000Z","comments":1,"_content":"\n毕业三年有余，栖息于一线城市，在城市生活节奏的鞭笞下，让我感触颇多，生活、工作、爱情、友情都是那么的实现，勇于面对做好自己。\n\n开博二年有余，第一次开博可以定位为“忆生活”——本着忆生活、忆往事、忆工作，第二次开博定位为“起点”——本着新生活、新工作、新发展、新方向，以正视生活、正视工作、敢于挑战、懂得分享。\n","source":"_posts/2013-03-18-bootstrap.md","raw":"---\nlayout: post\ntitle: 起点\ndate: 2013-03-18 22:47\ncomments: true\ncategories: [工作与生活]\n---\n\n毕业三年有余，栖息于一线城市，在城市生活节奏的鞭笞下，让我感触颇多，生活、工作、爱情、友情都是那么的实现，勇于面对做好自己。\n\n开博二年有余，第一次开博可以定位为“忆生活”——本着忆生活、忆往事、忆工作，第二次开博定位为“起点”——本着新生活、新工作、新发展、新方向，以正视生活、正视工作、敢于挑战、懂得分享。\n","slug":"bootstrap","published":1,"updated":"2018-05-30T08:12:15.838Z","photos":[],"link":"","_id":"cjhubytit0001yis577fz5gua","content":"<p>毕业三年有余，栖息于一线城市，在城市生活节奏的鞭笞下，让我感触颇多，生活、工作、爱情、友情都是那么的实现，勇于面对做好自己。</p>\n<p>开博二年有余，第一次开博可以定位为“忆生活”——本着忆生活、忆往事、忆工作，第二次开博定位为“起点”——本着新生活、新工作、新发展、新方向，以正视生活、正视工作、敢于挑战、懂得分享。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>毕业三年有余，栖息于一线城市，在城市生活节奏的鞭笞下，让我感触颇多，生活、工作、爱情、友情都是那么的实现，勇于面对做好自己。</p>\n<p>开博二年有余，第一次开博可以定位为“忆生活”——本着忆生活、忆往事、忆工作，第二次开博定位为“起点”——本着新生活、新工作、新发展、新方向，以正视生活、正视工作、敢于挑战、懂得分享。</p>\n"},{"layout":"page","title":"友情链接","comments":1,"date":"2013-03-18T12:00:00.000Z","_content":"欢迎交流~（[我的联系方式](/blog/about)）\n\n- [小剧客栈 »](https://www.bh-lay.com/) 90后天蝎男，前端工程师，全栈开发尝试者\n- [阮一峰 »](http://www.ruanyifeng.com/home.html) 阮老师，互联网知识传播者，技术大牛\n- [张鑫旭 »](http://www.zhangxinxu.com/) 这么多年的坚持，值得佩服的博主","source":"_posts/2013-03-18-links.md","raw":"layout: page\ntitle: 友情链接\ncomments: true\ncategories:\n  - 水\ndate: 2013-03-18 20:00:00\n---\n欢迎交流~（[我的联系方式](/blog/about)）\n\n- [小剧客栈 »](https://www.bh-lay.com/) 90后天蝎男，前端工程师，全栈开发尝试者\n- [阮一峰 »](http://www.ruanyifeng.com/home.html) 阮老师，互联网知识传播者，技术大牛\n- [张鑫旭 »](http://www.zhangxinxu.com/) 这么多年的坚持，值得佩服的博主","slug":"links","published":1,"updated":"2018-05-31T15:36:51.198Z","_id":"cjhubytiz0003yis5i7gfwen1","photos":[],"link":"","content":"<p>欢迎交流~（<a href=\"/blog/about\">我的联系方式</a>）</p>\n<ul>\n<li><a href=\"https://www.bh-lay.com/\" target=\"_blank\" rel=\"noopener\">小剧客栈 »</a> 90后天蝎男，前端工程师，全栈开发尝试者</li>\n<li><a href=\"http://www.ruanyifeng.com/home.html\" target=\"_blank\" rel=\"noopener\">阮一峰 »</a> 阮老师，互联网知识传播者，技术大牛</li>\n<li><a href=\"http://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭 »</a> 这么多年的坚持，值得佩服的博主</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>欢迎交流~（<a href=\"/blog/about\">我的联系方式</a>）</p>\n<ul>\n<li><a href=\"https://www.bh-lay.com/\" target=\"_blank\" rel=\"noopener\">小剧客栈 »</a> 90后天蝎男，前端工程师，全栈开发尝试者</li>\n<li><a href=\"http://www.ruanyifeng.com/home.html\" target=\"_blank\" rel=\"noopener\">阮一峰 »</a> 阮老师，互联网知识传播者，技术大牛</li>\n<li><a href=\"http://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭 »</a> 这么多年的坚持，值得佩服的博主</li>\n</ul>\n"},{"layout":"post","title":"h5前端开发规范文档","date":"2013-03-20T15:13:00.000Z","comments":1,"_content":"\n*“简洁易懂是一种美德。 为用户着想, 为服务器着想。—前端职业篇”*\n\n*“不是路不平，而是你不行，到底行不行，就看你停不停，只要你不停，早晚都得行。 —前端晋级篇 ”*\n\n##规范目的\n\n> 为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档.本规范文档一经确认,前端开发人员必须按本文档规范进行前台页面开发.本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改.\n\n##基本准则\n\n> 符合web标准, 语义化html, 结构表现行为分离, 兼容性优良. 页面性能方面, 代码要求简洁明了有序, 尽可能的减小服务器负载, 保证最快的解析速度.\n\n##文件规范\n\n1. html, css, js, images文件均归档至本规范约定的目录中;\n2. html文件命名: 英文命名, 后缀.html,同时将对应界面设计稿放于同目录doc下PSD文件夹中, 若界面设计稿命名为中文, 请重命名与之对应的html文件同名, 以方便后端添加功能时查找对应页面;\n3. css文件命名: 英文命名, 后缀.css. 初始化样式reset.css, 共用base.css, 首页index.css, 其他页面依实际模块需求命名;\n4. Js文件命名: 英文命名, 后缀.js. 共用common.js, 其他依实际模块需求命名.\n\n##HTML书写规范\n\n1. 文档类型声明及编码: 统一为html5声明类型; 编码统一为utf-8, 书写时利用IDE实现层次分明的缩进;\n2. 非特殊情况下样式文件必须外链到页面head标签之间;非特殊情况下JavaScript文件必须外链至页面底部;\n3. 引入样式文件或JavaScript文件时, 须略去默认类型声明.\n4. 引入JS库文件, 文件名仅包含库名称的压缩版, 比如zepto.js 源文件为zepto.source.js; 引入插件, 文件名格式为库名称+插件名称, 比如zepto.tabs.js 源文件为 zepto.tabs.source.js;\n5. 所有编码均遵循xhtml标准, 标签 & 属性 & 属性命名 必须由小写字母及下划线数字组成, 且所有标签必须闭合; 属性值必须用双引号包括;\n6. 充分利用无兼容性问题的html自身标签, 比如div, span, em, i, strong, label等等; 需要为html元素添加自定义属性的时候, 首先要考虑下有没有默认的已有的合适标签去设置, 如果没有, 可以使用须以”data-”为前缀来添加自定义属性（例如：data-ajaxUrl,data-infpage）, 避免使用”data:”等其他命名方式;\n7. 语义化html, 如标题根据重要性用h(同一页面只能有一个h1), 段落标记用p, 列表用ul,内联元素中不可嵌套块级元素;\n8. 尽可能减少div嵌套\n9. 书写链接地址时, 必须避免重定向，例如：href=”http://www.example.com/”, 即须在URL地址后面加上“/”；\n10. 在页面中尽量避免使用style属性,即style=”…”;\n11. 必须为含有描述性表单元素(input, textarea)添加label;\n12. 能以背景形式呈现的图片, 尽量写入css样式中;\n13. 重要图片必须加上alt属性; 给重要的元素和截断的元素加上title;\n14. 给区块代码及重要功能(比如循环)加上注释, 方便后台添加功能;\n15. 特殊符号使用: 尽可能使用代码替代: 比如 <(<) & >(>) & 空格( ) & »(») 等等;\n16. 书写页面过程中, 请考虑向后扩展性;\n17. class & id 参见 css书写规范.\n\n##css书写规范\n\n1. 编码统一为utf-8;\n2. 协作开发及分工:组长根据项目需求或功能模块进行分工，每个成员都必须引入基本架构库进行开发;\n3. class与id的使用: id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中; id原则上都是根据模块功能||通过规则命名的, 为JavaScript预留钩子的除外;\n4. 为JavaScript预留钩子的命名, 请以 J_ 起始, 比如: J_itemView, J_slider;\n5. class与id命名: 大的框架命名比如header/footer/wrapper/content/menu等.其他样式名称由 小写英文 & 数字 & - 来组合命名, 如in-tabs, in-form, mrt20等; 避免使用中文拼音, 尽量使用简易的单词组合; 总之, 命名要语义化, 简明化.\n6. 规避class与id命名(此条重要):\n\n+ 通过从属写法规避, 示例见d; \n+ 取父级元素id/class命名部分命名, 示例见d; \n+ 重复使用率高的命名, 请以统一代号加中划线起始, 比如in-;\n+ a,b两条, 适用于在2中已建好框架的页面, 如, 要在2中已建好框架的页面代码中加入新的div元素\n\n7. css属性书写顺序, 建议遵循: 布局定位属性–>自身属性–>文本属性–>其他属性. 此条可根据自身习惯书写, 但尽量保证同类属性写在一起. 属性列举: 布局定位属性主要包括: display & list-style & position（相应的 top,right,bottom,left） ＆ float & clear ＆ visibility ＆ overflow； 自身属性主要包括: width & height & margin & padding & border & background; 文本属性主要包括：color & font & text-decoration & text-align & vertical-align & white- space & 其他 & content; 所列出的这些属性只是最常用到的, 并不代表全部;\n8. 书写代码前, 考虑并提高样式重复使用率;\n9. 充分利用html自身属性及样式继承原理减少代码量, 比如:这儿是标题列表2011-11-11\n\n定义\n\nul.list li{position:relative} ul.list li span{position:absolute; right:0}\n即可实现日期居右显示\n10. 样式表中中文字体名, 请务必转码成unicode码, 以避免编码错误时乱码;\n11. 背景图片请尽可能使用sprite技术, 减小http请求, 考虑到多人协作开发, sprite按模块制作;\n12. 使用table标签时(尽量避免使用table标签), 请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现 , 如thead,tr,th,td,tbody,tfoot,colgroup,scope; (cellspaing及cellpadding的css控制方法:table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;}, base.css文件中我会初始化表格样式)\n13. 如何可以请少使用兼容;\n14. 用png图片做图片时, 要求图片格式优先考虑png-8格式后考虑png-24;\n15. 避免兼容性属性的使用, 比如text-shadow || css3的相关属性;\n16. 减少使用影响性能的属性, 比如position:absolute || float ;\n17. 必须为大区块样式添加注释, 小区块适量注释;\n18. 代码缩进与格式: 建议单行书写, 可根据自身习惯, 后期优化会统一处理;\n\n##JavaScript书写规范\n\n1. 文件编码统一为utf-8, 书写过程过, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 || 与现有代码冲突 || …);\n2. 库引入: 原则上仅引入icat库, 若需引入第三方库, 须与团队其他人员讨论决定（后备成熟库 zepto.js、underscore.js、xui.js、jquery.js）;\n3. 变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写且根据变量类型可定义为i、s、o, 如inum,sname,ophoto;\n另, 要求变量集中声明, 避免全局变量.\n4. 类命名: 首字母大写, 驼峰式命名. 如 Photos,Models;\n5. 函数命名: 首字母小写驼峰式命名. 如getName();\n6. 命名语义化, 尽可能利用英文单词或其缩写;\n7. 尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() & Function;\n8. 后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;\n9. 代码结构明了, 加适量注释. 提高函数重用率;\n10. 注重与html分离, 减小reflow, 注重性能.\n\n##图片规范\n\n1. 所有页面元素类图片均放入assets/img文件夹, 测试用图片放于pic文件夹;\n2. 图片格式仅限于gif || png || jpg;\n3. 命名全部用小写英文字母 || 数字 || _ 的组合，其中不得包含汉字 || 空格 || 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, ad_banner.png || btn_login.png;\n4. 在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;\n5. 尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);\n6. 运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.\n\n##注释规范\n\n1. html注释: 注释格式;\n2. css注释: 注释格式;\n3. JavaScript注释;\n\n###开发及测试工具约定###\n\n开发环境：Sublime Text2.0（推荐） || Notepad++ || WebStorm || Dw || Crunch(Less开发工具) || Aptana || Vim\n\n*Sublime Text2.0前端安装环境请参照：[《Sublime Text搭建前端开发环境过程》](/install-sublime-text-environment);*\n\n###工具使用原则:\n\n1. 不可利用IDE的视图模式 '画' 代码;\n2. 不可利用IDE生成相关功能代码, 比如Dw内置的一些功能js;\n3. 编码必须格式化, 比如缩进;\n\n测试对象：chrome浏览器、UC浏览器、QQ浏览器、百度浏览器、公司浏览器以及Android原生浏览器;\n\n###其他规范\n\n1. 遵行标准、适应过程、写的更少、做的更多。\n2. 减小冗余代码, 书写所有人都可以看的懂的代码。\n\n###前端规范参考\n\n+ [yahoo前端优化性能规则](http://developer.yahoo.com/performance/rules.html)\n+ [Google规范文档](https://code.google.com/p/google-styleguide/)\n\n\n","source":"_posts/2013-03-20-frontend-tandard.md","raw":"---\nlayout: post\ntitle: h5前端开发规范文档\ndate: 2013-03-20 23:13\ncomments: true\ncategories: [前端开发]\n---\n\n*“简洁易懂是一种美德。 为用户着想, 为服务器着想。—前端职业篇”*\n\n*“不是路不平，而是你不行，到底行不行，就看你停不停，只要你不停，早晚都得行。 —前端晋级篇 ”*\n\n##规范目的\n\n> 为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档.本规范文档一经确认,前端开发人员必须按本文档规范进行前台页面开发.本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改.\n\n##基本准则\n\n> 符合web标准, 语义化html, 结构表现行为分离, 兼容性优良. 页面性能方面, 代码要求简洁明了有序, 尽可能的减小服务器负载, 保证最快的解析速度.\n\n##文件规范\n\n1. html, css, js, images文件均归档至本规范约定的目录中;\n2. html文件命名: 英文命名, 后缀.html,同时将对应界面设计稿放于同目录doc下PSD文件夹中, 若界面设计稿命名为中文, 请重命名与之对应的html文件同名, 以方便后端添加功能时查找对应页面;\n3. css文件命名: 英文命名, 后缀.css. 初始化样式reset.css, 共用base.css, 首页index.css, 其他页面依实际模块需求命名;\n4. Js文件命名: 英文命名, 后缀.js. 共用common.js, 其他依实际模块需求命名.\n\n##HTML书写规范\n\n1. 文档类型声明及编码: 统一为html5声明类型; 编码统一为utf-8, 书写时利用IDE实现层次分明的缩进;\n2. 非特殊情况下样式文件必须外链到页面head标签之间;非特殊情况下JavaScript文件必须外链至页面底部;\n3. 引入样式文件或JavaScript文件时, 须略去默认类型声明.\n4. 引入JS库文件, 文件名仅包含库名称的压缩版, 比如zepto.js 源文件为zepto.source.js; 引入插件, 文件名格式为库名称+插件名称, 比如zepto.tabs.js 源文件为 zepto.tabs.source.js;\n5. 所有编码均遵循xhtml标准, 标签 & 属性 & 属性命名 必须由小写字母及下划线数字组成, 且所有标签必须闭合; 属性值必须用双引号包括;\n6. 充分利用无兼容性问题的html自身标签, 比如div, span, em, i, strong, label等等; 需要为html元素添加自定义属性的时候, 首先要考虑下有没有默认的已有的合适标签去设置, 如果没有, 可以使用须以”data-”为前缀来添加自定义属性（例如：data-ajaxUrl,data-infpage）, 避免使用”data:”等其他命名方式;\n7. 语义化html, 如标题根据重要性用h(同一页面只能有一个h1), 段落标记用p, 列表用ul,内联元素中不可嵌套块级元素;\n8. 尽可能减少div嵌套\n9. 书写链接地址时, 必须避免重定向，例如：href=”http://www.example.com/”, 即须在URL地址后面加上“/”；\n10. 在页面中尽量避免使用style属性,即style=”…”;\n11. 必须为含有描述性表单元素(input, textarea)添加label;\n12. 能以背景形式呈现的图片, 尽量写入css样式中;\n13. 重要图片必须加上alt属性; 给重要的元素和截断的元素加上title;\n14. 给区块代码及重要功能(比如循环)加上注释, 方便后台添加功能;\n15. 特殊符号使用: 尽可能使用代码替代: 比如 <(<) & >(>) & 空格( ) & »(») 等等;\n16. 书写页面过程中, 请考虑向后扩展性;\n17. class & id 参见 css书写规范.\n\n##css书写规范\n\n1. 编码统一为utf-8;\n2. 协作开发及分工:组长根据项目需求或功能模块进行分工，每个成员都必须引入基本架构库进行开发;\n3. class与id的使用: id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中; id原则上都是根据模块功能||通过规则命名的, 为JavaScript预留钩子的除外;\n4. 为JavaScript预留钩子的命名, 请以 J_ 起始, 比如: J_itemView, J_slider;\n5. class与id命名: 大的框架命名比如header/footer/wrapper/content/menu等.其他样式名称由 小写英文 & 数字 & - 来组合命名, 如in-tabs, in-form, mrt20等; 避免使用中文拼音, 尽量使用简易的单词组合; 总之, 命名要语义化, 简明化.\n6. 规避class与id命名(此条重要):\n\n+ 通过从属写法规避, 示例见d; \n+ 取父级元素id/class命名部分命名, 示例见d; \n+ 重复使用率高的命名, 请以统一代号加中划线起始, 比如in-;\n+ a,b两条, 适用于在2中已建好框架的页面, 如, 要在2中已建好框架的页面代码中加入新的div元素\n\n7. css属性书写顺序, 建议遵循: 布局定位属性–>自身属性–>文本属性–>其他属性. 此条可根据自身习惯书写, 但尽量保证同类属性写在一起. 属性列举: 布局定位属性主要包括: display & list-style & position（相应的 top,right,bottom,left） ＆ float & clear ＆ visibility ＆ overflow； 自身属性主要包括: width & height & margin & padding & border & background; 文本属性主要包括：color & font & text-decoration & text-align & vertical-align & white- space & 其他 & content; 所列出的这些属性只是最常用到的, 并不代表全部;\n8. 书写代码前, 考虑并提高样式重复使用率;\n9. 充分利用html自身属性及样式继承原理减少代码量, 比如:这儿是标题列表2011-11-11\n\n定义\n\nul.list li{position:relative} ul.list li span{position:absolute; right:0}\n即可实现日期居右显示\n10. 样式表中中文字体名, 请务必转码成unicode码, 以避免编码错误时乱码;\n11. 背景图片请尽可能使用sprite技术, 减小http请求, 考虑到多人协作开发, sprite按模块制作;\n12. 使用table标签时(尽量避免使用table标签), 请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现 , 如thead,tr,th,td,tbody,tfoot,colgroup,scope; (cellspaing及cellpadding的css控制方法:table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;}, base.css文件中我会初始化表格样式)\n13. 如何可以请少使用兼容;\n14. 用png图片做图片时, 要求图片格式优先考虑png-8格式后考虑png-24;\n15. 避免兼容性属性的使用, 比如text-shadow || css3的相关属性;\n16. 减少使用影响性能的属性, 比如position:absolute || float ;\n17. 必须为大区块样式添加注释, 小区块适量注释;\n18. 代码缩进与格式: 建议单行书写, 可根据自身习惯, 后期优化会统一处理;\n\n##JavaScript书写规范\n\n1. 文件编码统一为utf-8, 书写过程过, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 || 与现有代码冲突 || …);\n2. 库引入: 原则上仅引入icat库, 若需引入第三方库, 须与团队其他人员讨论决定（后备成熟库 zepto.js、underscore.js、xui.js、jquery.js）;\n3. 变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写且根据变量类型可定义为i、s、o, 如inum,sname,ophoto;\n另, 要求变量集中声明, 避免全局变量.\n4. 类命名: 首字母大写, 驼峰式命名. 如 Photos,Models;\n5. 函数命名: 首字母小写驼峰式命名. 如getName();\n6. 命名语义化, 尽可能利用英文单词或其缩写;\n7. 尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() & Function;\n8. 后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;\n9. 代码结构明了, 加适量注释. 提高函数重用率;\n10. 注重与html分离, 减小reflow, 注重性能.\n\n##图片规范\n\n1. 所有页面元素类图片均放入assets/img文件夹, 测试用图片放于pic文件夹;\n2. 图片格式仅限于gif || png || jpg;\n3. 命名全部用小写英文字母 || 数字 || _ 的组合，其中不得包含汉字 || 空格 || 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, ad_banner.png || btn_login.png;\n4. 在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;\n5. 尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);\n6. 运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.\n\n##注释规范\n\n1. html注释: 注释格式;\n2. css注释: 注释格式;\n3. JavaScript注释;\n\n###开发及测试工具约定###\n\n开发环境：Sublime Text2.0（推荐） || Notepad++ || WebStorm || Dw || Crunch(Less开发工具) || Aptana || Vim\n\n*Sublime Text2.0前端安装环境请参照：[《Sublime Text搭建前端开发环境过程》](/install-sublime-text-environment);*\n\n###工具使用原则:\n\n1. 不可利用IDE的视图模式 '画' 代码;\n2. 不可利用IDE生成相关功能代码, 比如Dw内置的一些功能js;\n3. 编码必须格式化, 比如缩进;\n\n测试对象：chrome浏览器、UC浏览器、QQ浏览器、百度浏览器、公司浏览器以及Android原生浏览器;\n\n###其他规范\n\n1. 遵行标准、适应过程、写的更少、做的更多。\n2. 减小冗余代码, 书写所有人都可以看的懂的代码。\n\n###前端规范参考\n\n+ [yahoo前端优化性能规则](http://developer.yahoo.com/performance/rules.html)\n+ [Google规范文档](https://code.google.com/p/google-styleguide/)\n\n\n","slug":"frontend-tandard","published":1,"updated":"2018-05-30T08:12:15.838Z","photos":[],"link":"","_id":"cjhubytj10004yis5i7lzm66i","content":"<p><em>“简洁易懂是一种美德。 为用户着想, 为服务器着想。—前端职业篇”</em></p>\n<p><em>“不是路不平，而是你不行，到底行不行，就看你停不停，只要你不停，早晚都得行。 —前端晋级篇 ”</em></p>\n<p>##规范目的</p>\n<blockquote>\n<p>为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档.本规范文档一经确认,前端开发人员必须按本文档规范进行前台页面开发.本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改.</p>\n</blockquote>\n<p>##基本准则</p>\n<blockquote>\n<p>符合web标准, 语义化html, 结构表现行为分离, 兼容性优良. 页面性能方面, 代码要求简洁明了有序, 尽可能的减小服务器负载, 保证最快的解析速度.</p>\n</blockquote>\n<p>##文件规范</p>\n<ol>\n<li>html, css, js, images文件均归档至本规范约定的目录中;</li>\n<li>html文件命名: 英文命名, 后缀.html,同时将对应界面设计稿放于同目录doc下PSD文件夹中, 若界面设计稿命名为中文, 请重命名与之对应的html文件同名, 以方便后端添加功能时查找对应页面;</li>\n<li>css文件命名: 英文命名, 后缀.css. 初始化样式reset.css, 共用base.css, 首页index.css, 其他页面依实际模块需求命名;</li>\n<li>Js文件命名: 英文命名, 后缀.js. 共用common.js, 其他依实际模块需求命名.</li>\n</ol>\n<p>##HTML书写规范</p>\n<ol>\n<li>文档类型声明及编码: 统一为html5声明类型; 编码统一为utf-8, 书写时利用IDE实现层次分明的缩进;</li>\n<li>非特殊情况下样式文件必须外链到页面head标签之间;非特殊情况下JavaScript文件必须外链至页面底部;</li>\n<li>引入样式文件或JavaScript文件时, 须略去默认类型声明.</li>\n<li>引入JS库文件, 文件名仅包含库名称的压缩版, 比如zepto.js 源文件为zepto.source.js; 引入插件, 文件名格式为库名称+插件名称, 比如zepto.tabs.js 源文件为 zepto.tabs.source.js;</li>\n<li>所有编码均遵循xhtml标准, 标签 &amp; 属性 &amp; 属性命名 必须由小写字母及下划线数字组成, 且所有标签必须闭合; 属性值必须用双引号包括;</li>\n<li>充分利用无兼容性问题的html自身标签, 比如div, span, em, i, strong, label等等; 需要为html元素添加自定义属性的时候, 首先要考虑下有没有默认的已有的合适标签去设置, 如果没有, 可以使用须以”data-”为前缀来添加自定义属性（例如：data-ajaxUrl,data-infpage）, 避免使用”data:”等其他命名方式;</li>\n<li>语义化html, 如标题根据重要性用h(同一页面只能有一个h1), 段落标记用p, 列表用ul,内联元素中不可嵌套块级元素;</li>\n<li>尽可能减少div嵌套</li>\n<li>书写链接地址时, 必须避免重定向，例如：href=”<a href=\"http://www.example.com/”\" target=\"_blank\" rel=\"noopener\">http://www.example.com/”</a>, 即须在URL地址后面加上“/”；</li>\n<li>在页面中尽量避免使用style属性,即style=”…”;</li>\n<li>必须为含有描述性表单元素(input, textarea)添加label;</li>\n<li>能以背景形式呈现的图片, 尽量写入css样式中;</li>\n<li>重要图片必须加上alt属性; 给重要的元素和截断的元素加上title;</li>\n<li>给区块代码及重要功能(比如循环)加上注释, 方便后台添加功能;</li>\n<li>特殊符号使用: 尽可能使用代码替代: 比如 &lt;(&lt;) &amp; &gt;(&gt;) &amp; 空格( ) &amp; »(») 等等;</li>\n<li>书写页面过程中, 请考虑向后扩展性;</li>\n<li>class &amp; id 参见 css书写规范.</li>\n</ol>\n<p>##css书写规范</p>\n<ol>\n<li>编码统一为utf-8;</li>\n<li>协作开发及分工:组长根据项目需求或功能模块进行分工，每个成员都必须引入基本架构库进行开发;</li>\n<li>class与id的使用: id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中; id原则上都是根据模块功能||通过规则命名的, 为JavaScript预留钩子的除外;</li>\n<li>为JavaScript预留钩子的命名, 请以 J_ 起始, 比如: J_itemView, J_slider;</li>\n<li>class与id命名: 大的框架命名比如header/footer/wrapper/content/menu等.其他样式名称由 小写英文 &amp; 数字 &amp; - 来组合命名, 如in-tabs, in-form, mrt20等; 避免使用中文拼音, 尽量使用简易的单词组合; 总之, 命名要语义化, 简明化.</li>\n<li>规避class与id命名(此条重要):</li>\n</ol>\n<ul>\n<li>通过从属写法规避, 示例见d; </li>\n<li>取父级元素id/class命名部分命名, 示例见d; </li>\n<li>重复使用率高的命名, 请以统一代号加中划线起始, 比如in-;</li>\n<li>a,b两条, 适用于在2中已建好框架的页面, 如, 要在2中已建好框架的页面代码中加入新的div元素</li>\n</ul>\n<ol start=\"7\">\n<li>css属性书写顺序, 建议遵循: 布局定位属性–&gt;自身属性–&gt;文本属性–&gt;其他属性. 此条可根据自身习惯书写, 但尽量保证同类属性写在一起. 属性列举: 布局定位属性主要包括: display &amp; list-style &amp; position（相应的 top,right,bottom,left） ＆ float &amp; clear ＆ visibility ＆ overflow； 自身属性主要包括: width &amp; height &amp; margin &amp; padding &amp; border &amp; background; 文本属性主要包括：color &amp; font &amp; text-decoration &amp; text-align &amp; vertical-align &amp; white- space &amp; 其他 &amp; content; 所列出的这些属性只是最常用到的, 并不代表全部;</li>\n<li>书写代码前, 考虑并提高样式重复使用率;</li>\n<li>充分利用html自身属性及样式继承原理减少代码量, 比如:这儿是标题列表2011-11-11</li>\n</ol>\n<p>定义</p>\n<p>ul.list li{position:relative} ul.list li span{position:absolute; right:0}<br>即可实现日期居右显示</p>\n<ol start=\"10\">\n<li>样式表中中文字体名, 请务必转码成unicode码, 以避免编码错误时乱码;</li>\n<li>背景图片请尽可能使用sprite技术, 减小http请求, 考虑到多人协作开发, sprite按模块制作;</li>\n<li>使用table标签时(尽量避免使用table标签), 请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现 , 如thead,tr,th,td,tbody,tfoot,colgroup,scope; (cellspaing及cellpadding的css控制方法:table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;}, base.css文件中我会初始化表格样式)</li>\n<li>如何可以请少使用兼容;</li>\n<li>用png图片做图片时, 要求图片格式优先考虑png-8格式后考虑png-24;</li>\n<li>避免兼容性属性的使用, 比如text-shadow || css3的相关属性;</li>\n<li>减少使用影响性能的属性, 比如position:absolute || float ;</li>\n<li>必须为大区块样式添加注释, 小区块适量注释;</li>\n<li>代码缩进与格式: 建议单行书写, 可根据自身习惯, 后期优化会统一处理;</li>\n</ol>\n<p>##JavaScript书写规范</p>\n<ol>\n<li>文件编码统一为utf-8, 书写过程过, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 || 与现有代码冲突 || …);</li>\n<li>库引入: 原则上仅引入icat库, 若需引入第三方库, 须与团队其他人员讨论决定（后备成熟库 zepto.js、underscore.js、xui.js、jquery.js）;</li>\n<li>变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写且根据变量类型可定义为i、s、o, 如inum,sname,ophoto;<br>另, 要求变量集中声明, 避免全局变量.</li>\n<li>类命名: 首字母大写, 驼峰式命名. 如 Photos,Models;</li>\n<li>函数命名: 首字母小写驼峰式命名. 如getName();</li>\n<li>命名语义化, 尽可能利用英文单词或其缩写;</li>\n<li>尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() &amp; Function;</li>\n<li>后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;</li>\n<li>代码结构明了, 加适量注释. 提高函数重用率;</li>\n<li>注重与html分离, 减小reflow, 注重性能.</li>\n</ol>\n<p>##图片规范</p>\n<ol>\n<li>所有页面元素类图片均放入assets/img文件夹, 测试用图片放于pic文件夹;</li>\n<li>图片格式仅限于gif || png || jpg;</li>\n<li>命名全部用小写英文字母 || 数字 || _ 的组合，其中不得包含汉字 || 空格 || 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, ad_banner.png || btn_login.png;</li>\n<li>在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;</li>\n<li>尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);</li>\n<li>运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.</li>\n</ol>\n<p>##注释规范</p>\n<ol>\n<li>html注释: 注释格式;</li>\n<li>css注释: 注释格式;</li>\n<li>JavaScript注释;</li>\n</ol>\n<p>###开发及测试工具约定###</p>\n<p>开发环境：Sublime Text2.0（推荐） || Notepad++ || WebStorm || Dw || Crunch(Less开发工具) || Aptana || Vim</p>\n<p><em>Sublime Text2.0前端安装环境请参照：<a href=\"/install-sublime-text-environment\">《Sublime Text搭建前端开发环境过程》</a>;</em></p>\n<p>###工具使用原则:</p>\n<ol>\n<li>不可利用IDE的视图模式 ‘画’ 代码;</li>\n<li>不可利用IDE生成相关功能代码, 比如Dw内置的一些功能js;</li>\n<li>编码必须格式化, 比如缩进;</li>\n</ol>\n<p>测试对象：chrome浏览器、UC浏览器、QQ浏览器、百度浏览器、公司浏览器以及Android原生浏览器;</p>\n<p>###其他规范</p>\n<ol>\n<li>遵行标准、适应过程、写的更少、做的更多。</li>\n<li>减小冗余代码, 书写所有人都可以看的懂的代码。</li>\n</ol>\n<p>###前端规范参考</p>\n<ul>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html\" target=\"_blank\" rel=\"noopener\">yahoo前端优化性能规则</a></li>\n<li><a href=\"https://code.google.com/p/google-styleguide/\" target=\"_blank\" rel=\"noopener\">Google规范文档</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><em>“简洁易懂是一种美德。 为用户着想, 为服务器着想。—前端职业篇”</em></p>\n<p><em>“不是路不平，而是你不行，到底行不行，就看你停不停，只要你不停，早晚都得行。 —前端晋级篇 ”</em></p>\n<p>##规范目的</p>\n<blockquote>\n<p>为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档, 特制订此文档.本规范文档一经确认,前端开发人员必须按本文档规范进行前台页面开发.本文档如有不对或者不合适的地方请及时提出, 经讨论决定后方可更改.</p>\n</blockquote>\n<p>##基本准则</p>\n<blockquote>\n<p>符合web标准, 语义化html, 结构表现行为分离, 兼容性优良. 页面性能方面, 代码要求简洁明了有序, 尽可能的减小服务器负载, 保证最快的解析速度.</p>\n</blockquote>\n<p>##文件规范</p>\n<ol>\n<li>html, css, js, images文件均归档至本规范约定的目录中;</li>\n<li>html文件命名: 英文命名, 后缀.html,同时将对应界面设计稿放于同目录doc下PSD文件夹中, 若界面设计稿命名为中文, 请重命名与之对应的html文件同名, 以方便后端添加功能时查找对应页面;</li>\n<li>css文件命名: 英文命名, 后缀.css. 初始化样式reset.css, 共用base.css, 首页index.css, 其他页面依实际模块需求命名;</li>\n<li>Js文件命名: 英文命名, 后缀.js. 共用common.js, 其他依实际模块需求命名.</li>\n</ol>\n<p>##HTML书写规范</p>\n<ol>\n<li>文档类型声明及编码: 统一为html5声明类型; 编码统一为utf-8, 书写时利用IDE实现层次分明的缩进;</li>\n<li>非特殊情况下样式文件必须外链到页面head标签之间;非特殊情况下JavaScript文件必须外链至页面底部;</li>\n<li>引入样式文件或JavaScript文件时, 须略去默认类型声明.</li>\n<li>引入JS库文件, 文件名仅包含库名称的压缩版, 比如zepto.js 源文件为zepto.source.js; 引入插件, 文件名格式为库名称+插件名称, 比如zepto.tabs.js 源文件为 zepto.tabs.source.js;</li>\n<li>所有编码均遵循xhtml标准, 标签 &amp; 属性 &amp; 属性命名 必须由小写字母及下划线数字组成, 且所有标签必须闭合; 属性值必须用双引号包括;</li>\n<li>充分利用无兼容性问题的html自身标签, 比如div, span, em, i, strong, label等等; 需要为html元素添加自定义属性的时候, 首先要考虑下有没有默认的已有的合适标签去设置, 如果没有, 可以使用须以”data-”为前缀来添加自定义属性（例如：data-ajaxUrl,data-infpage）, 避免使用”data:”等其他命名方式;</li>\n<li>语义化html, 如标题根据重要性用h(同一页面只能有一个h1), 段落标记用p, 列表用ul,内联元素中不可嵌套块级元素;</li>\n<li>尽可能减少div嵌套</li>\n<li>书写链接地址时, 必须避免重定向，例如：href=”<a href=\"http://www.example.com/”\" target=\"_blank\" rel=\"noopener\">http://www.example.com/”</a>, 即须在URL地址后面加上“/”；</li>\n<li>在页面中尽量避免使用style属性,即style=”…”;</li>\n<li>必须为含有描述性表单元素(input, textarea)添加label;</li>\n<li>能以背景形式呈现的图片, 尽量写入css样式中;</li>\n<li>重要图片必须加上alt属性; 给重要的元素和截断的元素加上title;</li>\n<li>给区块代码及重要功能(比如循环)加上注释, 方便后台添加功能;</li>\n<li>特殊符号使用: 尽可能使用代码替代: 比如 &lt;(&lt;) &amp; &gt;(&gt;) &amp; 空格( ) &amp; »(») 等等;</li>\n<li>书写页面过程中, 请考虑向后扩展性;</li>\n<li>class &amp; id 参见 css书写规范.</li>\n</ol>\n<p>##css书写规范</p>\n<ol>\n<li>编码统一为utf-8;</li>\n<li>协作开发及分工:组长根据项目需求或功能模块进行分工，每个成员都必须引入基本架构库进行开发;</li>\n<li>class与id的使用: id是唯一的并是父级的, class是可以重复的并是子级的, 所以id仅使用在大的模块上, class可用在重复使用率高及子级中; id原则上都是根据模块功能||通过规则命名的, 为JavaScript预留钩子的除外;</li>\n<li>为JavaScript预留钩子的命名, 请以 J_ 起始, 比如: J_itemView, J_slider;</li>\n<li>class与id命名: 大的框架命名比如header/footer/wrapper/content/menu等.其他样式名称由 小写英文 &amp; 数字 &amp; - 来组合命名, 如in-tabs, in-form, mrt20等; 避免使用中文拼音, 尽量使用简易的单词组合; 总之, 命名要语义化, 简明化.</li>\n<li>规避class与id命名(此条重要):</li>\n</ol>\n<ul>\n<li>通过从属写法规避, 示例见d; </li>\n<li>取父级元素id/class命名部分命名, 示例见d; </li>\n<li>重复使用率高的命名, 请以统一代号加中划线起始, 比如in-;</li>\n<li>a,b两条, 适用于在2中已建好框架的页面, 如, 要在2中已建好框架的页面代码中加入新的div元素</li>\n</ul>\n<ol start=\"7\">\n<li>css属性书写顺序, 建议遵循: 布局定位属性–&gt;自身属性–&gt;文本属性–&gt;其他属性. 此条可根据自身习惯书写, 但尽量保证同类属性写在一起. 属性列举: 布局定位属性主要包括: display &amp; list-style &amp; position（相应的 top,right,bottom,left） ＆ float &amp; clear ＆ visibility ＆ overflow； 自身属性主要包括: width &amp; height &amp; margin &amp; padding &amp; border &amp; background; 文本属性主要包括：color &amp; font &amp; text-decoration &amp; text-align &amp; vertical-align &amp; white- space &amp; 其他 &amp; content; 所列出的这些属性只是最常用到的, 并不代表全部;</li>\n<li>书写代码前, 考虑并提高样式重复使用率;</li>\n<li>充分利用html自身属性及样式继承原理减少代码量, 比如:这儿是标题列表2011-11-11</li>\n</ol>\n<p>定义</p>\n<p>ul.list li{position:relative} ul.list li span{position:absolute; right:0}<br>即可实现日期居右显示</p>\n<ol start=\"10\">\n<li>样式表中中文字体名, 请务必转码成unicode码, 以避免编码错误时乱码;</li>\n<li>背景图片请尽可能使用sprite技术, 减小http请求, 考虑到多人协作开发, sprite按模块制作;</li>\n<li>使用table标签时(尽量避免使用table标签), 请不要用width/ height/cellspacing/cellpadding等table属性直接定义表现, 应尽可能的利用table自身私有属性分离结构与表现 , 如thead,tr,th,td,tbody,tfoot,colgroup,scope; (cellspaing及cellpadding的css控制方法:table{border:0;margin:0;border-collapse:collapse;} table th, table td{padding:0;}, base.css文件中我会初始化表格样式)</li>\n<li>如何可以请少使用兼容;</li>\n<li>用png图片做图片时, 要求图片格式优先考虑png-8格式后考虑png-24;</li>\n<li>避免兼容性属性的使用, 比如text-shadow || css3的相关属性;</li>\n<li>减少使用影响性能的属性, 比如position:absolute || float ;</li>\n<li>必须为大区块样式添加注释, 小区块适量注释;</li>\n<li>代码缩进与格式: 建议单行书写, 可根据自身习惯, 后期优化会统一处理;</li>\n</ol>\n<p>##JavaScript书写规范</p>\n<ol>\n<li>文件编码统一为utf-8, 书写过程过, 每行代码结束必须有分号; 原则上所有功能均根据XXX项目需求原生开发, 以避免网上down下来的代码造成的代码污染(沉冗代码 || 与现有代码冲突 || …);</li>\n<li>库引入: 原则上仅引入icat库, 若需引入第三方库, 须与团队其他人员讨论决定（后备成熟库 zepto.js、underscore.js、xui.js、jquery.js）;</li>\n<li>变量命名: 驼峰式命名. 原生JavaScript变量要求是纯英文字母, 首字母须小写且根据变量类型可定义为i、s、o, 如inum,sname,ophoto;<br>另, 要求变量集中声明, 避免全局变量.</li>\n<li>类命名: 首字母大写, 驼峰式命名. 如 Photos,Models;</li>\n<li>函数命名: 首字母小写驼峰式命名. 如getName();</li>\n<li>命名语义化, 尽可能利用英文单词或其缩写;</li>\n<li>尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() &amp; Function;</li>\n<li>后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;</li>\n<li>代码结构明了, 加适量注释. 提高函数重用率;</li>\n<li>注重与html分离, 减小reflow, 注重性能.</li>\n</ol>\n<p>##图片规范</p>\n<ol>\n<li>所有页面元素类图片均放入assets/img文件夹, 测试用图片放于pic文件夹;</li>\n<li>图片格式仅限于gif || png || jpg;</li>\n<li>命名全部用小写英文字母 || 数字 || _ 的组合，其中不得包含汉字 || 空格 || 特殊字符；尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, ad_banner.png || btn_login.png;</li>\n<li>在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间;</li>\n<li>尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明);</li>\n<li>运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下.</li>\n</ol>\n<p>##注释规范</p>\n<ol>\n<li>html注释: 注释格式;</li>\n<li>css注释: 注释格式;</li>\n<li>JavaScript注释;</li>\n</ol>\n<p>###开发及测试工具约定###</p>\n<p>开发环境：Sublime Text2.0（推荐） || Notepad++ || WebStorm || Dw || Crunch(Less开发工具) || Aptana || Vim</p>\n<p><em>Sublime Text2.0前端安装环境请参照：<a href=\"/install-sublime-text-environment\">《Sublime Text搭建前端开发环境过程》</a>;</em></p>\n<p>###工具使用原则:</p>\n<ol>\n<li>不可利用IDE的视图模式 ‘画’ 代码;</li>\n<li>不可利用IDE生成相关功能代码, 比如Dw内置的一些功能js;</li>\n<li>编码必须格式化, 比如缩进;</li>\n</ol>\n<p>测试对象：chrome浏览器、UC浏览器、QQ浏览器、百度浏览器、公司浏览器以及Android原生浏览器;</p>\n<p>###其他规范</p>\n<ol>\n<li>遵行标准、适应过程、写的更少、做的更多。</li>\n<li>减小冗余代码, 书写所有人都可以看的懂的代码。</li>\n</ol>\n<p>###前端规范参考</p>\n<ul>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html\" target=\"_blank\" rel=\"noopener\">yahoo前端优化性能规则</a></li>\n<li><a href=\"https://code.google.com/p/google-styleguide/\" target=\"_blank\" rel=\"noopener\">Google规范文档</a></li>\n</ul>\n"},{"layout":"post","title":"前端开发环境（ST2）搭建过程","date":"2013-04-10T06:47:00.000Z","comments":1,"_content":"\n**Sublime Text 2（简称：ST2）**是一个实用又好用的编辑器，以其体积小、响应快、功能齐全、操作便捷、插件丰富、跨平台等特性，被前端人员的推崇为神器。\n\n为了促进前端（团队）统一开发环境的正确搭建，现梳理一下我们产品业务中用到的一些插件，以便大家能快速搭建好ST2开发环境。\n\n``注：ST3版本硬性要求比较高，且与ST2兼容的插件比较少，帮暂不推荐升级。``\n\n###准备工作\n\n下载对应版本的ST2:[http://www.sublimetext.com/2](http://www.sublimetext.com/2)\n\n###开始安装\n\n在windows环境下双击下载的ST2可执行文件即可安装。\n\n[ST2免费注册码下载](http://pan.baidu.com/share/link?shareid=2246429840&uk=3945756521#dir/path=%2F%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E4%B8%AD%E5%BF%83%2F%E5%89%8D%E7%AB%AF%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83)\n\n在linux环境下安装如下：  \n\n1.解压并修改ST2文件名\n\n    tar -xvf sublime_text_2.0.2.tar.bz2  \n    mv Sublime\\ Text\\ 2/ sublime_text_2\n\n2.移动到合适的位置，这里选择``/usr/lib/``\n\n    sudo mv sublime_text_2 /usr/lib/\n\n3.命令行（Terminal）下启动ST2\n\n    sudo ln -s /usr/lib/sublime_text_2/sublime_text /usr/bin/sublime\n\n4.创建可使用的应用程序图标（可以放在Launcher下）\n\n    sudo sublime /usr/share/applications/sublime.desktop\n\n5.配置sublime.desktop文件\n\n    [Desktop Entry]\n    Version=1.0\n    Name=Sublime Text 2\n    # Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n    # From Ubuntu's language-pack-kde-XX-base packages, version 9.04-20090413.\n    GenericName=Text Editor\n     \n    Exec=sublime\n    Terminal=false\n    Icon=/usr/lib/sublime_text_2/Icon/48x48/sublime_text.png\n    Type=Application\n    Categories=TextEditor;IDE;Development\n    X-Ayatana-Desktop-Shortcuts=NewWindow\n     \n    [NewWindow Shortcut Group]\n    Name=New Window\n    Exec=sublime -n\n    TargetEnvironment=Unity\n\n###安装ST2 packpage control\n\n=> 按Ctrl+`调出console  \n\n=> 粘贴以下代码到底部命令行并回车：  \n    \n    import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();\n    os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.\n    urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())\n\n=> 重启Sublime Text 2\n\n如果在Perferences->package settings中看到package control这一项，则安装成功或者`Ctrl+Shift+p`调出的面板中搜索`install package`如果存在，则代表安装成功。\n\n至此，ST2的安装已全部完成，下面我们要安装业务中所需要的插件。\n\n###安装sublime Text 插件的一般步骤：\n\n=> 按住Ctrl+Shift+P  \n=> 在出现的输入框中输入install  \n=> 选择package control:install packpage回车  \n=> 输入需安装的插件名称进行检索 \n=> 选中对应的插件，按回车 \n=> 稍定一会儿，插件正在安装中，注意右下角状态栏会显示正在连接的提示文字  \n\n###前端Team需安装的插件\n\n+ 安装compass插件\n\n+ 安装sass插件\n\n+ 安装zendcoding插件\n\n+ 安装YUI Compressor代码压缩插件\n\n+ 安装Sublime codeIntel代码提示插件\n\n+ 安装Alignment代码等号对齐插件\n\n+ 安装GBK Encoding Support插件\n\n+ 安装DocBlockr插件\n\n+ 安装BracketHighlighter插件\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/2013-04-10-how-to-install-sublime-text-2.md","raw":"---\nlayout: post\ntitle: 前端开发环境（ST2）搭建过程\ndate: 2013-04-10 14:47\ncomments: true\ncategories: [前端开发]\n---\n\n**Sublime Text 2（简称：ST2）**是一个实用又好用的编辑器，以其体积小、响应快、功能齐全、操作便捷、插件丰富、跨平台等特性，被前端人员的推崇为神器。\n\n为了促进前端（团队）统一开发环境的正确搭建，现梳理一下我们产品业务中用到的一些插件，以便大家能快速搭建好ST2开发环境。\n\n``注：ST3版本硬性要求比较高，且与ST2兼容的插件比较少，帮暂不推荐升级。``\n\n###准备工作\n\n下载对应版本的ST2:[http://www.sublimetext.com/2](http://www.sublimetext.com/2)\n\n###开始安装\n\n在windows环境下双击下载的ST2可执行文件即可安装。\n\n[ST2免费注册码下载](http://pan.baidu.com/share/link?shareid=2246429840&uk=3945756521#dir/path=%2F%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E4%B8%AD%E5%BF%83%2F%E5%89%8D%E7%AB%AF%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83)\n\n在linux环境下安装如下：  \n\n1.解压并修改ST2文件名\n\n    tar -xvf sublime_text_2.0.2.tar.bz2  \n    mv Sublime\\ Text\\ 2/ sublime_text_2\n\n2.移动到合适的位置，这里选择``/usr/lib/``\n\n    sudo mv sublime_text_2 /usr/lib/\n\n3.命令行（Terminal）下启动ST2\n\n    sudo ln -s /usr/lib/sublime_text_2/sublime_text /usr/bin/sublime\n\n4.创建可使用的应用程序图标（可以放在Launcher下）\n\n    sudo sublime /usr/share/applications/sublime.desktop\n\n5.配置sublime.desktop文件\n\n    [Desktop Entry]\n    Version=1.0\n    Name=Sublime Text 2\n    # Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n    # From Ubuntu's language-pack-kde-XX-base packages, version 9.04-20090413.\n    GenericName=Text Editor\n     \n    Exec=sublime\n    Terminal=false\n    Icon=/usr/lib/sublime_text_2/Icon/48x48/sublime_text.png\n    Type=Application\n    Categories=TextEditor;IDE;Development\n    X-Ayatana-Desktop-Shortcuts=NewWindow\n     \n    [NewWindow Shortcut Group]\n    Name=New Window\n    Exec=sublime -n\n    TargetEnvironment=Unity\n\n###安装ST2 packpage control\n\n=> 按Ctrl+`调出console  \n\n=> 粘贴以下代码到底部命令行并回车：  \n    \n    import urllib2,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();\n    os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),'wb').write(urllib2.\n    urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())\n\n=> 重启Sublime Text 2\n\n如果在Perferences->package settings中看到package control这一项，则安装成功或者`Ctrl+Shift+p`调出的面板中搜索`install package`如果存在，则代表安装成功。\n\n至此，ST2的安装已全部完成，下面我们要安装业务中所需要的插件。\n\n###安装sublime Text 插件的一般步骤：\n\n=> 按住Ctrl+Shift+P  \n=> 在出现的输入框中输入install  \n=> 选择package control:install packpage回车  \n=> 输入需安装的插件名称进行检索 \n=> 选中对应的插件，按回车 \n=> 稍定一会儿，插件正在安装中，注意右下角状态栏会显示正在连接的提示文字  \n\n###前端Team需安装的插件\n\n+ 安装compass插件\n\n+ 安装sass插件\n\n+ 安装zendcoding插件\n\n+ 安装YUI Compressor代码压缩插件\n\n+ 安装Sublime codeIntel代码提示插件\n\n+ 安装Alignment代码等号对齐插件\n\n+ 安装GBK Encoding Support插件\n\n+ 安装DocBlockr插件\n\n+ 安装BracketHighlighter插件\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"how-to-install-sublime-text-2","published":1,"updated":"2018-05-30T08:12:15.839Z","photos":[],"link":"","_id":"cjhubytj20005yis54vv8mg6r","content":"<p><strong>Sublime Text 2（简称：ST2）</strong>是一个实用又好用的编辑器，以其体积小、响应快、功能齐全、操作便捷、插件丰富、跨平台等特性，被前端人员的推崇为神器。</p>\n<p>为了促进前端（团队）统一开发环境的正确搭建，现梳理一下我们产品业务中用到的一些插件，以便大家能快速搭建好ST2开发环境。</p>\n<p><code>注：ST3版本硬性要求比较高，且与ST2兼容的插件比较少，帮暂不推荐升级。</code></p>\n<p>###准备工作</p>\n<p>下载对应版本的ST2:<a href=\"http://www.sublimetext.com/2\" target=\"_blank\" rel=\"noopener\">http://www.sublimetext.com/2</a></p>\n<p>###开始安装</p>\n<p>在windows环境下双击下载的ST2可执行文件即可安装。</p>\n<p><a href=\"http://pan.baidu.com/share/link?shareid=2246429840&amp;uk=3945756521#dir/path=%2F%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E4%B8%AD%E5%BF%83%2F%E5%89%8D%E7%AB%AF%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\" target=\"_blank\" rel=\"noopener\">ST2免费注册码下载</a></p>\n<p>在linux环境下安装如下：  </p>\n<p>1.解压并修改ST2文件名</p>\n<pre><code>tar -xvf sublime_text_2.0.2.tar.bz2  \nmv Sublime\\ Text\\ 2/ sublime_text_2\n</code></pre><p>2.移动到合适的位置，这里选择<code>/usr/lib/</code></p>\n<pre><code>sudo mv sublime_text_2 /usr/lib/\n</code></pre><p>3.命令行（Terminal）下启动ST2</p>\n<pre><code>sudo ln -s /usr/lib/sublime_text_2/sublime_text /usr/bin/sublime\n</code></pre><p>4.创建可使用的应用程序图标（可以放在Launcher下）</p>\n<pre><code>sudo sublime /usr/share/applications/sublime.desktop\n</code></pre><p>5.配置sublime.desktop文件</p>\n<pre><code>[Desktop Entry]\nVersion=1.0\nName=Sublime Text 2\n# Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n# From Ubuntu&apos;s language-pack-kde-XX-base packages, version 9.04-20090413.\nGenericName=Text Editor\n\nExec=sublime\nTerminal=false\nIcon=/usr/lib/sublime_text_2/Icon/48x48/sublime_text.png\nType=Application\nCategories=TextEditor;IDE;Development\nX-Ayatana-Desktop-Shortcuts=NewWindow\n\n[NewWindow Shortcut Group]\nName=New Window\nExec=sublime -n\nTargetEnvironment=Unity\n</code></pre><p>###安装ST2 packpage control</p>\n<p>=&gt; 按Ctrl+`调出console  </p>\n<p>=&gt; 粘贴以下代码到底部命令行并回车：  </p>\n<pre><code>import urllib2,os;pf=&apos;Package Control.sublime-package&apos;;ipp=sublime.installed_packages_path();\nos.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),&apos;wb&apos;).write(urllib2.\nurlopen(&apos;http://sublime.wbond.net/&apos;+pf.replace(&apos; &apos;,&apos;%20&apos;)).read())\n</code></pre><p>=&gt; 重启Sublime Text 2</p>\n<p>如果在Perferences-&gt;package settings中看到package control这一项，则安装成功或者<code>Ctrl+Shift+p</code>调出的面板中搜索<code>install package</code>如果存在，则代表安装成功。</p>\n<p>至此，ST2的安装已全部完成，下面我们要安装业务中所需要的插件。</p>\n<p>###安装sublime Text 插件的一般步骤：</p>\n<p>=&gt; 按住Ctrl+Shift+P<br>=&gt; 在出现的输入框中输入install<br>=&gt; 选择package control:install packpage回车<br>=&gt; 输入需安装的插件名称进行检索<br>=&gt; 选中对应的插件，按回车<br>=&gt; 稍定一会儿，插件正在安装中，注意右下角状态栏会显示正在连接的提示文字  </p>\n<p>###前端Team需安装的插件</p>\n<ul>\n<li><p>安装compass插件</p>\n</li>\n<li><p>安装sass插件</p>\n</li>\n<li><p>安装zendcoding插件</p>\n</li>\n<li><p>安装YUI Compressor代码压缩插件</p>\n</li>\n<li><p>安装Sublime codeIntel代码提示插件</p>\n</li>\n<li><p>安装Alignment代码等号对齐插件</p>\n</li>\n<li><p>安装GBK Encoding Support插件</p>\n</li>\n<li><p>安装DocBlockr插件</p>\n</li>\n<li><p>安装BracketHighlighter插件</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>Sublime Text 2（简称：ST2）</strong>是一个实用又好用的编辑器，以其体积小、响应快、功能齐全、操作便捷、插件丰富、跨平台等特性，被前端人员的推崇为神器。</p>\n<p>为了促进前端（团队）统一开发环境的正确搭建，现梳理一下我们产品业务中用到的一些插件，以便大家能快速搭建好ST2开发环境。</p>\n<p><code>注：ST3版本硬性要求比较高，且与ST2兼容的插件比较少，帮暂不推荐升级。</code></p>\n<p>###准备工作</p>\n<p>下载对应版本的ST2:<a href=\"http://www.sublimetext.com/2\" target=\"_blank\" rel=\"noopener\">http://www.sublimetext.com/2</a></p>\n<p>###开始安装</p>\n<p>在windows环境下双击下载的ST2可执行文件即可安装。</p>\n<p><a href=\"http://pan.baidu.com/share/link?shareid=2246429840&amp;uk=3945756521#dir/path=%2F%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3%E4%B8%AD%E5%BF%83%2F%E5%89%8D%E7%AB%AF%E7%BB%9F%E4%B8%80%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\" target=\"_blank\" rel=\"noopener\">ST2免费注册码下载</a></p>\n<p>在linux环境下安装如下：  </p>\n<p>1.解压并修改ST2文件名</p>\n<pre><code>tar -xvf sublime_text_2.0.2.tar.bz2  \nmv Sublime\\ Text\\ 2/ sublime_text_2\n</code></pre><p>2.移动到合适的位置，这里选择<code>/usr/lib/</code></p>\n<pre><code>sudo mv sublime_text_2 /usr/lib/\n</code></pre><p>3.命令行（Terminal）下启动ST2</p>\n<pre><code>sudo ln -s /usr/lib/sublime_text_2/sublime_text /usr/bin/sublime\n</code></pre><p>4.创建可使用的应用程序图标（可以放在Launcher下）</p>\n<pre><code>sudo sublime /usr/share/applications/sublime.desktop\n</code></pre><p>5.配置sublime.desktop文件</p>\n<pre><code>[Desktop Entry]\nVersion=1.0\nName=Sublime Text 2\n# Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n# From Ubuntu&apos;s language-pack-kde-XX-base packages, version 9.04-20090413.\nGenericName=Text Editor\n\nExec=sublime\nTerminal=false\nIcon=/usr/lib/sublime_text_2/Icon/48x48/sublime_text.png\nType=Application\nCategories=TextEditor;IDE;Development\nX-Ayatana-Desktop-Shortcuts=NewWindow\n\n[NewWindow Shortcut Group]\nName=New Window\nExec=sublime -n\nTargetEnvironment=Unity\n</code></pre><p>###安装ST2 packpage control</p>\n<p>=&gt; 按Ctrl+`调出console  </p>\n<p>=&gt; 粘贴以下代码到底部命令行并回车：  </p>\n<pre><code>import urllib2,os;pf=&apos;Package Control.sublime-package&apos;;ipp=sublime.installed_packages_path();\nos.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),&apos;wb&apos;).write(urllib2.\nurlopen(&apos;http://sublime.wbond.net/&apos;+pf.replace(&apos; &apos;,&apos;%20&apos;)).read())\n</code></pre><p>=&gt; 重启Sublime Text 2</p>\n<p>如果在Perferences-&gt;package settings中看到package control这一项，则安装成功或者<code>Ctrl+Shift+p</code>调出的面板中搜索<code>install package</code>如果存在，则代表安装成功。</p>\n<p>至此，ST2的安装已全部完成，下面我们要安装业务中所需要的插件。</p>\n<p>###安装sublime Text 插件的一般步骤：</p>\n<p>=&gt; 按住Ctrl+Shift+P<br>=&gt; 在出现的输入框中输入install<br>=&gt; 选择package control:install packpage回车<br>=&gt; 输入需安装的插件名称进行检索<br>=&gt; 选中对应的插件，按回车<br>=&gt; 稍定一会儿，插件正在安装中，注意右下角状态栏会显示正在连接的提示文字  </p>\n<p>###前端Team需安装的插件</p>\n<ul>\n<li><p>安装compass插件</p>\n</li>\n<li><p>安装sass插件</p>\n</li>\n<li><p>安装zendcoding插件</p>\n</li>\n<li><p>安装YUI Compressor代码压缩插件</p>\n</li>\n<li><p>安装Sublime codeIntel代码提示插件</p>\n</li>\n<li><p>安装Alignment代码等号对齐插件</p>\n</li>\n<li><p>安装GBK Encoding Support插件</p>\n</li>\n<li><p>安装DocBlockr插件</p>\n</li>\n<li><p>安装BracketHighlighter插件</p>\n</li>\n</ul>\n"},{"layout":"post","title":"Node学习历险记（1）— 扬帆启航","date":"2013-05-20T14:00:00.000Z","comments":1,"_content":"\n背景：毕业三年有余，栖息于一线城市，先后从事web前端开发、移动前端开发等相关工作，一次偶然的机会{2012年}面试了迅雷下载-前端开发工程师一职（没通过），开始知道Node的重要性，初步的去了解了Node的发展史以及应用场景，在参加腾讯H5沙龙、公司级培训、内部培训等相关活动时经常能听到Node字眼，似乎Node与H5（移动开发）一样爆发，是前端的福音。今年{2013年}借着项目以及学习计划开启Node学习之旅。\n\nNode学习历险记采用游记的方式记录学习过程，由于文字功底弱，难免存在语句不通顺，标点错误等等一系列的语病，还望轻拍。^__^\n\n##快速开始\n\n###windows篇\n\n查看系统是32bit OR 64bit，DOS命令行下输入 wmic os get osarchitecture\n\n1.下载Node.js官方Windows可执行程序：\n\n    http://nodejs.org/download/\n\n2.下载MongoDB官方Windows可执行程序：\n    \n    http://www.mongodb.org/downloads\n\n3.安装Node和MongoDB\n\n    a.安装完成后，打开windows命令行（win+r）,输入cmd进行命令行模式\n    b.查看Node版本 node -v // 安装成功 v0.10.7\n    c.查看MongoDB版本 mongo --version // 安装成功 MongoDB shell version: 2.4.3 \n    d.添加MongoDB系统变量 //切换到其他盘符查看显示 mongo --version\n    \n    注：因为Node安装时默认会添加系统变量所以可全局访问，而MongoDB需手动添加系统变量。\n    \n4.MongoDB相关配置\n\n+ 详细的官方安装与配置（英文） [传送门](http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/)\n+ 简单直白的配置方式(DOS下输入命令测试)\n\n**1.了解mongo 和 mongod 两个命令的作用**  \n\n    mongo:mongodb客户端命令，用于连接MongoDB服务器\n    mongod:mongodb服务器命令，用于启动和配置MongoDB服务器\n\n**2.开始配置和启动MongoDB**\n\n    a.在DOS下输入 mongod 回车，可以看到提示信息如下：\n    \n    D:\\>mongod\n    mongod --help for help and startup options\n    Sun May 26 15:13:52.230\n    Sun May 26 15:13:52.243 warning: 32-bit servers don't have journaling enabled by\n     default. Please use --journal if you want durability.\n    Sun May 26 15:13:52.244\n    Sun May 26 15:13:52.422 [initandlisten] MongoDB starting : pid=5408 port=27017 d\n    bpath=\\data\\db\\ 32-bit host=yihaner\n    Sun May 26 15:13:52.423 [initandlisten]\n    Sun May 26 15:13:52.423 [initandlisten] ** NOTE: This is a 32 bit MongoDB binary\n    .\n    Sun May 26 15:13:52.424 [initandlisten] **       32 bit builds are limited to le\n    ss than 2GB of data (or less with --journal).\n    Sun May 26 15:13:52.424 [initandlisten] **       Note that journaling defaults t\n    o off for 32 bit and is currently off.\n    Sun May 26 15:13:52.424 [initandlisten] **       See http://dochub.mongodb.org/c\n    ore/32bit\n    Sun May 26 15:13:52.425 [initandlisten]\n    Sun May 26 15:13:52.425 [initandlisten] db version v2.4.3\n    Sun May 26 15:13:52.426 [initandlisten] git version: fe1743177a5ea03e91e0052fb5e\n    2cb2945f6d95f\n    Sun May 26 15:13:52.427 [initandlisten] build info: windows sys.getwindowsversio\n    n(major=6, minor=0, build=6002, platform=2, service_pack='Service Pack 2') BOOST\n    _LIB_VERSION=1_49\n    Sun May 26 15:13:52.427 [initandlisten] allocator: system\n    Sun May 26 15:13:52.428 [initandlisten] options: {}\n    Sun May 26 15:13:52.456 [initandlisten] exception in initAndListen: 10296\n    *********************************************************************\n     ERROR: dbpath (\\data\\db\\) does not exist.\n     Create this directory or give existing directory in --dbpath.\n     See http://dochub.mongodb.org/core/startingandstoppingmongo\n    *********************************************************************\n    , terminating\n    Sun May 26 15:13:52.457 dbexit:\n    Sun May 26 15:13:52.458 [initandlisten] shutdown: going to close listening socke\n    ts...\n    Sun May 26 15:13:52.458 [initandlisten] shutdown: going to flush diaglog...\n    Sun May 26 15:13:52.459 [initandlisten] shutdown: going to close sockets...\n    Sun May 26 15:13:52.459 [initandlisten] shutdown: waiting for fs preallocator...\n    \n    Sun May 26 15:13:52.460 [initandlisten] shutdown: closing all files...\n    Sun May 26 15:13:52.460 [initandlisten] closeAllFiles() finished\n    Sun May 26 15:13:52.460 dbexit: really exiting now\n    很明显错误显示dbpath(\\data\\db\\)不存在（默认文件路径是C:\\data\\db），这里指定\n    db目录为E:\\mongodb\\data\\db\n    log目录为E:\\mongodb\\log。\n    \n    b.指定dbpath来启动MongoDB（在DOS下输入 mongod --dbpath E:\\mongodb\\data\\db）\n    \n    Sun May 26 15:26:25.423 [initandlisten] allocator: system\n    Sun May 26 15:26:25.423 [initandlisten] options: { dbpath: \"E:\\mongodb\\data\\db\"\n    }\n    Sun May 26 15:26:25.460 [websvr] admin web console waiting for connections on po\n    rt 28017\n    Sun May 26 15:26:25.460 [initandlisten] waiting for connections on port 27017\n    可以看到MongoDB已启动，等待客户端的连接。\n    我们发现这种启动方式每次最少要打开两个CMD窗口才可以进行操作，是否有更好的方法呢？\n    如果MongoDB能够系统启动就好了，OK，可以把MongoDB添加到windows服务中。\n    \n    c.方法如下：\n\n    1.在E:\\mongodb\\下创建mongod.conf配置文件，写入一下内容：\n\n        logpath=E:\\mongodb\\log\\mongo.log //用于存放日志文件\n        dbpath=E:\\mongodb\\data\\db   //用于存放数据库文件\n\n    2.执行以下命令 mongod --config E:\\mongodb\\mongod.conf --install\n\n    3.通过DOS命令行操作Mongodb\n\n        net start MongoDB //启动服务\n        net stop MongoDB //停止服务\n    \n    4.在命令行下执行 mongo 连接数据库， 连接成功后输入： show dbs;\n        admin   0.0625GB\n        local   0.03125GB\n        test    0.0625GB\n\n    相关类似的信息说明配置成功，客户端连接MongoDB成功，现在就可以直接操作数据库啦。\n\n\n\n至此，Node学习历险记 -《快速开始》篇到此告一段落，如有表述不正确的地方还望指正，我将及时更正。\n\n欢迎加入交流群：322794303\n\n","source":"_posts/2013-05-20-getting-start-nodejs.md","raw":"---\nlayout: post\ntitle: Node学习历险记（1）— 扬帆启航\ndate: 2013-05-20 22:00\ncomments: true\ncategories: [前端开发]\n---\n\n背景：毕业三年有余，栖息于一线城市，先后从事web前端开发、移动前端开发等相关工作，一次偶然的机会{2012年}面试了迅雷下载-前端开发工程师一职（没通过），开始知道Node的重要性，初步的去了解了Node的发展史以及应用场景，在参加腾讯H5沙龙、公司级培训、内部培训等相关活动时经常能听到Node字眼，似乎Node与H5（移动开发）一样爆发，是前端的福音。今年{2013年}借着项目以及学习计划开启Node学习之旅。\n\nNode学习历险记采用游记的方式记录学习过程，由于文字功底弱，难免存在语句不通顺，标点错误等等一系列的语病，还望轻拍。^__^\n\n##快速开始\n\n###windows篇\n\n查看系统是32bit OR 64bit，DOS命令行下输入 wmic os get osarchitecture\n\n1.下载Node.js官方Windows可执行程序：\n\n    http://nodejs.org/download/\n\n2.下载MongoDB官方Windows可执行程序：\n    \n    http://www.mongodb.org/downloads\n\n3.安装Node和MongoDB\n\n    a.安装完成后，打开windows命令行（win+r）,输入cmd进行命令行模式\n    b.查看Node版本 node -v // 安装成功 v0.10.7\n    c.查看MongoDB版本 mongo --version // 安装成功 MongoDB shell version: 2.4.3 \n    d.添加MongoDB系统变量 //切换到其他盘符查看显示 mongo --version\n    \n    注：因为Node安装时默认会添加系统变量所以可全局访问，而MongoDB需手动添加系统变量。\n    \n4.MongoDB相关配置\n\n+ 详细的官方安装与配置（英文） [传送门](http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/)\n+ 简单直白的配置方式(DOS下输入命令测试)\n\n**1.了解mongo 和 mongod 两个命令的作用**  \n\n    mongo:mongodb客户端命令，用于连接MongoDB服务器\n    mongod:mongodb服务器命令，用于启动和配置MongoDB服务器\n\n**2.开始配置和启动MongoDB**\n\n    a.在DOS下输入 mongod 回车，可以看到提示信息如下：\n    \n    D:\\>mongod\n    mongod --help for help and startup options\n    Sun May 26 15:13:52.230\n    Sun May 26 15:13:52.243 warning: 32-bit servers don't have journaling enabled by\n     default. Please use --journal if you want durability.\n    Sun May 26 15:13:52.244\n    Sun May 26 15:13:52.422 [initandlisten] MongoDB starting : pid=5408 port=27017 d\n    bpath=\\data\\db\\ 32-bit host=yihaner\n    Sun May 26 15:13:52.423 [initandlisten]\n    Sun May 26 15:13:52.423 [initandlisten] ** NOTE: This is a 32 bit MongoDB binary\n    .\n    Sun May 26 15:13:52.424 [initandlisten] **       32 bit builds are limited to le\n    ss than 2GB of data (or less with --journal).\n    Sun May 26 15:13:52.424 [initandlisten] **       Note that journaling defaults t\n    o off for 32 bit and is currently off.\n    Sun May 26 15:13:52.424 [initandlisten] **       See http://dochub.mongodb.org/c\n    ore/32bit\n    Sun May 26 15:13:52.425 [initandlisten]\n    Sun May 26 15:13:52.425 [initandlisten] db version v2.4.3\n    Sun May 26 15:13:52.426 [initandlisten] git version: fe1743177a5ea03e91e0052fb5e\n    2cb2945f6d95f\n    Sun May 26 15:13:52.427 [initandlisten] build info: windows sys.getwindowsversio\n    n(major=6, minor=0, build=6002, platform=2, service_pack='Service Pack 2') BOOST\n    _LIB_VERSION=1_49\n    Sun May 26 15:13:52.427 [initandlisten] allocator: system\n    Sun May 26 15:13:52.428 [initandlisten] options: {}\n    Sun May 26 15:13:52.456 [initandlisten] exception in initAndListen: 10296\n    *********************************************************************\n     ERROR: dbpath (\\data\\db\\) does not exist.\n     Create this directory or give existing directory in --dbpath.\n     See http://dochub.mongodb.org/core/startingandstoppingmongo\n    *********************************************************************\n    , terminating\n    Sun May 26 15:13:52.457 dbexit:\n    Sun May 26 15:13:52.458 [initandlisten] shutdown: going to close listening socke\n    ts...\n    Sun May 26 15:13:52.458 [initandlisten] shutdown: going to flush diaglog...\n    Sun May 26 15:13:52.459 [initandlisten] shutdown: going to close sockets...\n    Sun May 26 15:13:52.459 [initandlisten] shutdown: waiting for fs preallocator...\n    \n    Sun May 26 15:13:52.460 [initandlisten] shutdown: closing all files...\n    Sun May 26 15:13:52.460 [initandlisten] closeAllFiles() finished\n    Sun May 26 15:13:52.460 dbexit: really exiting now\n    很明显错误显示dbpath(\\data\\db\\)不存在（默认文件路径是C:\\data\\db），这里指定\n    db目录为E:\\mongodb\\data\\db\n    log目录为E:\\mongodb\\log。\n    \n    b.指定dbpath来启动MongoDB（在DOS下输入 mongod --dbpath E:\\mongodb\\data\\db）\n    \n    Sun May 26 15:26:25.423 [initandlisten] allocator: system\n    Sun May 26 15:26:25.423 [initandlisten] options: { dbpath: \"E:\\mongodb\\data\\db\"\n    }\n    Sun May 26 15:26:25.460 [websvr] admin web console waiting for connections on po\n    rt 28017\n    Sun May 26 15:26:25.460 [initandlisten] waiting for connections on port 27017\n    可以看到MongoDB已启动，等待客户端的连接。\n    我们发现这种启动方式每次最少要打开两个CMD窗口才可以进行操作，是否有更好的方法呢？\n    如果MongoDB能够系统启动就好了，OK，可以把MongoDB添加到windows服务中。\n    \n    c.方法如下：\n\n    1.在E:\\mongodb\\下创建mongod.conf配置文件，写入一下内容：\n\n        logpath=E:\\mongodb\\log\\mongo.log //用于存放日志文件\n        dbpath=E:\\mongodb\\data\\db   //用于存放数据库文件\n\n    2.执行以下命令 mongod --config E:\\mongodb\\mongod.conf --install\n\n    3.通过DOS命令行操作Mongodb\n\n        net start MongoDB //启动服务\n        net stop MongoDB //停止服务\n    \n    4.在命令行下执行 mongo 连接数据库， 连接成功后输入： show dbs;\n        admin   0.0625GB\n        local   0.03125GB\n        test    0.0625GB\n\n    相关类似的信息说明配置成功，客户端连接MongoDB成功，现在就可以直接操作数据库啦。\n\n\n\n至此，Node学习历险记 -《快速开始》篇到此告一段落，如有表述不正确的地方还望指正，我将及时更正。\n\n欢迎加入交流群：322794303\n\n","slug":"getting-start-nodejs","published":1,"updated":"2018-05-30T08:12:15.840Z","photos":[],"link":"","_id":"cjhubytj40007yis5xxp3sts9","content":"<p>背景：毕业三年有余，栖息于一线城市，先后从事web前端开发、移动前端开发等相关工作，一次偶然的机会{2012年}面试了迅雷下载-前端开发工程师一职（没通过），开始知道Node的重要性，初步的去了解了Node的发展史以及应用场景，在参加腾讯H5沙龙、公司级培训、内部培训等相关活动时经常能听到Node字眼，似乎Node与H5（移动开发）一样爆发，是前端的福音。今年{2013年}借着项目以及学习计划开启Node学习之旅。</p>\n<p>Node学习历险记采用游记的方式记录学习过程，由于文字功底弱，难免存在语句不通顺，标点错误等等一系列的语病，还望轻拍。^__^</p>\n<p>##快速开始</p>\n<p>###windows篇</p>\n<p>查看系统是32bit OR 64bit，DOS命令行下输入 wmic os get osarchitecture</p>\n<p>1.下载Node.js官方Windows可执行程序：</p>\n<pre><code>http://nodejs.org/download/\n</code></pre><p>2.下载MongoDB官方Windows可执行程序：</p>\n<pre><code>http://www.mongodb.org/downloads\n</code></pre><p>3.安装Node和MongoDB</p>\n<pre><code>a.安装完成后，打开windows命令行（win+r）,输入cmd进行命令行模式\nb.查看Node版本 node -v // 安装成功 v0.10.7\nc.查看MongoDB版本 mongo --version // 安装成功 MongoDB shell version: 2.4.3 \nd.添加MongoDB系统变量 //切换到其他盘符查看显示 mongo --version\n\n注：因为Node安装时默认会添加系统变量所以可全局访问，而MongoDB需手动添加系统变量。\n</code></pre><p>4.MongoDB相关配置</p>\n<ul>\n<li>详细的官方安装与配置（英文） <a href=\"http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/\" target=\"_blank\" rel=\"noopener\">传送门</a></li>\n<li>简单直白的配置方式(DOS下输入命令测试)</li>\n</ul>\n<p><strong>1.了解mongo 和 mongod 两个命令的作用</strong>  </p>\n<pre><code>mongo:mongodb客户端命令，用于连接MongoDB服务器\nmongod:mongodb服务器命令，用于启动和配置MongoDB服务器\n</code></pre><p><strong>2.开始配置和启动MongoDB</strong></p>\n<pre><code>a.在DOS下输入 mongod 回车，可以看到提示信息如下：\n\nD:\\&gt;mongod\nmongod --help for help and startup options\nSun May 26 15:13:52.230\nSun May 26 15:13:52.243 warning: 32-bit servers don&apos;t have journaling enabled by\n default. Please use --journal if you want durability.\nSun May 26 15:13:52.244\nSun May 26 15:13:52.422 [initandlisten] MongoDB starting : pid=5408 port=27017 d\nbpath=\\data\\db\\ 32-bit host=yihaner\nSun May 26 15:13:52.423 [initandlisten]\nSun May 26 15:13:52.423 [initandlisten] ** NOTE: This is a 32 bit MongoDB binary\n.\nSun May 26 15:13:52.424 [initandlisten] **       32 bit builds are limited to le\nss than 2GB of data (or less with --journal).\nSun May 26 15:13:52.424 [initandlisten] **       Note that journaling defaults t\no off for 32 bit and is currently off.\nSun May 26 15:13:52.424 [initandlisten] **       See http://dochub.mongodb.org/c\nore/32bit\nSun May 26 15:13:52.425 [initandlisten]\nSun May 26 15:13:52.425 [initandlisten] db version v2.4.3\nSun May 26 15:13:52.426 [initandlisten] git version: fe1743177a5ea03e91e0052fb5e\n2cb2945f6d95f\nSun May 26 15:13:52.427 [initandlisten] build info: windows sys.getwindowsversio\nn(major=6, minor=0, build=6002, platform=2, service_pack=&apos;Service Pack 2&apos;) BOOST\n_LIB_VERSION=1_49\nSun May 26 15:13:52.427 [initandlisten] allocator: system\nSun May 26 15:13:52.428 [initandlisten] options: {}\nSun May 26 15:13:52.456 [initandlisten] exception in initAndListen: 10296\n*********************************************************************\n ERROR: dbpath (\\data\\db\\) does not exist.\n Create this directory or give existing directory in --dbpath.\n See http://dochub.mongodb.org/core/startingandstoppingmongo\n*********************************************************************\n, terminating\nSun May 26 15:13:52.457 dbexit:\nSun May 26 15:13:52.458 [initandlisten] shutdown: going to close listening socke\nts...\nSun May 26 15:13:52.458 [initandlisten] shutdown: going to flush diaglog...\nSun May 26 15:13:52.459 [initandlisten] shutdown: going to close sockets...\nSun May 26 15:13:52.459 [initandlisten] shutdown: waiting for fs preallocator...\n\nSun May 26 15:13:52.460 [initandlisten] shutdown: closing all files...\nSun May 26 15:13:52.460 [initandlisten] closeAllFiles() finished\nSun May 26 15:13:52.460 dbexit: really exiting now\n很明显错误显示dbpath(\\data\\db\\)不存在（默认文件路径是C:\\data\\db），这里指定\ndb目录为E:\\mongodb\\data\\db\nlog目录为E:\\mongodb\\log。\n\nb.指定dbpath来启动MongoDB（在DOS下输入 mongod --dbpath E:\\mongodb\\data\\db）\n\nSun May 26 15:26:25.423 [initandlisten] allocator: system\nSun May 26 15:26:25.423 [initandlisten] options: { dbpath: &quot;E:\\mongodb\\data\\db&quot;\n}\nSun May 26 15:26:25.460 [websvr] admin web console waiting for connections on po\nrt 28017\nSun May 26 15:26:25.460 [initandlisten] waiting for connections on port 27017\n可以看到MongoDB已启动，等待客户端的连接。\n我们发现这种启动方式每次最少要打开两个CMD窗口才可以进行操作，是否有更好的方法呢？\n如果MongoDB能够系统启动就好了，OK，可以把MongoDB添加到windows服务中。\n\nc.方法如下：\n\n1.在E:\\mongodb\\下创建mongod.conf配置文件，写入一下内容：\n\n    logpath=E:\\mongodb\\log\\mongo.log //用于存放日志文件\n    dbpath=E:\\mongodb\\data\\db   //用于存放数据库文件\n\n2.执行以下命令 mongod --config E:\\mongodb\\mongod.conf --install\n\n3.通过DOS命令行操作Mongodb\n\n    net start MongoDB //启动服务\n    net stop MongoDB //停止服务\n\n4.在命令行下执行 mongo 连接数据库， 连接成功后输入： show dbs;\n    admin   0.0625GB\n    local   0.03125GB\n    test    0.0625GB\n\n相关类似的信息说明配置成功，客户端连接MongoDB成功，现在就可以直接操作数据库啦。\n</code></pre><p>至此，Node学习历险记 -《快速开始》篇到此告一段落，如有表述不正确的地方还望指正，我将及时更正。</p>\n<p>欢迎加入交流群：322794303</p>\n","site":{"data":{}},"excerpt":"","more":"<p>背景：毕业三年有余，栖息于一线城市，先后从事web前端开发、移动前端开发等相关工作，一次偶然的机会{2012年}面试了迅雷下载-前端开发工程师一职（没通过），开始知道Node的重要性，初步的去了解了Node的发展史以及应用场景，在参加腾讯H5沙龙、公司级培训、内部培训等相关活动时经常能听到Node字眼，似乎Node与H5（移动开发）一样爆发，是前端的福音。今年{2013年}借着项目以及学习计划开启Node学习之旅。</p>\n<p>Node学习历险记采用游记的方式记录学习过程，由于文字功底弱，难免存在语句不通顺，标点错误等等一系列的语病，还望轻拍。^__^</p>\n<p>##快速开始</p>\n<p>###windows篇</p>\n<p>查看系统是32bit OR 64bit，DOS命令行下输入 wmic os get osarchitecture</p>\n<p>1.下载Node.js官方Windows可执行程序：</p>\n<pre><code>http://nodejs.org/download/\n</code></pre><p>2.下载MongoDB官方Windows可执行程序：</p>\n<pre><code>http://www.mongodb.org/downloads\n</code></pre><p>3.安装Node和MongoDB</p>\n<pre><code>a.安装完成后，打开windows命令行（win+r）,输入cmd进行命令行模式\nb.查看Node版本 node -v // 安装成功 v0.10.7\nc.查看MongoDB版本 mongo --version // 安装成功 MongoDB shell version: 2.4.3 \nd.添加MongoDB系统变量 //切换到其他盘符查看显示 mongo --version\n\n注：因为Node安装时默认会添加系统变量所以可全局访问，而MongoDB需手动添加系统变量。\n</code></pre><p>4.MongoDB相关配置</p>\n<ul>\n<li>详细的官方安装与配置（英文） <a href=\"http://docs.mongodb.org/manual/tutorial/install-mongodb-on-windows/\" target=\"_blank\" rel=\"noopener\">传送门</a></li>\n<li>简单直白的配置方式(DOS下输入命令测试)</li>\n</ul>\n<p><strong>1.了解mongo 和 mongod 两个命令的作用</strong>  </p>\n<pre><code>mongo:mongodb客户端命令，用于连接MongoDB服务器\nmongod:mongodb服务器命令，用于启动和配置MongoDB服务器\n</code></pre><p><strong>2.开始配置和启动MongoDB</strong></p>\n<pre><code>a.在DOS下输入 mongod 回车，可以看到提示信息如下：\n\nD:\\&gt;mongod\nmongod --help for help and startup options\nSun May 26 15:13:52.230\nSun May 26 15:13:52.243 warning: 32-bit servers don&apos;t have journaling enabled by\n default. Please use --journal if you want durability.\nSun May 26 15:13:52.244\nSun May 26 15:13:52.422 [initandlisten] MongoDB starting : pid=5408 port=27017 d\nbpath=\\data\\db\\ 32-bit host=yihaner\nSun May 26 15:13:52.423 [initandlisten]\nSun May 26 15:13:52.423 [initandlisten] ** NOTE: This is a 32 bit MongoDB binary\n.\nSun May 26 15:13:52.424 [initandlisten] **       32 bit builds are limited to le\nss than 2GB of data (or less with --journal).\nSun May 26 15:13:52.424 [initandlisten] **       Note that journaling defaults t\no off for 32 bit and is currently off.\nSun May 26 15:13:52.424 [initandlisten] **       See http://dochub.mongodb.org/c\nore/32bit\nSun May 26 15:13:52.425 [initandlisten]\nSun May 26 15:13:52.425 [initandlisten] db version v2.4.3\nSun May 26 15:13:52.426 [initandlisten] git version: fe1743177a5ea03e91e0052fb5e\n2cb2945f6d95f\nSun May 26 15:13:52.427 [initandlisten] build info: windows sys.getwindowsversio\nn(major=6, minor=0, build=6002, platform=2, service_pack=&apos;Service Pack 2&apos;) BOOST\n_LIB_VERSION=1_49\nSun May 26 15:13:52.427 [initandlisten] allocator: system\nSun May 26 15:13:52.428 [initandlisten] options: {}\nSun May 26 15:13:52.456 [initandlisten] exception in initAndListen: 10296\n*********************************************************************\n ERROR: dbpath (\\data\\db\\) does not exist.\n Create this directory or give existing directory in --dbpath.\n See http://dochub.mongodb.org/core/startingandstoppingmongo\n*********************************************************************\n, terminating\nSun May 26 15:13:52.457 dbexit:\nSun May 26 15:13:52.458 [initandlisten] shutdown: going to close listening socke\nts...\nSun May 26 15:13:52.458 [initandlisten] shutdown: going to flush diaglog...\nSun May 26 15:13:52.459 [initandlisten] shutdown: going to close sockets...\nSun May 26 15:13:52.459 [initandlisten] shutdown: waiting for fs preallocator...\n\nSun May 26 15:13:52.460 [initandlisten] shutdown: closing all files...\nSun May 26 15:13:52.460 [initandlisten] closeAllFiles() finished\nSun May 26 15:13:52.460 dbexit: really exiting now\n很明显错误显示dbpath(\\data\\db\\)不存在（默认文件路径是C:\\data\\db），这里指定\ndb目录为E:\\mongodb\\data\\db\nlog目录为E:\\mongodb\\log。\n\nb.指定dbpath来启动MongoDB（在DOS下输入 mongod --dbpath E:\\mongodb\\data\\db）\n\nSun May 26 15:26:25.423 [initandlisten] allocator: system\nSun May 26 15:26:25.423 [initandlisten] options: { dbpath: &quot;E:\\mongodb\\data\\db&quot;\n}\nSun May 26 15:26:25.460 [websvr] admin web console waiting for connections on po\nrt 28017\nSun May 26 15:26:25.460 [initandlisten] waiting for connections on port 27017\n可以看到MongoDB已启动，等待客户端的连接。\n我们发现这种启动方式每次最少要打开两个CMD窗口才可以进行操作，是否有更好的方法呢？\n如果MongoDB能够系统启动就好了，OK，可以把MongoDB添加到windows服务中。\n\nc.方法如下：\n\n1.在E:\\mongodb\\下创建mongod.conf配置文件，写入一下内容：\n\n    logpath=E:\\mongodb\\log\\mongo.log //用于存放日志文件\n    dbpath=E:\\mongodb\\data\\db   //用于存放数据库文件\n\n2.执行以下命令 mongod --config E:\\mongodb\\mongod.conf --install\n\n3.通过DOS命令行操作Mongodb\n\n    net start MongoDB //启动服务\n    net stop MongoDB //停止服务\n\n4.在命令行下执行 mongo 连接数据库， 连接成功后输入： show dbs;\n    admin   0.0625GB\n    local   0.03125GB\n    test    0.0625GB\n\n相关类似的信息说明配置成功，客户端连接MongoDB成功，现在就可以直接操作数据库啦。\n</code></pre><p>至此，Node学习历险记 -《快速开始》篇到此告一段落，如有表述不正确的地方还望指正，我将及时更正。</p>\n<p>欢迎加入交流群：322794303</p>\n"},{"layout":"post","title":"nodemailer使用过程中发现的一些问题","date":"2013-05-29T13:30:00.000Z","comments":1,"_content":"\n##nodemailer使用过程中发现的一些问题\n\n在实现Node.js开发指南中提到的[microblog](https://github.com/hankewins/microblog)后，想加入邮件功能模块，通过各方的了解，最终选择了[nodemailer](http://www.nodemailer.com/)。根据[nodemailer官网](http://www.nodemailer.com/)的使用方法介绍，可以很轻松的实现邮件发送功能，可是当你根据自己的想法去使用nodemailer时会遇到一些问题，以下详细的介绍nodemailer的使用以及遇到的问题的一些思考。\n\n###安装nodemailer\n    \n    npm install nodemailer\n\n###引入nodemailer模块\n\n    var nodemailer = require('nodemailer');\n\n###nodemailer实例\n\n    var nodemailer = require('nodemailer');\n    var transport = nodemailer.createTransport('SMTP', {\n        service: 'qq', //use well known service\n        auth: {\n            user: 'hankewins@qq.com',\n            pass: '123456'\n        }\n    });\n\n    var data = {\n        form: 'Hankewins <hankewins.vip@qq.com',\n        to: 'tomail@gmail.com,tomail2<tomail2@gmail.com>',\n        subject: 'Hello world',\n        text: 'Hello world, I am a test mail!',\n        html: '<b>Hello world, I am a test mail!</b>'\n    };\n\n    transport.sendMail(data, function(err, res){\n        if (err) {\n            console.log(err);\n        } else {\n            console.log('Message sent: ' + res.message);\n        }\n    });\n\n运行以上实例会产生以下几种情况：\n\n1.当user和pass正确时，采用Gmail SMTP方式邮件发送成功。（**Gmail只验证用户是否通过认证，不做其他格式要求**）\n\n2.当user和pass正确时，采用QQ SMTP方式邮件发送失败。（**QQ邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时格式须正确。**）  \n\n    { [SenderError: Mail from command failed - 501 mail from address must be same as\n        authorization user]\n        name: 'SenderError',\n        data: '501 mail from address must be same as authorization user' }\n\n3.当user和pass正确时，采用126、163 SMTP方式邮件发送失败。（**网易邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时验证邮件格式是否正确**）\n\n    { [SenderError: Mail from command failed - 550 Invalid User c6b4f4d2-2f21-4de3-8\n    985-68b589eab3d1]\n      name: 'SenderError',\n      data: '550 Invalid User c6b4f4d2-2f21-4de3-8985-68b589eab3d1' }\n    当用户的邮件格式不正确，或者收件人错误时，返回提示信息都没有QQ邮件服务精确\n\n为了明确的知道邮件发送过程，我通过windows DOS命令telnet smtp连接邮件服务器，测试邮件发送情况，同时找到了得出以上结论。\n\n###nodemailer的几点说明\n\n1.  官网的实例大部分都是采用定义service: \"Gmail\" 的SMTP发送邮件。(基中service是指定义好的接口，包含提供SMTP服务的邮件服务商列表。文件路径为：node_modules/nodermailer/lib/wellknown.js)\n\n2.nodemailer->service默认国内的邮件服务商只提供QQ的配置，如果需要使用其他邮件服务商的SMTP可以打开wellknown.js文件进行修改。\n\n    文件路径：node_modules/nodermailer/lib/wellknown.js\n\n    \"126\":{\n        transport: \"SMTP\",\n        host: \"smtp.126.com\",\n        port:465,\n        secureConnection: true,\n        requiresAuth: true,\n        domains: [\"126.com\"]\n    },\n    \"163\":{\n        transport: \"SMTP\",\n        host: \"smtp.163.com\",\n        port:465,\n        secureConnection: true,\n        requiresAuth: true,\n        domains: [\"163.com\"]\n    }\n\n    以上SMTP格式也可以在nodemailer.createTransport参数传递过程中指定。\n\n###参考:\n\nnodemailer官网 [http://www.nodemailer.com/](http://www.nodemailer.com/)  \nwin7下开启telnet [http://zhidao.baidu.com/question/316035780.html](http://zhidao.baidu.com/question/316035780.html)  \ntelnet smtp发送邮件 [http://www.cnblogs.com/rootq/articles/1320266.html](http://www.cnblogs.com/rootq/articles/1320266.html)\n\n欢迎加入交流群：322794303\n\n\n\n\n","source":"_posts/2013-05-29-how-to-use-node-middleware-nodemailer.md","raw":"---\nlayout: post\ntitle: nodemailer使用过程中发现的一些问题\ndate: 2013-05-29 21:30\ncomments: true\ncategories: [前端开发]\n---\n\n##nodemailer使用过程中发现的一些问题\n\n在实现Node.js开发指南中提到的[microblog](https://github.com/hankewins/microblog)后，想加入邮件功能模块，通过各方的了解，最终选择了[nodemailer](http://www.nodemailer.com/)。根据[nodemailer官网](http://www.nodemailer.com/)的使用方法介绍，可以很轻松的实现邮件发送功能，可是当你根据自己的想法去使用nodemailer时会遇到一些问题，以下详细的介绍nodemailer的使用以及遇到的问题的一些思考。\n\n###安装nodemailer\n    \n    npm install nodemailer\n\n###引入nodemailer模块\n\n    var nodemailer = require('nodemailer');\n\n###nodemailer实例\n\n    var nodemailer = require('nodemailer');\n    var transport = nodemailer.createTransport('SMTP', {\n        service: 'qq', //use well known service\n        auth: {\n            user: 'hankewins@qq.com',\n            pass: '123456'\n        }\n    });\n\n    var data = {\n        form: 'Hankewins <hankewins.vip@qq.com',\n        to: 'tomail@gmail.com,tomail2<tomail2@gmail.com>',\n        subject: 'Hello world',\n        text: 'Hello world, I am a test mail!',\n        html: '<b>Hello world, I am a test mail!</b>'\n    };\n\n    transport.sendMail(data, function(err, res){\n        if (err) {\n            console.log(err);\n        } else {\n            console.log('Message sent: ' + res.message);\n        }\n    });\n\n运行以上实例会产生以下几种情况：\n\n1.当user和pass正确时，采用Gmail SMTP方式邮件发送成功。（**Gmail只验证用户是否通过认证，不做其他格式要求**）\n\n2.当user和pass正确时，采用QQ SMTP方式邮件发送失败。（**QQ邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时格式须正确。**）  \n\n    { [SenderError: Mail from command failed - 501 mail from address must be same as\n        authorization user]\n        name: 'SenderError',\n        data: '501 mail from address must be same as authorization user' }\n\n3.当user和pass正确时，采用126、163 SMTP方式邮件发送失败。（**网易邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时验证邮件格式是否正确**）\n\n    { [SenderError: Mail from command failed - 550 Invalid User c6b4f4d2-2f21-4de3-8\n    985-68b589eab3d1]\n      name: 'SenderError',\n      data: '550 Invalid User c6b4f4d2-2f21-4de3-8985-68b589eab3d1' }\n    当用户的邮件格式不正确，或者收件人错误时，返回提示信息都没有QQ邮件服务精确\n\n为了明确的知道邮件发送过程，我通过windows DOS命令telnet smtp连接邮件服务器，测试邮件发送情况，同时找到了得出以上结论。\n\n###nodemailer的几点说明\n\n1.  官网的实例大部分都是采用定义service: \"Gmail\" 的SMTP发送邮件。(基中service是指定义好的接口，包含提供SMTP服务的邮件服务商列表。文件路径为：node_modules/nodermailer/lib/wellknown.js)\n\n2.nodemailer->service默认国内的邮件服务商只提供QQ的配置，如果需要使用其他邮件服务商的SMTP可以打开wellknown.js文件进行修改。\n\n    文件路径：node_modules/nodermailer/lib/wellknown.js\n\n    \"126\":{\n        transport: \"SMTP\",\n        host: \"smtp.126.com\",\n        port:465,\n        secureConnection: true,\n        requiresAuth: true,\n        domains: [\"126.com\"]\n    },\n    \"163\":{\n        transport: \"SMTP\",\n        host: \"smtp.163.com\",\n        port:465,\n        secureConnection: true,\n        requiresAuth: true,\n        domains: [\"163.com\"]\n    }\n\n    以上SMTP格式也可以在nodemailer.createTransport参数传递过程中指定。\n\n###参考:\n\nnodemailer官网 [http://www.nodemailer.com/](http://www.nodemailer.com/)  \nwin7下开启telnet [http://zhidao.baidu.com/question/316035780.html](http://zhidao.baidu.com/question/316035780.html)  \ntelnet smtp发送邮件 [http://www.cnblogs.com/rootq/articles/1320266.html](http://www.cnblogs.com/rootq/articles/1320266.html)\n\n欢迎加入交流群：322794303\n\n\n\n\n","slug":"how-to-use-node-middleware-nodemailer","published":1,"updated":"2018-05-30T08:12:15.841Z","photos":[],"link":"","_id":"cjhubytj50008yis5il63yn45","content":"<p>##nodemailer使用过程中发现的一些问题</p>\n<p>在实现Node.js开发指南中提到的<a href=\"https://github.com/hankewins/microblog\" target=\"_blank\" rel=\"noopener\">microblog</a>后，想加入邮件功能模块，通过各方的了解，最终选择了<a href=\"http://www.nodemailer.com/\" target=\"_blank\" rel=\"noopener\">nodemailer</a>。根据<a href=\"http://www.nodemailer.com/\" target=\"_blank\" rel=\"noopener\">nodemailer官网</a>的使用方法介绍，可以很轻松的实现邮件发送功能，可是当你根据自己的想法去使用nodemailer时会遇到一些问题，以下详细的介绍nodemailer的使用以及遇到的问题的一些思考。</p>\n<p>###安装nodemailer</p>\n<pre><code>npm install nodemailer\n</code></pre><p>###引入nodemailer模块</p>\n<pre><code>var nodemailer = require(&apos;nodemailer&apos;);\n</code></pre><p>###nodemailer实例</p>\n<pre><code>var nodemailer = require(&apos;nodemailer&apos;);\nvar transport = nodemailer.createTransport(&apos;SMTP&apos;, {\n    service: &apos;qq&apos;, //use well known service\n    auth: {\n        user: &apos;hankewins@qq.com&apos;,\n        pass: &apos;123456&apos;\n    }\n});\n\nvar data = {\n    form: &apos;Hankewins &lt;hankewins.vip@qq.com&apos;,\n    to: &apos;tomail@gmail.com,tomail2&lt;tomail2@gmail.com&gt;&apos;,\n    subject: &apos;Hello world&apos;,\n    text: &apos;Hello world, I am a test mail!&apos;,\n    html: &apos;&lt;b&gt;Hello world, I am a test mail!&lt;/b&gt;&apos;\n};\n\ntransport.sendMail(data, function(err, res){\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(&apos;Message sent: &apos; + res.message);\n    }\n});\n</code></pre><p>运行以上实例会产生以下几种情况：</p>\n<p>1.当user和pass正确时，采用Gmail SMTP方式邮件发送成功。（<strong>Gmail只验证用户是否通过认证，不做其他格式要求</strong>）</p>\n<p>2.当user和pass正确时，采用QQ SMTP方式邮件发送失败。（<strong>QQ邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时格式须正确。</strong>）  </p>\n<pre><code>{ [SenderError: Mail from command failed - 501 mail from address must be same as\n    authorization user]\n    name: &apos;SenderError&apos;,\n    data: &apos;501 mail from address must be same as authorization user&apos; }\n</code></pre><p>3.当user和pass正确时，采用126、163 SMTP方式邮件发送失败。（<strong>网易邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时验证邮件格式是否正确</strong>）</p>\n<pre><code>{ [SenderError: Mail from command failed - 550 Invalid User c6b4f4d2-2f21-4de3-8\n985-68b589eab3d1]\n  name: &apos;SenderError&apos;,\n  data: &apos;550 Invalid User c6b4f4d2-2f21-4de3-8985-68b589eab3d1&apos; }\n当用户的邮件格式不正确，或者收件人错误时，返回提示信息都没有QQ邮件服务精确\n</code></pre><p>为了明确的知道邮件发送过程，我通过windows DOS命令telnet smtp连接邮件服务器，测试邮件发送情况，同时找到了得出以上结论。</p>\n<p>###nodemailer的几点说明</p>\n<ol>\n<li>官网的实例大部分都是采用定义service: “Gmail” 的SMTP发送邮件。(基中service是指定义好的接口，包含提供SMTP服务的邮件服务商列表。文件路径为：node_modules/nodermailer/lib/wellknown.js)</li>\n</ol>\n<p>2.nodemailer-&gt;service默认国内的邮件服务商只提供QQ的配置，如果需要使用其他邮件服务商的SMTP可以打开wellknown.js文件进行修改。</p>\n<pre><code>文件路径：node_modules/nodermailer/lib/wellknown.js\n\n&quot;126&quot;:{\n    transport: &quot;SMTP&quot;,\n    host: &quot;smtp.126.com&quot;,\n    port:465,\n    secureConnection: true,\n    requiresAuth: true,\n    domains: [&quot;126.com&quot;]\n},\n&quot;163&quot;:{\n    transport: &quot;SMTP&quot;,\n    host: &quot;smtp.163.com&quot;,\n    port:465,\n    secureConnection: true,\n    requiresAuth: true,\n    domains: [&quot;163.com&quot;]\n}\n\n以上SMTP格式也可以在nodemailer.createTransport参数传递过程中指定。\n</code></pre><p>###参考:</p>\n<p>nodemailer官网 <a href=\"http://www.nodemailer.com/\" target=\"_blank\" rel=\"noopener\">http://www.nodemailer.com/</a><br>win7下开启telnet <a href=\"http://zhidao.baidu.com/question/316035780.html\" target=\"_blank\" rel=\"noopener\">http://zhidao.baidu.com/question/316035780.html</a><br>telnet smtp发送邮件 <a href=\"http://www.cnblogs.com/rootq/articles/1320266.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/rootq/articles/1320266.html</a></p>\n<p>欢迎加入交流群：322794303</p>\n","site":{"data":{}},"excerpt":"","more":"<p>##nodemailer使用过程中发现的一些问题</p>\n<p>在实现Node.js开发指南中提到的<a href=\"https://github.com/hankewins/microblog\" target=\"_blank\" rel=\"noopener\">microblog</a>后，想加入邮件功能模块，通过各方的了解，最终选择了<a href=\"http://www.nodemailer.com/\" target=\"_blank\" rel=\"noopener\">nodemailer</a>。根据<a href=\"http://www.nodemailer.com/\" target=\"_blank\" rel=\"noopener\">nodemailer官网</a>的使用方法介绍，可以很轻松的实现邮件发送功能，可是当你根据自己的想法去使用nodemailer时会遇到一些问题，以下详细的介绍nodemailer的使用以及遇到的问题的一些思考。</p>\n<p>###安装nodemailer</p>\n<pre><code>npm install nodemailer\n</code></pre><p>###引入nodemailer模块</p>\n<pre><code>var nodemailer = require(&apos;nodemailer&apos;);\n</code></pre><p>###nodemailer实例</p>\n<pre><code>var nodemailer = require(&apos;nodemailer&apos;);\nvar transport = nodemailer.createTransport(&apos;SMTP&apos;, {\n    service: &apos;qq&apos;, //use well known service\n    auth: {\n        user: &apos;hankewins@qq.com&apos;,\n        pass: &apos;123456&apos;\n    }\n});\n\nvar data = {\n    form: &apos;Hankewins &lt;hankewins.vip@qq.com&apos;,\n    to: &apos;tomail@gmail.com,tomail2&lt;tomail2@gmail.com&gt;&apos;,\n    subject: &apos;Hello world&apos;,\n    text: &apos;Hello world, I am a test mail!&apos;,\n    html: &apos;&lt;b&gt;Hello world, I am a test mail!&lt;/b&gt;&apos;\n};\n\ntransport.sendMail(data, function(err, res){\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(&apos;Message sent: &apos; + res.message);\n    }\n});\n</code></pre><p>运行以上实例会产生以下几种情况：</p>\n<p>1.当user和pass正确时，采用Gmail SMTP方式邮件发送成功。（<strong>Gmail只验证用户是否通过认证，不做其他格式要求</strong>）</p>\n<p>2.当user和pass正确时，采用QQ SMTP方式邮件发送失败。（<strong>QQ邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时格式须正确。</strong>）  </p>\n<pre><code>{ [SenderError: Mail from command failed - 501 mail from address must be same as\n    authorization user]\n    name: &apos;SenderError&apos;,\n    data: &apos;501 mail from address must be same as authorization user&apos; }\n</code></pre><p>3.当user和pass正确时，采用126、163 SMTP方式邮件发送失败。（<strong>网易邮件服务器验证用户是否通过认证、用户与收件人是否一致，同时验证邮件格式是否正确</strong>）</p>\n<pre><code>{ [SenderError: Mail from command failed - 550 Invalid User c6b4f4d2-2f21-4de3-8\n985-68b589eab3d1]\n  name: &apos;SenderError&apos;,\n  data: &apos;550 Invalid User c6b4f4d2-2f21-4de3-8985-68b589eab3d1&apos; }\n当用户的邮件格式不正确，或者收件人错误时，返回提示信息都没有QQ邮件服务精确\n</code></pre><p>为了明确的知道邮件发送过程，我通过windows DOS命令telnet smtp连接邮件服务器，测试邮件发送情况，同时找到了得出以上结论。</p>\n<p>###nodemailer的几点说明</p>\n<ol>\n<li>官网的实例大部分都是采用定义service: “Gmail” 的SMTP发送邮件。(基中service是指定义好的接口，包含提供SMTP服务的邮件服务商列表。文件路径为：node_modules/nodermailer/lib/wellknown.js)</li>\n</ol>\n<p>2.nodemailer-&gt;service默认国内的邮件服务商只提供QQ的配置，如果需要使用其他邮件服务商的SMTP可以打开wellknown.js文件进行修改。</p>\n<pre><code>文件路径：node_modules/nodermailer/lib/wellknown.js\n\n&quot;126&quot;:{\n    transport: &quot;SMTP&quot;,\n    host: &quot;smtp.126.com&quot;,\n    port:465,\n    secureConnection: true,\n    requiresAuth: true,\n    domains: [&quot;126.com&quot;]\n},\n&quot;163&quot;:{\n    transport: &quot;SMTP&quot;,\n    host: &quot;smtp.163.com&quot;,\n    port:465,\n    secureConnection: true,\n    requiresAuth: true,\n    domains: [&quot;163.com&quot;]\n}\n\n以上SMTP格式也可以在nodemailer.createTransport参数传递过程中指定。\n</code></pre><p>###参考:</p>\n<p>nodemailer官网 <a href=\"http://www.nodemailer.com/\" target=\"_blank\" rel=\"noopener\">http://www.nodemailer.com/</a><br>win7下开启telnet <a href=\"http://zhidao.baidu.com/question/316035780.html\" target=\"_blank\" rel=\"noopener\">http://zhidao.baidu.com/question/316035780.html</a><br>telnet smtp发送邮件 <a href=\"http://www.cnblogs.com/rootq/articles/1320266.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/rootq/articles/1320266.html</a></p>\n<p>欢迎加入交流群：322794303</p>\n"},{"layout":"post","title":"金立招聘移动前端开发工程师（长期有效）","date":"2013-06-10T10:50:00.000Z","comments":1,"_content":"\n工作内容与职责：\n\n1. 能快速熟悉前端标准组件，并能利用组件灵活布局页面和实现简单的效果。 \n2. 能高效完成布置的任务，并与后端开发人员密切的配合。\n3. 在开发过程中，能给出一定的方案来实现前后端交互。\n\n任职资格：\n\n1. 精通html+css布局，能熟练手写规范的代码。\n2. 精通jquery、YUI等常用的框架，熟悉基本的原生javascript。\n3. 熟悉web标准和网站性能优化。\n4. 熟悉html5、css3等前沿的前端技术，有成功案例的优先。\n5. 熟悉webkit内核浏览器，有相关经验的优先。\n6. 至少熟悉一种后端语言如php等。\n7. 两年以上的前端开发经验，计算机相关专业。\n\n备注：工作地点深圳、北京两地均招。\n\nPS:我们提倡快乐工作，快乐生活。因为只有生活快乐，工作才快乐。\n我们提倡自主学习，因为最好的老师就是你自己。\n我们提倡分享精神，因为分享可以让大家一起进步。\n\n不走繁琐的流程，直接内推，有兴趣的朋友就把简历发送至：hankewins#gmail.com\n\n","source":"_posts/2013-06-10-get-job-at-gionee.md","raw":"---\nlayout: post\ntitle: 金立招聘移动前端开发工程师（长期有效）\ndate: 2013-06-10 18:50\ncomments: true\ncategories: [工作与生活]\n---\n\n工作内容与职责：\n\n1. 能快速熟悉前端标准组件，并能利用组件灵活布局页面和实现简单的效果。 \n2. 能高效完成布置的任务，并与后端开发人员密切的配合。\n3. 在开发过程中，能给出一定的方案来实现前后端交互。\n\n任职资格：\n\n1. 精通html+css布局，能熟练手写规范的代码。\n2. 精通jquery、YUI等常用的框架，熟悉基本的原生javascript。\n3. 熟悉web标准和网站性能优化。\n4. 熟悉html5、css3等前沿的前端技术，有成功案例的优先。\n5. 熟悉webkit内核浏览器，有相关经验的优先。\n6. 至少熟悉一种后端语言如php等。\n7. 两年以上的前端开发经验，计算机相关专业。\n\n备注：工作地点深圳、北京两地均招。\n\nPS:我们提倡快乐工作，快乐生活。因为只有生活快乐，工作才快乐。\n我们提倡自主学习，因为最好的老师就是你自己。\n我们提倡分享精神，因为分享可以让大家一起进步。\n\n不走繁琐的流程，直接内推，有兴趣的朋友就把简历发送至：hankewins#gmail.com\n\n","slug":"get-job-at-gionee","published":1,"updated":"2018-05-30T08:12:15.842Z","photos":[],"link":"","_id":"cjhubytj8000byis5sv1d15kc","content":"<p>工作内容与职责：</p>\n<ol>\n<li>能快速熟悉前端标准组件，并能利用组件灵活布局页面和实现简单的效果。 </li>\n<li>能高效完成布置的任务，并与后端开发人员密切的配合。</li>\n<li>在开发过程中，能给出一定的方案来实现前后端交互。</li>\n</ol>\n<p>任职资格：</p>\n<ol>\n<li>精通html+css布局，能熟练手写规范的代码。</li>\n<li>精通jquery、YUI等常用的框架，熟悉基本的原生javascript。</li>\n<li>熟悉web标准和网站性能优化。</li>\n<li>熟悉html5、css3等前沿的前端技术，有成功案例的优先。</li>\n<li>熟悉webkit内核浏览器，有相关经验的优先。</li>\n<li>至少熟悉一种后端语言如php等。</li>\n<li>两年以上的前端开发经验，计算机相关专业。</li>\n</ol>\n<p>备注：工作地点深圳、北京两地均招。</p>\n<p>PS:我们提倡快乐工作，快乐生活。因为只有生活快乐，工作才快乐。<br>我们提倡自主学习，因为最好的老师就是你自己。<br>我们提倡分享精神，因为分享可以让大家一起进步。</p>\n<p>不走繁琐的流程，直接内推，有兴趣的朋友就把简历发送至：hankewins#gmail.com</p>\n","site":{"data":{}},"excerpt":"","more":"<p>工作内容与职责：</p>\n<ol>\n<li>能快速熟悉前端标准组件，并能利用组件灵活布局页面和实现简单的效果。 </li>\n<li>能高效完成布置的任务，并与后端开发人员密切的配合。</li>\n<li>在开发过程中，能给出一定的方案来实现前后端交互。</li>\n</ol>\n<p>任职资格：</p>\n<ol>\n<li>精通html+css布局，能熟练手写规范的代码。</li>\n<li>精通jquery、YUI等常用的框架，熟悉基本的原生javascript。</li>\n<li>熟悉web标准和网站性能优化。</li>\n<li>熟悉html5、css3等前沿的前端技术，有成功案例的优先。</li>\n<li>熟悉webkit内核浏览器，有相关经验的优先。</li>\n<li>至少熟悉一种后端语言如php等。</li>\n<li>两年以上的前端开发经验，计算机相关专业。</li>\n</ol>\n<p>备注：工作地点深圳、北京两地均招。</p>\n<p>PS:我们提倡快乐工作，快乐生活。因为只有生活快乐，工作才快乐。<br>我们提倡自主学习，因为最好的老师就是你自己。<br>我们提倡分享精神，因为分享可以让大家一起进步。</p>\n<p>不走繁琐的流程，直接内推，有兴趣的朋友就把简历发送至：hankewins#gmail.com</p>\n"},{"layout":"post","title":"lookitui移动端的通用样式组件库","date":"2013-06-13T11:20:00.000Z","comments":1,"_content":"\nlookitui是一个移动端的通用样式组件库。为了提升协同开发的效果，采用compass扩展插件的方式存在。\n\n[查看DEMO](/demo/dpl.html)\n\nlookitui的安装\n\n    gem install lookitui --pre\n    lookitui的结构\n    @import \"lookitui/vars\"; //变量的配置   \n    @import \"lookitui/reset\"; //reset.css   \n    @import \"lookitui/func\"; //通用的函数库  \n    @import \"lookitui/slider\"; //幻灯片组件  \n    @import \"lookitui/refresh\"; //加载组件  \n    @import \"lookitui/form\"; //表单样式  \n    @import \"lookitui/box\"; //区块样式  \n    @import \"lookitui/button\"; //按钮样式  \n    @import \"lookitui/list\"; //列表样式  \n    @import \"lookitui/loading\"; //loading样式  \n    @import \"lookitui/toolbar\"; //工具栏组件  \n    @import \"lookitui/gotop\"; //返回顶部组件  \n    @import \"lookitui/tab\"; //Tab切换组件\n\nlookitui的引用\n\n    //1.引用所有模块  \n    @import \"lookitui/all\";\n     \n    //2.引用单一模块  \n    @import \"lookitui/form\"; //例如：引用表单模块（Form最新版本）\n     \n    //3.引用固定版本的独立模块  \n    @import \"lookitui/form/0.1/form\"; //例如：引用表单模块（Form最新版本）\n \n注：引入独立模块是必须先引入lookitui核心模块。\n\n[查看DEMO](/demo/dpl.html)\n\ngithub访问地址：[http://github.com/hankewins/lookitui/](ttp://github.com/hankewins/lookitui/)\n\n","source":"_posts/2013-06-13-quick-start-lookitui.md","raw":"---\nlayout: post\ntitle: lookitui移动端的通用样式组件库\ndate: 2013-06-13 19:20\ncomments: true\ncategories: [前端开发]\n---\n\nlookitui是一个移动端的通用样式组件库。为了提升协同开发的效果，采用compass扩展插件的方式存在。\n\n[查看DEMO](/demo/dpl.html)\n\nlookitui的安装\n\n    gem install lookitui --pre\n    lookitui的结构\n    @import \"lookitui/vars\"; //变量的配置   \n    @import \"lookitui/reset\"; //reset.css   \n    @import \"lookitui/func\"; //通用的函数库  \n    @import \"lookitui/slider\"; //幻灯片组件  \n    @import \"lookitui/refresh\"; //加载组件  \n    @import \"lookitui/form\"; //表单样式  \n    @import \"lookitui/box\"; //区块样式  \n    @import \"lookitui/button\"; //按钮样式  \n    @import \"lookitui/list\"; //列表样式  \n    @import \"lookitui/loading\"; //loading样式  \n    @import \"lookitui/toolbar\"; //工具栏组件  \n    @import \"lookitui/gotop\"; //返回顶部组件  \n    @import \"lookitui/tab\"; //Tab切换组件\n\nlookitui的引用\n\n    //1.引用所有模块  \n    @import \"lookitui/all\";\n     \n    //2.引用单一模块  \n    @import \"lookitui/form\"; //例如：引用表单模块（Form最新版本）\n     \n    //3.引用固定版本的独立模块  \n    @import \"lookitui/form/0.1/form\"; //例如：引用表单模块（Form最新版本）\n \n注：引入独立模块是必须先引入lookitui核心模块。\n\n[查看DEMO](/demo/dpl.html)\n\ngithub访问地址：[http://github.com/hankewins/lookitui/](ttp://github.com/hankewins/lookitui/)\n\n","slug":"quick-start-lookitui","published":1,"updated":"2018-05-30T08:12:15.842Z","photos":[],"link":"","_id":"cjhubytja000cyis58be43mp8","content":"<p>lookitui是一个移动端的通用样式组件库。为了提升协同开发的效果，采用compass扩展插件的方式存在。</p>\n<p><a href=\"/demo/dpl.html\">查看DEMO</a></p>\n<p>lookitui的安装</p>\n<pre><code>gem install lookitui --pre\nlookitui的结构\n@import &quot;lookitui/vars&quot;; //变量的配置   \n@import &quot;lookitui/reset&quot;; //reset.css   \n@import &quot;lookitui/func&quot;; //通用的函数库  \n@import &quot;lookitui/slider&quot;; //幻灯片组件  \n@import &quot;lookitui/refresh&quot;; //加载组件  \n@import &quot;lookitui/form&quot;; //表单样式  \n@import &quot;lookitui/box&quot;; //区块样式  \n@import &quot;lookitui/button&quot;; //按钮样式  \n@import &quot;lookitui/list&quot;; //列表样式  \n@import &quot;lookitui/loading&quot;; //loading样式  \n@import &quot;lookitui/toolbar&quot;; //工具栏组件  \n@import &quot;lookitui/gotop&quot;; //返回顶部组件  \n@import &quot;lookitui/tab&quot;; //Tab切换组件\n</code></pre><p>lookitui的引用</p>\n<pre><code>//1.引用所有模块  \n@import &quot;lookitui/all&quot;;\n\n//2.引用单一模块  \n@import &quot;lookitui/form&quot;; //例如：引用表单模块（Form最新版本）\n\n//3.引用固定版本的独立模块  \n@import &quot;lookitui/form/0.1/form&quot;; //例如：引用表单模块（Form最新版本）\n</code></pre><p>注：引入独立模块是必须先引入lookitui核心模块。</p>\n<p><a href=\"/demo/dpl.html\">查看DEMO</a></p>\n<p>github访问地址：<a href=\"ttp://github.com/hankewins/lookitui/\" target=\"_blank\" rel=\"noopener\">http://github.com/hankewins/lookitui/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>lookitui是一个移动端的通用样式组件库。为了提升协同开发的效果，采用compass扩展插件的方式存在。</p>\n<p><a href=\"/demo/dpl.html\">查看DEMO</a></p>\n<p>lookitui的安装</p>\n<pre><code>gem install lookitui --pre\nlookitui的结构\n@import &quot;lookitui/vars&quot;; //变量的配置   \n@import &quot;lookitui/reset&quot;; //reset.css   \n@import &quot;lookitui/func&quot;; //通用的函数库  \n@import &quot;lookitui/slider&quot;; //幻灯片组件  \n@import &quot;lookitui/refresh&quot;; //加载组件  \n@import &quot;lookitui/form&quot;; //表单样式  \n@import &quot;lookitui/box&quot;; //区块样式  \n@import &quot;lookitui/button&quot;; //按钮样式  \n@import &quot;lookitui/list&quot;; //列表样式  \n@import &quot;lookitui/loading&quot;; //loading样式  \n@import &quot;lookitui/toolbar&quot;; //工具栏组件  \n@import &quot;lookitui/gotop&quot;; //返回顶部组件  \n@import &quot;lookitui/tab&quot;; //Tab切换组件\n</code></pre><p>lookitui的引用</p>\n<pre><code>//1.引用所有模块  \n@import &quot;lookitui/all&quot;;\n\n//2.引用单一模块  \n@import &quot;lookitui/form&quot;; //例如：引用表单模块（Form最新版本）\n\n//3.引用固定版本的独立模块  \n@import &quot;lookitui/form/0.1/form&quot;; //例如：引用表单模块（Form最新版本）\n</code></pre><p>注：引入独立模块是必须先引入lookitui核心模块。</p>\n<p><a href=\"/demo/dpl.html\">查看DEMO</a></p>\n<p>github访问地址：<a href=\"ttp://github.com/hankewins/lookitui/\" target=\"_blank\" rel=\"noopener\">http://github.com/hankewins/lookitui/</a></p>\n"},{"layout":"post","title":"在IT行业获得成功，你只需一项技能(转载)","date":"2013-07-07T13:10:00.000Z","comments":1,"_content":"\n能同时使用五种编程语言（包括一种机器语言）？不是。\n\n项目管理能力，再高就是获得PMP认证？也不是。\n\n超强的口才和书面沟通能力，正如工作职位中描述的那样？这不是痛点，但可以学习。\n\n我曾经与最好的IT专业人士一起工作，他们都具有超强的问题解决能力。\n\n问题解决能力？对，正是它。\n\n该图是否让你联想到你的机房？ 我们会不定期遇到很多问题，诸如从“我的电脑为什么锁住了”到“服务器为什么这么慢”等一系列问题。如何解决这些问题，是区分优秀专业人士和一般专业人员的标准。\n\n问题解决方法学\n\n在中学期间，我曾接触过该科学方法。过程是这样的：\n\n1.对问题进行明确的描述；\n\n2.做出假设；\n\n3.进行预测；\n\n4.验证假设。\n\n5.分析结果。\n\n该方法论可以应用到我所遇到的问题之上吗？当然可以。\n\n对问题进行明确的描述——通常，会很多问题要求你解决你。如“服务器为什么这么慢？”“我为什么连接不上数据库？”“该报告为什么运行超时？”\n\n做出假设——前天晚天，可能在服务器或SQL Serve上打了补丁。可能是网线没有插好。也可能是开发者改了存储程序中的一行代码。列出可能影响系统产生该问题的原因，并按该列表一一测试。\n\n进行预测——猜猜结果是怎样的。如果是一个你之前曾遇到的问题/错误，接下来如何处理，你心里就十分清楚了。如果是一个新问题，利用之前的经验和推断技巧，去判定哪些改变导致了系统产生问题。\n\n验证——制定一个计划，进行一处修改，然后检查问题是否解决。不要一次做出三处及以上修改， 这样不容易确定是哪处改变修复了该问题——一次只修改一处。要明白系统正常运行是怎样的。如果查询很慢，要了解问题发生之前性能是怎样的，问题发生时性能是怎样的，什么样的性能是可以接受的。明确的检验指标很重要。你必须能够测定出问题是否得到改善，是否保持原样，还是变得更加糟糕。\n\n分析结果——对指标进行验证。你是否获得你期望的结果？如果是，问题解决了吗？如果不是，根据你的列表，下一项检测是什么？继续根据列表一一检测并分析，直到问题解决。\n\n任何人都可以做到\n\n它不要求你具有计算机科学博士学位，也不要求化学硕士学位。只需要你始终如一的对待每一个问题。需要具有好奇心，具有查看模式的能力。\n\n在实践中，该方法会越来越简单。经常锻炼解决问题的能力，你将成为长优秀的IT专家，并从众多IT人中脱颖而出。\n\n原文来自： [Brent Ozar](http://www.brentozar.com/archive/2013/07/you-need-this-one-skill-to-succeed-in-it/#comments)","source":"_posts/2013-07-07-owner-one-skill-in-it-industy.md","raw":"---\nlayout: post\ntitle: 在IT行业获得成功，你只需一项技能(转载)\ndate: 2013-07-07 21:10\ncomments: true\ncategories: [引用]\n---\n\n能同时使用五种编程语言（包括一种机器语言）？不是。\n\n项目管理能力，再高就是获得PMP认证？也不是。\n\n超强的口才和书面沟通能力，正如工作职位中描述的那样？这不是痛点，但可以学习。\n\n我曾经与最好的IT专业人士一起工作，他们都具有超强的问题解决能力。\n\n问题解决能力？对，正是它。\n\n该图是否让你联想到你的机房？ 我们会不定期遇到很多问题，诸如从“我的电脑为什么锁住了”到“服务器为什么这么慢”等一系列问题。如何解决这些问题，是区分优秀专业人士和一般专业人员的标准。\n\n问题解决方法学\n\n在中学期间，我曾接触过该科学方法。过程是这样的：\n\n1.对问题进行明确的描述；\n\n2.做出假设；\n\n3.进行预测；\n\n4.验证假设。\n\n5.分析结果。\n\n该方法论可以应用到我所遇到的问题之上吗？当然可以。\n\n对问题进行明确的描述——通常，会很多问题要求你解决你。如“服务器为什么这么慢？”“我为什么连接不上数据库？”“该报告为什么运行超时？”\n\n做出假设——前天晚天，可能在服务器或SQL Serve上打了补丁。可能是网线没有插好。也可能是开发者改了存储程序中的一行代码。列出可能影响系统产生该问题的原因，并按该列表一一测试。\n\n进行预测——猜猜结果是怎样的。如果是一个你之前曾遇到的问题/错误，接下来如何处理，你心里就十分清楚了。如果是一个新问题，利用之前的经验和推断技巧，去判定哪些改变导致了系统产生问题。\n\n验证——制定一个计划，进行一处修改，然后检查问题是否解决。不要一次做出三处及以上修改， 这样不容易确定是哪处改变修复了该问题——一次只修改一处。要明白系统正常运行是怎样的。如果查询很慢，要了解问题发生之前性能是怎样的，问题发生时性能是怎样的，什么样的性能是可以接受的。明确的检验指标很重要。你必须能够测定出问题是否得到改善，是否保持原样，还是变得更加糟糕。\n\n分析结果——对指标进行验证。你是否获得你期望的结果？如果是，问题解决了吗？如果不是，根据你的列表，下一项检测是什么？继续根据列表一一检测并分析，直到问题解决。\n\n任何人都可以做到\n\n它不要求你具有计算机科学博士学位，也不要求化学硕士学位。只需要你始终如一的对待每一个问题。需要具有好奇心，具有查看模式的能力。\n\n在实践中，该方法会越来越简单。经常锻炼解决问题的能力，你将成为长优秀的IT专家，并从众多IT人中脱颖而出。\n\n原文来自： [Brent Ozar](http://www.brentozar.com/archive/2013/07/you-need-this-one-skill-to-succeed-in-it/#comments)","slug":"owner-one-skill-in-it-industy","published":1,"updated":"2018-05-30T08:12:15.843Z","photos":[],"link":"","_id":"cjhubytjd000fyis5viz55mog","content":"<p>能同时使用五种编程语言（包括一种机器语言）？不是。</p>\n<p>项目管理能力，再高就是获得PMP认证？也不是。</p>\n<p>超强的口才和书面沟通能力，正如工作职位中描述的那样？这不是痛点，但可以学习。</p>\n<p>我曾经与最好的IT专业人士一起工作，他们都具有超强的问题解决能力。</p>\n<p>问题解决能力？对，正是它。</p>\n<p>该图是否让你联想到你的机房？ 我们会不定期遇到很多问题，诸如从“我的电脑为什么锁住了”到“服务器为什么这么慢”等一系列问题。如何解决这些问题，是区分优秀专业人士和一般专业人员的标准。</p>\n<p>问题解决方法学</p>\n<p>在中学期间，我曾接触过该科学方法。过程是这样的：</p>\n<p>1.对问题进行明确的描述；</p>\n<p>2.做出假设；</p>\n<p>3.进行预测；</p>\n<p>4.验证假设。</p>\n<p>5.分析结果。</p>\n<p>该方法论可以应用到我所遇到的问题之上吗？当然可以。</p>\n<p>对问题进行明确的描述——通常，会很多问题要求你解决你。如“服务器为什么这么慢？”“我为什么连接不上数据库？”“该报告为什么运行超时？”</p>\n<p>做出假设——前天晚天，可能在服务器或SQL Serve上打了补丁。可能是网线没有插好。也可能是开发者改了存储程序中的一行代码。列出可能影响系统产生该问题的原因，并按该列表一一测试。</p>\n<p>进行预测——猜猜结果是怎样的。如果是一个你之前曾遇到的问题/错误，接下来如何处理，你心里就十分清楚了。如果是一个新问题，利用之前的经验和推断技巧，去判定哪些改变导致了系统产生问题。</p>\n<p>验证——制定一个计划，进行一处修改，然后检查问题是否解决。不要一次做出三处及以上修改， 这样不容易确定是哪处改变修复了该问题——一次只修改一处。要明白系统正常运行是怎样的。如果查询很慢，要了解问题发生之前性能是怎样的，问题发生时性能是怎样的，什么样的性能是可以接受的。明确的检验指标很重要。你必须能够测定出问题是否得到改善，是否保持原样，还是变得更加糟糕。</p>\n<p>分析结果——对指标进行验证。你是否获得你期望的结果？如果是，问题解决了吗？如果不是，根据你的列表，下一项检测是什么？继续根据列表一一检测并分析，直到问题解决。</p>\n<p>任何人都可以做到</p>\n<p>它不要求你具有计算机科学博士学位，也不要求化学硕士学位。只需要你始终如一的对待每一个问题。需要具有好奇心，具有查看模式的能力。</p>\n<p>在实践中，该方法会越来越简单。经常锻炼解决问题的能力，你将成为长优秀的IT专家，并从众多IT人中脱颖而出。</p>\n<p>原文来自： <a href=\"http://www.brentozar.com/archive/2013/07/you-need-this-one-skill-to-succeed-in-it/#comments\" target=\"_blank\" rel=\"noopener\">Brent Ozar</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>能同时使用五种编程语言（包括一种机器语言）？不是。</p>\n<p>项目管理能力，再高就是获得PMP认证？也不是。</p>\n<p>超强的口才和书面沟通能力，正如工作职位中描述的那样？这不是痛点，但可以学习。</p>\n<p>我曾经与最好的IT专业人士一起工作，他们都具有超强的问题解决能力。</p>\n<p>问题解决能力？对，正是它。</p>\n<p>该图是否让你联想到你的机房？ 我们会不定期遇到很多问题，诸如从“我的电脑为什么锁住了”到“服务器为什么这么慢”等一系列问题。如何解决这些问题，是区分优秀专业人士和一般专业人员的标准。</p>\n<p>问题解决方法学</p>\n<p>在中学期间，我曾接触过该科学方法。过程是这样的：</p>\n<p>1.对问题进行明确的描述；</p>\n<p>2.做出假设；</p>\n<p>3.进行预测；</p>\n<p>4.验证假设。</p>\n<p>5.分析结果。</p>\n<p>该方法论可以应用到我所遇到的问题之上吗？当然可以。</p>\n<p>对问题进行明确的描述——通常，会很多问题要求你解决你。如“服务器为什么这么慢？”“我为什么连接不上数据库？”“该报告为什么运行超时？”</p>\n<p>做出假设——前天晚天，可能在服务器或SQL Serve上打了补丁。可能是网线没有插好。也可能是开发者改了存储程序中的一行代码。列出可能影响系统产生该问题的原因，并按该列表一一测试。</p>\n<p>进行预测——猜猜结果是怎样的。如果是一个你之前曾遇到的问题/错误，接下来如何处理，你心里就十分清楚了。如果是一个新问题，利用之前的经验和推断技巧，去判定哪些改变导致了系统产生问题。</p>\n<p>验证——制定一个计划，进行一处修改，然后检查问题是否解决。不要一次做出三处及以上修改， 这样不容易确定是哪处改变修复了该问题——一次只修改一处。要明白系统正常运行是怎样的。如果查询很慢，要了解问题发生之前性能是怎样的，问题发生时性能是怎样的，什么样的性能是可以接受的。明确的检验指标很重要。你必须能够测定出问题是否得到改善，是否保持原样，还是变得更加糟糕。</p>\n<p>分析结果——对指标进行验证。你是否获得你期望的结果？如果是，问题解决了吗？如果不是，根据你的列表，下一项检测是什么？继续根据列表一一检测并分析，直到问题解决。</p>\n<p>任何人都可以做到</p>\n<p>它不要求你具有计算机科学博士学位，也不要求化学硕士学位。只需要你始终如一的对待每一个问题。需要具有好奇心，具有查看模式的能力。</p>\n<p>在实践中，该方法会越来越简单。经常锻炼解决问题的能力，你将成为长优秀的IT专家，并从众多IT人中脱颖而出。</p>\n<p>原文来自： <a href=\"http://www.brentozar.com/archive/2013/07/you-need-this-one-skill-to-succeed-in-it/#comments\" target=\"_blank\" rel=\"noopener\">Brent Ozar</a></p>\n"},{"layout":"post","title":"Ubuntu 12.0.4下安装Nodejs","date":"2013-07-12T15:25:00.000Z","comments":1,"_content":"\n###准备工作\n\n    sudo apt-get install g++ curl libssl-dev apache2-utils\n    \n###安装方式（一）：git clone\n\n    sudo apt-get install git-core\n    git clone git://github.com/ry/node.git\n    \n###安装方式（二）： 源码安装\n\n    wget http://nodejs.org/dist/v0.10.13/node-v0.10.13-linux-x64.tar.gz\n    mv node-v0.10.13-linux-x64.tar.gz node-linux-x64.tar.gz\n    tar -zxvf node-linux-x64.tar.gz\n    \n###编译和安装Node\n    \n    cd your-node-current-folder\n    ./configure\n    make\n    sudo make install\n    \n###查看是否安装成功\n\n    node -v OR node -version //查看Node.js当前的版本\n    \n###Node运行hello world\n\n在主文件夹创建hello.js,编辑以下文本：\n    \n    var http = require('http');  \n    http.createServer(function(req, res){  \n    res.writeHead(200, {'Content-Type': 'text/plain'});  \n    res.end('Hello world!');  \n    }).listen(3000,'127.0.0.1');  \n    console.log('Server running at http://127.0.0.1:3000/')\n\n###在命令行中运行\n\n    node hello.js\n\n打开浏览器，输入http://127.0.0.1:3000/，可以看到屏幕上显示\"Hello world!\"。\n\n","source":"_posts/2013-07-12-ubuntu-install-node-js.md","raw":"---\nlayout: post\ntitle: Ubuntu 12.0.4下安装Nodejs\ndate: 2013-07-12 23:25\ncomments: true\ncategories: [前端开发]\n---\n\n###准备工作\n\n    sudo apt-get install g++ curl libssl-dev apache2-utils\n    \n###安装方式（一）：git clone\n\n    sudo apt-get install git-core\n    git clone git://github.com/ry/node.git\n    \n###安装方式（二）： 源码安装\n\n    wget http://nodejs.org/dist/v0.10.13/node-v0.10.13-linux-x64.tar.gz\n    mv node-v0.10.13-linux-x64.tar.gz node-linux-x64.tar.gz\n    tar -zxvf node-linux-x64.tar.gz\n    \n###编译和安装Node\n    \n    cd your-node-current-folder\n    ./configure\n    make\n    sudo make install\n    \n###查看是否安装成功\n\n    node -v OR node -version //查看Node.js当前的版本\n    \n###Node运行hello world\n\n在主文件夹创建hello.js,编辑以下文本：\n    \n    var http = require('http');  \n    http.createServer(function(req, res){  \n    res.writeHead(200, {'Content-Type': 'text/plain'});  \n    res.end('Hello world!');  \n    }).listen(3000,'127.0.0.1');  \n    console.log('Server running at http://127.0.0.1:3000/')\n\n###在命令行中运行\n\n    node hello.js\n\n打开浏览器，输入http://127.0.0.1:3000/，可以看到屏幕上显示\"Hello world!\"。\n\n","slug":"ubuntu-install-node-js","published":1,"updated":"2018-05-30T08:12:15.844Z","photos":[],"link":"","_id":"cjhubytjf000gyis5gld3bp0t","content":"<p>###准备工作</p>\n<pre><code>sudo apt-get install g++ curl libssl-dev apache2-utils\n</code></pre><p>###安装方式（一）：git clone</p>\n<pre><code>sudo apt-get install git-core\ngit clone git://github.com/ry/node.git\n</code></pre><p>###安装方式（二）： 源码安装</p>\n<pre><code>wget http://nodejs.org/dist/v0.10.13/node-v0.10.13-linux-x64.tar.gz\nmv node-v0.10.13-linux-x64.tar.gz node-linux-x64.tar.gz\ntar -zxvf node-linux-x64.tar.gz\n</code></pre><p>###编译和安装Node</p>\n<pre><code>cd your-node-current-folder\n./configure\nmake\nsudo make install\n</code></pre><p>###查看是否安装成功</p>\n<pre><code>node -v OR node -version //查看Node.js当前的版本\n</code></pre><p>###Node运行hello world</p>\n<p>在主文件夹创建hello.js,编辑以下文本：</p>\n<pre><code>var http = require(&apos;http&apos;);  \nhttp.createServer(function(req, res){  \nres.writeHead(200, {&apos;Content-Type&apos;: &apos;text/plain&apos;});  \nres.end(&apos;Hello world!&apos;);  \n}).listen(3000,&apos;127.0.0.1&apos;);  \nconsole.log(&apos;Server running at http://127.0.0.1:3000/&apos;)\n</code></pre><p>###在命令行中运行</p>\n<pre><code>node hello.js\n</code></pre><p>打开浏览器，输入<a href=\"http://127.0.0.1:3000/，可以看到屏幕上显示&quot;Hello\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:3000/，可以看到屏幕上显示&quot;Hello</a> world!”。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>###准备工作</p>\n<pre><code>sudo apt-get install g++ curl libssl-dev apache2-utils\n</code></pre><p>###安装方式（一）：git clone</p>\n<pre><code>sudo apt-get install git-core\ngit clone git://github.com/ry/node.git\n</code></pre><p>###安装方式（二）： 源码安装</p>\n<pre><code>wget http://nodejs.org/dist/v0.10.13/node-v0.10.13-linux-x64.tar.gz\nmv node-v0.10.13-linux-x64.tar.gz node-linux-x64.tar.gz\ntar -zxvf node-linux-x64.tar.gz\n</code></pre><p>###编译和安装Node</p>\n<pre><code>cd your-node-current-folder\n./configure\nmake\nsudo make install\n</code></pre><p>###查看是否安装成功</p>\n<pre><code>node -v OR node -version //查看Node.js当前的版本\n</code></pre><p>###Node运行hello world</p>\n<p>在主文件夹创建hello.js,编辑以下文本：</p>\n<pre><code>var http = require(&apos;http&apos;);  \nhttp.createServer(function(req, res){  \nres.writeHead(200, {&apos;Content-Type&apos;: &apos;text/plain&apos;});  \nres.end(&apos;Hello world!&apos;);  \n}).listen(3000,&apos;127.0.0.1&apos;);  \nconsole.log(&apos;Server running at http://127.0.0.1:3000/&apos;)\n</code></pre><p>###在命令行中运行</p>\n<pre><code>node hello.js\n</code></pre><p>打开浏览器，输入<a href=\"http://127.0.0.1:3000/，可以看到屏幕上显示&quot;Hello\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:3000/，可以看到屏幕上显示&quot;Hello</a> world!”。</p>\n"},{"layout":"post","title":"前端系列Javascript“小题大做”","date":"2013-07-17T15:14:00.000Z","comments":1,"_content":"\n###背景\n\n在内部分享会上多次听到后端同学希望前端同学能分享一些JS的基础知识和技巧。一直以来都忙于各种事情，好久没有关注Javascript基础内容，借今天@valleykid(ICAT作者)在群里发的一个JS小题来揭开JavaScript精典问题集的大门。\n\n以后将持续收集和更新JavaScript各种代表性“小题”，并做出详细的解答。\n\n###情节\n\n1.运行下面的代码，输出的结果是？\n\n    var a = 10;\n    sayHi();\n    function sayHi(){\n        var a = a + 10;\n        alert(a);\n        return a;\n    }\n    alert(a);\n    alert(sayHi()+10);\n \n答案是NaN, 10, NaN, NaN\n\n分析：第一次的NaN，是因为var a在函数内部声明，js解析器遇到会提前解析，并把a的值设为undefined，此时的a已经在内部的作用域里找到了，就不用沿着作用域链向上找了，所以全局a不会影响函数内部的a，很自然的结果应该为：\n\n第一次：undefined+10 //输出结果：NaN\n\n第二次：因为局部的a在函数执行完销毁，在执行的时候也没对a造成影响，所以全局a保持其初值10 //输出结果：10\n\n以下类推......\n\n持续更新中...\n\n###结局\n\n由于个人能力有限，对问题的收集与解答不正确的地方在所难免，共同学习，共同进步，欢迎指正。\n","source":"_posts/2013-07-17-javascript-question-collection.md","raw":"---\nlayout: post\ntitle: 前端系列Javascript“小题大做”\ndate: 2013-07-17 23:14\ncomments: true\ncategories: [前端开发]\n---\n\n###背景\n\n在内部分享会上多次听到后端同学希望前端同学能分享一些JS的基础知识和技巧。一直以来都忙于各种事情，好久没有关注Javascript基础内容，借今天@valleykid(ICAT作者)在群里发的一个JS小题来揭开JavaScript精典问题集的大门。\n\n以后将持续收集和更新JavaScript各种代表性“小题”，并做出详细的解答。\n\n###情节\n\n1.运行下面的代码，输出的结果是？\n\n    var a = 10;\n    sayHi();\n    function sayHi(){\n        var a = a + 10;\n        alert(a);\n        return a;\n    }\n    alert(a);\n    alert(sayHi()+10);\n \n答案是NaN, 10, NaN, NaN\n\n分析：第一次的NaN，是因为var a在函数内部声明，js解析器遇到会提前解析，并把a的值设为undefined，此时的a已经在内部的作用域里找到了，就不用沿着作用域链向上找了，所以全局a不会影响函数内部的a，很自然的结果应该为：\n\n第一次：undefined+10 //输出结果：NaN\n\n第二次：因为局部的a在函数执行完销毁，在执行的时候也没对a造成影响，所以全局a保持其初值10 //输出结果：10\n\n以下类推......\n\n持续更新中...\n\n###结局\n\n由于个人能力有限，对问题的收集与解答不正确的地方在所难免，共同学习，共同进步，欢迎指正。\n","slug":"javascript-question-collection","published":1,"updated":"2018-05-30T08:12:15.844Z","photos":[],"link":"","_id":"cjhubytji000jyis5c3kllxdm","content":"<p>###背景</p>\n<p>在内部分享会上多次听到后端同学希望前端同学能分享一些JS的基础知识和技巧。一直以来都忙于各种事情，好久没有关注Javascript基础内容，借今天@valleykid(ICAT作者)在群里发的一个JS小题来揭开JavaScript精典问题集的大门。</p>\n<p>以后将持续收集和更新JavaScript各种代表性“小题”，并做出详细的解答。</p>\n<p>###情节</p>\n<p>1.运行下面的代码，输出的结果是？</p>\n<pre><code>var a = 10;\nsayHi();\nfunction sayHi(){\n    var a = a + 10;\n    alert(a);\n    return a;\n}\nalert(a);\nalert(sayHi()+10);\n</code></pre><p>答案是NaN, 10, NaN, NaN</p>\n<p>分析：第一次的NaN，是因为var a在函数内部声明，js解析器遇到会提前解析，并把a的值设为undefined，此时的a已经在内部的作用域里找到了，就不用沿着作用域链向上找了，所以全局a不会影响函数内部的a，很自然的结果应该为：</p>\n<p>第一次：undefined+10 //输出结果：NaN</p>\n<p>第二次：因为局部的a在函数执行完销毁，在执行的时候也没对a造成影响，所以全局a保持其初值10 //输出结果：10</p>\n<p>以下类推……</p>\n<p>持续更新中…</p>\n<p>###结局</p>\n<p>由于个人能力有限，对问题的收集与解答不正确的地方在所难免，共同学习，共同进步，欢迎指正。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>###背景</p>\n<p>在内部分享会上多次听到后端同学希望前端同学能分享一些JS的基础知识和技巧。一直以来都忙于各种事情，好久没有关注Javascript基础内容，借今天@valleykid(ICAT作者)在群里发的一个JS小题来揭开JavaScript精典问题集的大门。</p>\n<p>以后将持续收集和更新JavaScript各种代表性“小题”，并做出详细的解答。</p>\n<p>###情节</p>\n<p>1.运行下面的代码，输出的结果是？</p>\n<pre><code>var a = 10;\nsayHi();\nfunction sayHi(){\n    var a = a + 10;\n    alert(a);\n    return a;\n}\nalert(a);\nalert(sayHi()+10);\n</code></pre><p>答案是NaN, 10, NaN, NaN</p>\n<p>分析：第一次的NaN，是因为var a在函数内部声明，js解析器遇到会提前解析，并把a的值设为undefined，此时的a已经在内部的作用域里找到了，就不用沿着作用域链向上找了，所以全局a不会影响函数内部的a，很自然的结果应该为：</p>\n<p>第一次：undefined+10 //输出结果：NaN</p>\n<p>第二次：因为局部的a在函数执行完销毁，在执行的时候也没对a造成影响，所以全局a保持其初值10 //输出结果：10</p>\n<p>以下类推……</p>\n<p>持续更新中…</p>\n<p>###结局</p>\n<p>由于个人能力有限，对问题的收集与解答不正确的地方在所难免，共同学习，共同进步，欢迎指正。</p>\n"},{"layout":"post","title":"ST2打开.scss文件时自动生成并打开.dump文件的BUG","date":"2013-08-02T13:50:00.000Z","comments":1,"_content":"\n今天同事用ST2打开.scss项目文件时，出现自动生成并打开一个.dump文件，而且文件中的代码不再高度显示，分析如下：\n\n1..dump是什么文件？（系统内存中存储的临时文件）。\n\n2.打开.scss文件时生成.dump文件，这是为什么？（.scss需要编译成.css文件，同时存在编码问题）。\n\n3.什么影响打开.scss文件时才会生成.dump文件？（ST2安装的插件、插件文件损毁）。\n\n通过以上分析，我们开始Remove Package中可能引起问题的插件例如SublimeOnSaveBuild、PyV8,重启ST2发现问题依然存在，后面通过搜索相关资料发现有类似问题的答案，重新查看了ST2中安装的插件发现安装了GBK Encoding Support，移除该插件后，重新打开.scss文件，代码正常高度显示。\n\n疑问：GBK Encoding Support一直都在使用，为什么之前没有出现这样的问题呢？\n\n1.GBK Encoding Support 插件对GBK存在不稳定。\n\n2.通过SVN版本管理，某一方没有安装GBK Encoding Support插件，而已一方安装了GBK Encoding Support插件。\n\n感谢 [凌毅] 提供修改版的 GBK Encoding Support，支持语法高亮。\n\n下载地址：[http://pan.baidu.com/share/link?shareid=174741&uk=2534294120](http://pan.baidu.com/share/link?shareid=174741&uk=2534294120)\n\n使用方法：下载 GBK Encoding Support.sublime-package 文件 替换 SublimeText2\\Pristine Packages 下的GBK Encoding Support.sublime-package 文件，重启ST2就可以了。","source":"_posts/2013-08-02-sublime-text-open-dump-bug.md","raw":"---\nlayout: post\ntitle: ST2打开.scss文件时自动生成并打开.dump文件的BUG\ndate: 2013-08-02 21:50\ncomments: true\ncategories: [前端开发]\n---\n\n今天同事用ST2打开.scss项目文件时，出现自动生成并打开一个.dump文件，而且文件中的代码不再高度显示，分析如下：\n\n1..dump是什么文件？（系统内存中存储的临时文件）。\n\n2.打开.scss文件时生成.dump文件，这是为什么？（.scss需要编译成.css文件，同时存在编码问题）。\n\n3.什么影响打开.scss文件时才会生成.dump文件？（ST2安装的插件、插件文件损毁）。\n\n通过以上分析，我们开始Remove Package中可能引起问题的插件例如SublimeOnSaveBuild、PyV8,重启ST2发现问题依然存在，后面通过搜索相关资料发现有类似问题的答案，重新查看了ST2中安装的插件发现安装了GBK Encoding Support，移除该插件后，重新打开.scss文件，代码正常高度显示。\n\n疑问：GBK Encoding Support一直都在使用，为什么之前没有出现这样的问题呢？\n\n1.GBK Encoding Support 插件对GBK存在不稳定。\n\n2.通过SVN版本管理，某一方没有安装GBK Encoding Support插件，而已一方安装了GBK Encoding Support插件。\n\n感谢 [凌毅] 提供修改版的 GBK Encoding Support，支持语法高亮。\n\n下载地址：[http://pan.baidu.com/share/link?shareid=174741&uk=2534294120](http://pan.baidu.com/share/link?shareid=174741&uk=2534294120)\n\n使用方法：下载 GBK Encoding Support.sublime-package 文件 替换 SublimeText2\\Pristine Packages 下的GBK Encoding Support.sublime-package 文件，重启ST2就可以了。","slug":"sublime-text-open-dump-bug","published":1,"updated":"2018-05-30T08:12:15.845Z","photos":[],"link":"","_id":"cjhubytjj000lyis52lx706lx","content":"<p>今天同事用ST2打开.scss项目文件时，出现自动生成并打开一个.dump文件，而且文件中的代码不再高度显示，分析如下：</p>\n<p>1..dump是什么文件？（系统内存中存储的临时文件）。</p>\n<p>2.打开.scss文件时生成.dump文件，这是为什么？（.scss需要编译成.css文件，同时存在编码问题）。</p>\n<p>3.什么影响打开.scss文件时才会生成.dump文件？（ST2安装的插件、插件文件损毁）。</p>\n<p>通过以上分析，我们开始Remove Package中可能引起问题的插件例如SublimeOnSaveBuild、PyV8,重启ST2发现问题依然存在，后面通过搜索相关资料发现有类似问题的答案，重新查看了ST2中安装的插件发现安装了GBK Encoding Support，移除该插件后，重新打开.scss文件，代码正常高度显示。</p>\n<p>疑问：GBK Encoding Support一直都在使用，为什么之前没有出现这样的问题呢？</p>\n<p>1.GBK Encoding Support 插件对GBK存在不稳定。</p>\n<p>2.通过SVN版本管理，某一方没有安装GBK Encoding Support插件，而已一方安装了GBK Encoding Support插件。</p>\n<p>感谢 [凌毅] 提供修改版的 GBK Encoding Support，支持语法高亮。</p>\n<p>下载地址：<a href=\"http://pan.baidu.com/share/link?shareid=174741&amp;uk=2534294120\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/share/link?shareid=174741&amp;uk=2534294120</a></p>\n<p>使用方法：下载 GBK Encoding Support.sublime-package 文件 替换 SublimeText2\\Pristine Packages 下的GBK Encoding Support.sublime-package 文件，重启ST2就可以了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天同事用ST2打开.scss项目文件时，出现自动生成并打开一个.dump文件，而且文件中的代码不再高度显示，分析如下：</p>\n<p>1..dump是什么文件？（系统内存中存储的临时文件）。</p>\n<p>2.打开.scss文件时生成.dump文件，这是为什么？（.scss需要编译成.css文件，同时存在编码问题）。</p>\n<p>3.什么影响打开.scss文件时才会生成.dump文件？（ST2安装的插件、插件文件损毁）。</p>\n<p>通过以上分析，我们开始Remove Package中可能引起问题的插件例如SublimeOnSaveBuild、PyV8,重启ST2发现问题依然存在，后面通过搜索相关资料发现有类似问题的答案，重新查看了ST2中安装的插件发现安装了GBK Encoding Support，移除该插件后，重新打开.scss文件，代码正常高度显示。</p>\n<p>疑问：GBK Encoding Support一直都在使用，为什么之前没有出现这样的问题呢？</p>\n<p>1.GBK Encoding Support 插件对GBK存在不稳定。</p>\n<p>2.通过SVN版本管理，某一方没有安装GBK Encoding Support插件，而已一方安装了GBK Encoding Support插件。</p>\n<p>感谢 [凌毅] 提供修改版的 GBK Encoding Support，支持语法高亮。</p>\n<p>下载地址：<a href=\"http://pan.baidu.com/share/link?shareid=174741&amp;uk=2534294120\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/share/link?shareid=174741&amp;uk=2534294120</a></p>\n<p>使用方法：下载 GBK Encoding Support.sublime-package 文件 替换 SublimeText2\\Pristine Packages 下的GBK Encoding Support.sublime-package 文件，重启ST2就可以了。</p>\n"},{"layout":"post","title":"Ubuntu 12.04下Sublime Text 2的详细安装与破解过程","date":"2013-08-10T13:37:00.000Z","comments":1,"_content":"\n记得之前也写过一篇文章《前端开发环境（ST2）搭建过程》，主要讲不同环境下安装的过程以及当时团队前端开发环境搭建过程（涉及到业务需求的一些组件、外部工具等等）。本篇文章意在详细讲解Ubuntu 12.04（与版本无关）下安装破解ST2的过程。\n\n使用ST2已有很久时间了，一直认为它是“最好的一款前端开发工具”，喜欢它体积小、速度快、外观简单、代码语法高亮清晰、插件丰富、安装简单。实际上ST2是一款共享软件，收费（59刀）但可以永久免费试用的跨平台的编辑神器。好了，不多在这里扯蛋啦，有讲的不好、或者不清晰的地方还请指正。\n\n为什么不使用ST3呢？ （答：ST3改动很大，不能与ST2兼容，因此没有丰富的插件，后期可以进行尝试安装。）\n\n一、ST2安装流程:\n官网下载安装包\n官网地址：[http://www.sublimetext.com/2](http://www.sublimetext.com/2)\n\nST2目前是2.0.2版，由于软件源并非默认就存在，所以apt-get install是无法下载到的。官网也是提供直接的下载包，linux下是.bz2的文件。文件不大，才5M多一点。\n\n解压放置\n解压并不难，随便找个目录解压就行，但考虑到后面要能在命令行下方便的快速启动，推荐解压到/usr/lib/目录下，我用的方法是先解压后搬移，命令如下：\n\n    tar -xvf Sublime\\ Text\\ 2.0.1.tar.bz2 //解压到当前目录\n    mv Sublime\\ Text\\ 2 /usr/lib/ //移动到／usr/lib／目录下\n    sudo mv Sublime\\ Text\\ 2 sublime-text-2 //修改文件名为sublime-text-2\n    其中的\\为转义符\n\n这样做是因为$PATH这个环境变量自动涵盖了/usr/lib这个目录，不用专门去修改环境变量。\n\n然后键入：\n\n    ln -s /usr/lib/sublime-text-2/sublime_text /usr/bin/st2\n\n这行命令是在/usr/bin/目录下建立一个名为st2链接，这样后面可以比较方便的用命令行启动这个编辑器。其中st2这个名字是自行定义的，用户可以定义的更加简单方便。\n\n这个时候应该已经安装结束了，可以用st2来打开一个文件试试。\n\n侧边条LaunchBar设置\n由于并非安装，缺少Ubuntu桌面运行的一些基本配置，比如不能将它加入桌面侧边的启动器，这个和通过软件安装中心安装的程序不太一样。要做到这一点，需要增加一个配置文件，放在/usr/share/appliations/路径下，比如增加sublime.desktop，文件内容如下：\n\n    [Desktop Entry]\n    Version=1.0\n    Name=Sublime Text 2\n    # Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n    # From Ubuntu's language-pack-kde-XX-base packages, version 9.04-20090413.\n    GenericName=Text Editor\n     \n    Exec=st2\n    Terminal=false\n    Icon=/usr/lib/sublime-text-2/Icon/48x48/sublime_text.png\n    Type=Application\n    Categories=TextEditor;IDE;Development\n    X-Ayatana-Desktop-Shortcuts=NewWindow\n     \n    [NewWindow Shortcut Group]\n    Name=New Window\n    Exec=st2 -n\n    TargetEnvironment=Unity\n\n保存后给予可执行属性即可。\n\nFAQ\n\n如果一定希望通过apt-get install来安装，可以如下来做：\n\n    sudo add-apt-repository ppa:webupd8team/sublime-text-2\n    sudo apt-get update\n    sudo apt-get install sublime-text-2\n\n关于package control以及前端插件的安装可以查看我之前写的文章《前端开发环境（ST2）搭建过程》。\n\n二、Linux下ST2破解的过程\n\n首先查看一下ST2安装路径(推荐安装的路径是：／usr/lib/sublime-text-2)，然后用vim打开sublime_text文件\n\n    ＃  whereis sublime-text-2\n\n输出结果：\n\n    ＃ sublime-text-2:/usr/bin/sublime-text-2 /usr/lib/sublime-text-2 /usr/bin/X11/sublime-text-2    －－这里是两条信息，第二个/usr/前面有一个空格的\n\n然后，进入第一个路径下，查看有哪些文件，输入：\n\n    #  cd /usr/lib/sublime-text-2/\n    #  ls \n\n会列出的文件信息有：\n\n``Icon lib PackageSetup.py Pristine Packages sublimeplugin.py sublimetext``\n\n然后我们用vim打开这个文件（如果没有装vim 输入：# sudo apt-get install vim 安装）\n\n    #sudo vim /usr/lib/sublime-text-2/sublime_text\n\n将文件转成十六进制形式。vim中输入\n\n    :%!xxd\n\n在vim中定位至“Thanks”文字附近。\n\n    :/Thanks\n\n接着查找数字串“3342”\n\n    :/3342\n\n找到一处3342的地方大致是这个样子 ……4333 3342 3032…….\n\n将这里的3342 改为3242,在vim中输入\n\n    :s/3342/3242\n\n将文件转换回去。\n\n    :%!xxd -r\n\n保存文件、退出。\n\n    :wq\n\n打开程序，去help-enter licence 里贴进去通过程序算出来的Licence，OK 成功了。\n\n    —–BEGIN LICENSE—–\n    China\n    Unlimited User License\n    EA7E-2861\n    BE67D2175D3569FDAB9EB5340FAD2822\n    E7B56B3397A76AA9FBE8AC3D3C65918B\n    DFC28F2EA158140D9E07853D594818EB\n    3A237B2E8E98ED257C269548F50EDA34\n    EF0C7F72D8917DB538A0245E46BFD6B1\n    85F4EDE331F253530ED67A5C19E92399\n    04C5F4A1AF4AF3DB5EC49C1FEE17CA76\n    7E369F8AAE4AC6C6E756B5882E1608B9\n    —–END LICENSE—–\n\n补充说明：Sublime Text 2是一款轻量型的编辑器，但功能却远远超过了我的预期，让我很满意的一点是速度快，搜索，跳转等都相当快，另外还有多重选中的功能，这个也挺实用的，总之这款编辑器可以尝试一下，是个不错的选择。\n\n","source":"_posts/2013-08-10-ubuntu-install-sublime-text-2.md","raw":"---\nlayout: post\ntitle: Ubuntu 12.04下Sublime Text 2的详细安装与破解过程\ndate: 2013-08-10 21:37\ncomments: true\ncategories: [前端开发]\n---\n\n记得之前也写过一篇文章《前端开发环境（ST2）搭建过程》，主要讲不同环境下安装的过程以及当时团队前端开发环境搭建过程（涉及到业务需求的一些组件、外部工具等等）。本篇文章意在详细讲解Ubuntu 12.04（与版本无关）下安装破解ST2的过程。\n\n使用ST2已有很久时间了，一直认为它是“最好的一款前端开发工具”，喜欢它体积小、速度快、外观简单、代码语法高亮清晰、插件丰富、安装简单。实际上ST2是一款共享软件，收费（59刀）但可以永久免费试用的跨平台的编辑神器。好了，不多在这里扯蛋啦，有讲的不好、或者不清晰的地方还请指正。\n\n为什么不使用ST3呢？ （答：ST3改动很大，不能与ST2兼容，因此没有丰富的插件，后期可以进行尝试安装。）\n\n一、ST2安装流程:\n官网下载安装包\n官网地址：[http://www.sublimetext.com/2](http://www.sublimetext.com/2)\n\nST2目前是2.0.2版，由于软件源并非默认就存在，所以apt-get install是无法下载到的。官网也是提供直接的下载包，linux下是.bz2的文件。文件不大，才5M多一点。\n\n解压放置\n解压并不难，随便找个目录解压就行，但考虑到后面要能在命令行下方便的快速启动，推荐解压到/usr/lib/目录下，我用的方法是先解压后搬移，命令如下：\n\n    tar -xvf Sublime\\ Text\\ 2.0.1.tar.bz2 //解压到当前目录\n    mv Sublime\\ Text\\ 2 /usr/lib/ //移动到／usr/lib／目录下\n    sudo mv Sublime\\ Text\\ 2 sublime-text-2 //修改文件名为sublime-text-2\n    其中的\\为转义符\n\n这样做是因为$PATH这个环境变量自动涵盖了/usr/lib这个目录，不用专门去修改环境变量。\n\n然后键入：\n\n    ln -s /usr/lib/sublime-text-2/sublime_text /usr/bin/st2\n\n这行命令是在/usr/bin/目录下建立一个名为st2链接，这样后面可以比较方便的用命令行启动这个编辑器。其中st2这个名字是自行定义的，用户可以定义的更加简单方便。\n\n这个时候应该已经安装结束了，可以用st2来打开一个文件试试。\n\n侧边条LaunchBar设置\n由于并非安装，缺少Ubuntu桌面运行的一些基本配置，比如不能将它加入桌面侧边的启动器，这个和通过软件安装中心安装的程序不太一样。要做到这一点，需要增加一个配置文件，放在/usr/share/appliations/路径下，比如增加sublime.desktop，文件内容如下：\n\n    [Desktop Entry]\n    Version=1.0\n    Name=Sublime Text 2\n    # Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n    # From Ubuntu's language-pack-kde-XX-base packages, version 9.04-20090413.\n    GenericName=Text Editor\n     \n    Exec=st2\n    Terminal=false\n    Icon=/usr/lib/sublime-text-2/Icon/48x48/sublime_text.png\n    Type=Application\n    Categories=TextEditor;IDE;Development\n    X-Ayatana-Desktop-Shortcuts=NewWindow\n     \n    [NewWindow Shortcut Group]\n    Name=New Window\n    Exec=st2 -n\n    TargetEnvironment=Unity\n\n保存后给予可执行属性即可。\n\nFAQ\n\n如果一定希望通过apt-get install来安装，可以如下来做：\n\n    sudo add-apt-repository ppa:webupd8team/sublime-text-2\n    sudo apt-get update\n    sudo apt-get install sublime-text-2\n\n关于package control以及前端插件的安装可以查看我之前写的文章《前端开发环境（ST2）搭建过程》。\n\n二、Linux下ST2破解的过程\n\n首先查看一下ST2安装路径(推荐安装的路径是：／usr/lib/sublime-text-2)，然后用vim打开sublime_text文件\n\n    ＃  whereis sublime-text-2\n\n输出结果：\n\n    ＃ sublime-text-2:/usr/bin/sublime-text-2 /usr/lib/sublime-text-2 /usr/bin/X11/sublime-text-2    －－这里是两条信息，第二个/usr/前面有一个空格的\n\n然后，进入第一个路径下，查看有哪些文件，输入：\n\n    #  cd /usr/lib/sublime-text-2/\n    #  ls \n\n会列出的文件信息有：\n\n``Icon lib PackageSetup.py Pristine Packages sublimeplugin.py sublimetext``\n\n然后我们用vim打开这个文件（如果没有装vim 输入：# sudo apt-get install vim 安装）\n\n    #sudo vim /usr/lib/sublime-text-2/sublime_text\n\n将文件转成十六进制形式。vim中输入\n\n    :%!xxd\n\n在vim中定位至“Thanks”文字附近。\n\n    :/Thanks\n\n接着查找数字串“3342”\n\n    :/3342\n\n找到一处3342的地方大致是这个样子 ……4333 3342 3032…….\n\n将这里的3342 改为3242,在vim中输入\n\n    :s/3342/3242\n\n将文件转换回去。\n\n    :%!xxd -r\n\n保存文件、退出。\n\n    :wq\n\n打开程序，去help-enter licence 里贴进去通过程序算出来的Licence，OK 成功了。\n\n    —–BEGIN LICENSE—–\n    China\n    Unlimited User License\n    EA7E-2861\n    BE67D2175D3569FDAB9EB5340FAD2822\n    E7B56B3397A76AA9FBE8AC3D3C65918B\n    DFC28F2EA158140D9E07853D594818EB\n    3A237B2E8E98ED257C269548F50EDA34\n    EF0C7F72D8917DB538A0245E46BFD6B1\n    85F4EDE331F253530ED67A5C19E92399\n    04C5F4A1AF4AF3DB5EC49C1FEE17CA76\n    7E369F8AAE4AC6C6E756B5882E1608B9\n    —–END LICENSE—–\n\n补充说明：Sublime Text 2是一款轻量型的编辑器，但功能却远远超过了我的预期，让我很满意的一点是速度快，搜索，跳转等都相当快，另外还有多重选中的功能，这个也挺实用的，总之这款编辑器可以尝试一下，是个不错的选择。\n\n","slug":"ubuntu-install-sublime-text-2","published":1,"updated":"2018-05-30T08:12:15.845Z","photos":[],"link":"","_id":"cjhubytjl000oyis5ml79cwc3","content":"<p>记得之前也写过一篇文章《前端开发环境（ST2）搭建过程》，主要讲不同环境下安装的过程以及当时团队前端开发环境搭建过程（涉及到业务需求的一些组件、外部工具等等）。本篇文章意在详细讲解Ubuntu 12.04（与版本无关）下安装破解ST2的过程。</p>\n<p>使用ST2已有很久时间了，一直认为它是“最好的一款前端开发工具”，喜欢它体积小、速度快、外观简单、代码语法高亮清晰、插件丰富、安装简单。实际上ST2是一款共享软件，收费（59刀）但可以永久免费试用的跨平台的编辑神器。好了，不多在这里扯蛋啦，有讲的不好、或者不清晰的地方还请指正。</p>\n<p>为什么不使用ST3呢？ （答：ST3改动很大，不能与ST2兼容，因此没有丰富的插件，后期可以进行尝试安装。）</p>\n<p>一、ST2安装流程:<br>官网下载安装包<br>官网地址：<a href=\"http://www.sublimetext.com/2\" target=\"_blank\" rel=\"noopener\">http://www.sublimetext.com/2</a></p>\n<p>ST2目前是2.0.2版，由于软件源并非默认就存在，所以apt-get install是无法下载到的。官网也是提供直接的下载包，linux下是.bz2的文件。文件不大，才5M多一点。</p>\n<p>解压放置<br>解压并不难，随便找个目录解压就行，但考虑到后面要能在命令行下方便的快速启动，推荐解压到/usr/lib/目录下，我用的方法是先解压后搬移，命令如下：</p>\n<pre><code>tar -xvf Sublime\\ Text\\ 2.0.1.tar.bz2 //解压到当前目录\nmv Sublime\\ Text\\ 2 /usr/lib/ //移动到／usr/lib／目录下\nsudo mv Sublime\\ Text\\ 2 sublime-text-2 //修改文件名为sublime-text-2\n其中的\\为转义符\n</code></pre><p>这样做是因为$PATH这个环境变量自动涵盖了/usr/lib这个目录，不用专门去修改环境变量。</p>\n<p>然后键入：</p>\n<pre><code>ln -s /usr/lib/sublime-text-2/sublime_text /usr/bin/st2\n</code></pre><p>这行命令是在/usr/bin/目录下建立一个名为st2链接，这样后面可以比较方便的用命令行启动这个编辑器。其中st2这个名字是自行定义的，用户可以定义的更加简单方便。</p>\n<p>这个时候应该已经安装结束了，可以用st2来打开一个文件试试。</p>\n<p>侧边条LaunchBar设置<br>由于并非安装，缺少Ubuntu桌面运行的一些基本配置，比如不能将它加入桌面侧边的启动器，这个和通过软件安装中心安装的程序不太一样。要做到这一点，需要增加一个配置文件，放在/usr/share/appliations/路径下，比如增加sublime.desktop，文件内容如下：</p>\n<pre><code>[Desktop Entry]\nVersion=1.0\nName=Sublime Text 2\n# Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n# From Ubuntu&apos;s language-pack-kde-XX-base packages, version 9.04-20090413.\nGenericName=Text Editor\n\nExec=st2\nTerminal=false\nIcon=/usr/lib/sublime-text-2/Icon/48x48/sublime_text.png\nType=Application\nCategories=TextEditor;IDE;Development\nX-Ayatana-Desktop-Shortcuts=NewWindow\n\n[NewWindow Shortcut Group]\nName=New Window\nExec=st2 -n\nTargetEnvironment=Unity\n</code></pre><p>保存后给予可执行属性即可。</p>\n<p>FAQ</p>\n<p>如果一定希望通过apt-get install来安装，可以如下来做：</p>\n<pre><code>sudo add-apt-repository ppa:webupd8team/sublime-text-2\nsudo apt-get update\nsudo apt-get install sublime-text-2\n</code></pre><p>关于package control以及前端插件的安装可以查看我之前写的文章《前端开发环境（ST2）搭建过程》。</p>\n<p>二、Linux下ST2破解的过程</p>\n<p>首先查看一下ST2安装路径(推荐安装的路径是：／usr/lib/sublime-text-2)，然后用vim打开sublime_text文件</p>\n<pre><code>＃  whereis sublime-text-2\n</code></pre><p>输出结果：</p>\n<pre><code>＃ sublime-text-2:/usr/bin/sublime-text-2 /usr/lib/sublime-text-2 /usr/bin/X11/sublime-text-2    －－这里是两条信息，第二个/usr/前面有一个空格的\n</code></pre><p>然后，进入第一个路径下，查看有哪些文件，输入：</p>\n<pre><code>#  cd /usr/lib/sublime-text-2/\n#  ls \n</code></pre><p>会列出的文件信息有：</p>\n<p><code>Icon lib PackageSetup.py Pristine Packages sublimeplugin.py sublimetext</code></p>\n<p>然后我们用vim打开这个文件（如果没有装vim 输入：# sudo apt-get install vim 安装）</p>\n<pre><code>#sudo vim /usr/lib/sublime-text-2/sublime_text\n</code></pre><p>将文件转成十六进制形式。vim中输入</p>\n<pre><code>:%!xxd\n</code></pre><p>在vim中定位至“Thanks”文字附近。</p>\n<pre><code>:/Thanks\n</code></pre><p>接着查找数字串“3342”</p>\n<pre><code>:/3342\n</code></pre><p>找到一处3342的地方大致是这个样子 ……4333 3342 3032…….</p>\n<p>将这里的3342 改为3242,在vim中输入</p>\n<pre><code>:s/3342/3242\n</code></pre><p>将文件转换回去。</p>\n<pre><code>:%!xxd -r\n</code></pre><p>保存文件、退出。</p>\n<pre><code>:wq\n</code></pre><p>打开程序，去help-enter licence 里贴进去通过程序算出来的Licence，OK 成功了。</p>\n<pre><code>—–BEGIN LICENSE—–\nChina\nUnlimited User License\nEA7E-2861\nBE67D2175D3569FDAB9EB5340FAD2822\nE7B56B3397A76AA9FBE8AC3D3C65918B\nDFC28F2EA158140D9E07853D594818EB\n3A237B2E8E98ED257C269548F50EDA34\nEF0C7F72D8917DB538A0245E46BFD6B1\n85F4EDE331F253530ED67A5C19E92399\n04C5F4A1AF4AF3DB5EC49C1FEE17CA76\n7E369F8AAE4AC6C6E756B5882E1608B9\n—–END LICENSE—–\n</code></pre><p>补充说明：Sublime Text 2是一款轻量型的编辑器，但功能却远远超过了我的预期，让我很满意的一点是速度快，搜索，跳转等都相当快，另外还有多重选中的功能，这个也挺实用的，总之这款编辑器可以尝试一下，是个不错的选择。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>记得之前也写过一篇文章《前端开发环境（ST2）搭建过程》，主要讲不同环境下安装的过程以及当时团队前端开发环境搭建过程（涉及到业务需求的一些组件、外部工具等等）。本篇文章意在详细讲解Ubuntu 12.04（与版本无关）下安装破解ST2的过程。</p>\n<p>使用ST2已有很久时间了，一直认为它是“最好的一款前端开发工具”，喜欢它体积小、速度快、外观简单、代码语法高亮清晰、插件丰富、安装简单。实际上ST2是一款共享软件，收费（59刀）但可以永久免费试用的跨平台的编辑神器。好了，不多在这里扯蛋啦，有讲的不好、或者不清晰的地方还请指正。</p>\n<p>为什么不使用ST3呢？ （答：ST3改动很大，不能与ST2兼容，因此没有丰富的插件，后期可以进行尝试安装。）</p>\n<p>一、ST2安装流程:<br>官网下载安装包<br>官网地址：<a href=\"http://www.sublimetext.com/2\" target=\"_blank\" rel=\"noopener\">http://www.sublimetext.com/2</a></p>\n<p>ST2目前是2.0.2版，由于软件源并非默认就存在，所以apt-get install是无法下载到的。官网也是提供直接的下载包，linux下是.bz2的文件。文件不大，才5M多一点。</p>\n<p>解压放置<br>解压并不难，随便找个目录解压就行，但考虑到后面要能在命令行下方便的快速启动，推荐解压到/usr/lib/目录下，我用的方法是先解压后搬移，命令如下：</p>\n<pre><code>tar -xvf Sublime\\ Text\\ 2.0.1.tar.bz2 //解压到当前目录\nmv Sublime\\ Text\\ 2 /usr/lib/ //移动到／usr/lib／目录下\nsudo mv Sublime\\ Text\\ 2 sublime-text-2 //修改文件名为sublime-text-2\n其中的\\为转义符\n</code></pre><p>这样做是因为$PATH这个环境变量自动涵盖了/usr/lib这个目录，不用专门去修改环境变量。</p>\n<p>然后键入：</p>\n<pre><code>ln -s /usr/lib/sublime-text-2/sublime_text /usr/bin/st2\n</code></pre><p>这行命令是在/usr/bin/目录下建立一个名为st2链接，这样后面可以比较方便的用命令行启动这个编辑器。其中st2这个名字是自行定义的，用户可以定义的更加简单方便。</p>\n<p>这个时候应该已经安装结束了，可以用st2来打开一个文件试试。</p>\n<p>侧边条LaunchBar设置<br>由于并非安装，缺少Ubuntu桌面运行的一些基本配置，比如不能将它加入桌面侧边的启动器，这个和通过软件安装中心安装的程序不太一样。要做到这一点，需要增加一个配置文件，放在/usr/share/appliations/路径下，比如增加sublime.desktop，文件内容如下：</p>\n<pre><code>[Desktop Entry]\nVersion=1.0\nName=Sublime Text 2\n# Only KDE 4 seems to use GenericName, so we reuse the KDE strings.\n# From Ubuntu&apos;s language-pack-kde-XX-base packages, version 9.04-20090413.\nGenericName=Text Editor\n\nExec=st2\nTerminal=false\nIcon=/usr/lib/sublime-text-2/Icon/48x48/sublime_text.png\nType=Application\nCategories=TextEditor;IDE;Development\nX-Ayatana-Desktop-Shortcuts=NewWindow\n\n[NewWindow Shortcut Group]\nName=New Window\nExec=st2 -n\nTargetEnvironment=Unity\n</code></pre><p>保存后给予可执行属性即可。</p>\n<p>FAQ</p>\n<p>如果一定希望通过apt-get install来安装，可以如下来做：</p>\n<pre><code>sudo add-apt-repository ppa:webupd8team/sublime-text-2\nsudo apt-get update\nsudo apt-get install sublime-text-2\n</code></pre><p>关于package control以及前端插件的安装可以查看我之前写的文章《前端开发环境（ST2）搭建过程》。</p>\n<p>二、Linux下ST2破解的过程</p>\n<p>首先查看一下ST2安装路径(推荐安装的路径是：／usr/lib/sublime-text-2)，然后用vim打开sublime_text文件</p>\n<pre><code>＃  whereis sublime-text-2\n</code></pre><p>输出结果：</p>\n<pre><code>＃ sublime-text-2:/usr/bin/sublime-text-2 /usr/lib/sublime-text-2 /usr/bin/X11/sublime-text-2    －－这里是两条信息，第二个/usr/前面有一个空格的\n</code></pre><p>然后，进入第一个路径下，查看有哪些文件，输入：</p>\n<pre><code>#  cd /usr/lib/sublime-text-2/\n#  ls \n</code></pre><p>会列出的文件信息有：</p>\n<p><code>Icon lib PackageSetup.py Pristine Packages sublimeplugin.py sublimetext</code></p>\n<p>然后我们用vim打开这个文件（如果没有装vim 输入：# sudo apt-get install vim 安装）</p>\n<pre><code>#sudo vim /usr/lib/sublime-text-2/sublime_text\n</code></pre><p>将文件转成十六进制形式。vim中输入</p>\n<pre><code>:%!xxd\n</code></pre><p>在vim中定位至“Thanks”文字附近。</p>\n<pre><code>:/Thanks\n</code></pre><p>接着查找数字串“3342”</p>\n<pre><code>:/3342\n</code></pre><p>找到一处3342的地方大致是这个样子 ……4333 3342 3032…….</p>\n<p>将这里的3342 改为3242,在vim中输入</p>\n<pre><code>:s/3342/3242\n</code></pre><p>将文件转换回去。</p>\n<pre><code>:%!xxd -r\n</code></pre><p>保存文件、退出。</p>\n<pre><code>:wq\n</code></pre><p>打开程序，去help-enter licence 里贴进去通过程序算出来的Licence，OK 成功了。</p>\n<pre><code>—–BEGIN LICENSE—–\nChina\nUnlimited User License\nEA7E-2861\nBE67D2175D3569FDAB9EB5340FAD2822\nE7B56B3397A76AA9FBE8AC3D3C65918B\nDFC28F2EA158140D9E07853D594818EB\n3A237B2E8E98ED257C269548F50EDA34\nEF0C7F72D8917DB538A0245E46BFD6B1\n85F4EDE331F253530ED67A5C19E92399\n04C5F4A1AF4AF3DB5EC49C1FEE17CA76\n7E369F8AAE4AC6C6E756B5882E1608B9\n—–END LICENSE—–\n</code></pre><p>补充说明：Sublime Text 2是一款轻量型的编辑器，但功能却远远超过了我的预期，让我很满意的一点是速度快，搜索，跳转等都相当快，另外还有多重选中的功能，这个也挺实用的，总之这款编辑器可以尝试一下，是个不错的选择。</p>\n"},{"layout":"post","title":"JS判断客户端是否为手机移动设备","date":"2013-09-06T07:10:00.000Z","comments":1,"_content":"\n    function is_mobile(){\n        var ua = navigator.userAgent, isMobile = false;\n        var ma = [\"240x320\",\"acer\",\"acoon\",\"acs-\",\"abacho\",\"ahong\",\"airness\",\"alcatel\",\"amoi\",\"android\",\"anywhereyougo.com\",\"applewebkit/525\",\"applewebkit/532\",\"asus\",\"audio\",\"au-mic\",\"avantogo\",\"becker\",\"benq\",\"bilbo\",\"bird\",\"blackberry\",\"blazer\",\"bleu\",\"cdm-\",\"compal\",\"coolpad\",\"danger\",\"dbtel\",\"dopod\",\"elaine\",\"eric\",\"etouch\",\"fly \",\"fly_\",\"fly-\",\"go.web\",\"goodaccess\",\"gradiente\",\"grundig\",\"haier\",\"hedy\",\"hitachi\",\"htc\",\"huawei\",\"hutchison\",\"inno\",\"ipad\",\"ipaq\",\"ipod\",\"jbrowser\",\"kddi\",\"kgt\",\"kwc\",\"lenovo\",\"lg \",\"lg2\",\"lg3\",\"lg4\",\"lg5\",\"lg7\",\"lg8\",\"lg9\",\"lg-\",\"lge-\",\"lge9\",\"longcos\",\"maemo\",\"mercator\",\"meridian\",\"micromax\",\"midp\",\"mini\",\"mitsu\",\"mmm\",\"mmp\",\"mobi\",\"mot-\",\"moto\",\"nec-\",\"netfront\",\"newgen\",\"nexian\",\"nf-browser\",\"nintendo\",\"nitro\",\"nokia\",\"nook\",\"novarra\",\"obigo\",\"palm\",\"panasonic\",\"pantech\",\"philips\",\"phone\",\"pg-\",\"playstation\",\"pocket\",\"pt-\",\"qc-\",\"qtek\",\"rover\",\"sagem\",\"sama\",\"samu\",\"sanyo\",\"samsung\",\"sch-\",\"scooter\",\"sec-\",\"sendo\",\"sgh-\",\"sharp\",\"siemens\",\"sie-\",\"softbank\",\"sony\",\"spice\",\"sprint\",\"spv\",\"symbian\",\"tablet\",\"talkabout\",\"tcl-\",\"teleca\",\"telit\",\"tianyu\",\"tim-\",\"toshiba\",\"tsm\",\"up.browser\",\"utec\",\"utstar\",\"verykool\",\"virgin\",\"vk-\",\"voda\",\"voxtel\",\"vx\",\"wap\",\"wellco\",\"wig browser\",\"wii\",\"windows ce\",\"wireless\",\"xda\",\"xde\",\"zte\",\"GiONEE\",\"GiONEE-\"];\n        for (var i = 0, lens = ma.length; i < lens; i++) {\n            if (ua.indexOf(ma[i]) > -1) {\n                isMobile = true;\n                break;\n            }\n        }\n        return isMobile;\n    }\n    if(is_mobile() === true){\n        document.write(navigator.userAgent + '<br>');\n        document.write('mobile access!');\n        //location.href = \"http://blog.hankewins.com/\"\n    } else {\n        document.write(navigator.userAgent + '<br>');\n        //document.write('pc access!'); \n    }\n\n参考：http://levi.cg.am/?p=2214\n\n","source":"_posts/2013-09-06-media-your-device-by-javascript.md","raw":"---\nlayout: post\ntitle: JS判断客户端是否为手机移动设备\ndate: 2013-09-06 15:10\ncomments: true\ncategories: [前端开发]\n---\n\n    function is_mobile(){\n        var ua = navigator.userAgent, isMobile = false;\n        var ma = [\"240x320\",\"acer\",\"acoon\",\"acs-\",\"abacho\",\"ahong\",\"airness\",\"alcatel\",\"amoi\",\"android\",\"anywhereyougo.com\",\"applewebkit/525\",\"applewebkit/532\",\"asus\",\"audio\",\"au-mic\",\"avantogo\",\"becker\",\"benq\",\"bilbo\",\"bird\",\"blackberry\",\"blazer\",\"bleu\",\"cdm-\",\"compal\",\"coolpad\",\"danger\",\"dbtel\",\"dopod\",\"elaine\",\"eric\",\"etouch\",\"fly \",\"fly_\",\"fly-\",\"go.web\",\"goodaccess\",\"gradiente\",\"grundig\",\"haier\",\"hedy\",\"hitachi\",\"htc\",\"huawei\",\"hutchison\",\"inno\",\"ipad\",\"ipaq\",\"ipod\",\"jbrowser\",\"kddi\",\"kgt\",\"kwc\",\"lenovo\",\"lg \",\"lg2\",\"lg3\",\"lg4\",\"lg5\",\"lg7\",\"lg8\",\"lg9\",\"lg-\",\"lge-\",\"lge9\",\"longcos\",\"maemo\",\"mercator\",\"meridian\",\"micromax\",\"midp\",\"mini\",\"mitsu\",\"mmm\",\"mmp\",\"mobi\",\"mot-\",\"moto\",\"nec-\",\"netfront\",\"newgen\",\"nexian\",\"nf-browser\",\"nintendo\",\"nitro\",\"nokia\",\"nook\",\"novarra\",\"obigo\",\"palm\",\"panasonic\",\"pantech\",\"philips\",\"phone\",\"pg-\",\"playstation\",\"pocket\",\"pt-\",\"qc-\",\"qtek\",\"rover\",\"sagem\",\"sama\",\"samu\",\"sanyo\",\"samsung\",\"sch-\",\"scooter\",\"sec-\",\"sendo\",\"sgh-\",\"sharp\",\"siemens\",\"sie-\",\"softbank\",\"sony\",\"spice\",\"sprint\",\"spv\",\"symbian\",\"tablet\",\"talkabout\",\"tcl-\",\"teleca\",\"telit\",\"tianyu\",\"tim-\",\"toshiba\",\"tsm\",\"up.browser\",\"utec\",\"utstar\",\"verykool\",\"virgin\",\"vk-\",\"voda\",\"voxtel\",\"vx\",\"wap\",\"wellco\",\"wig browser\",\"wii\",\"windows ce\",\"wireless\",\"xda\",\"xde\",\"zte\",\"GiONEE\",\"GiONEE-\"];\n        for (var i = 0, lens = ma.length; i < lens; i++) {\n            if (ua.indexOf(ma[i]) > -1) {\n                isMobile = true;\n                break;\n            }\n        }\n        return isMobile;\n    }\n    if(is_mobile() === true){\n        document.write(navigator.userAgent + '<br>');\n        document.write('mobile access!');\n        //location.href = \"http://blog.hankewins.com/\"\n    } else {\n        document.write(navigator.userAgent + '<br>');\n        //document.write('pc access!'); \n    }\n\n参考：http://levi.cg.am/?p=2214\n\n","slug":"media-your-device-by-javascript","published":1,"updated":"2018-05-30T08:12:15.846Z","photos":[],"link":"","_id":"cjhubytjn000qyis5vnljp0jo","content":"<pre><code>function is_mobile(){\n    var ua = navigator.userAgent, isMobile = false;\n    var ma = [&quot;240x320&quot;,&quot;acer&quot;,&quot;acoon&quot;,&quot;acs-&quot;,&quot;abacho&quot;,&quot;ahong&quot;,&quot;airness&quot;,&quot;alcatel&quot;,&quot;amoi&quot;,&quot;android&quot;,&quot;anywhereyougo.com&quot;,&quot;applewebkit/525&quot;,&quot;applewebkit/532&quot;,&quot;asus&quot;,&quot;audio&quot;,&quot;au-mic&quot;,&quot;avantogo&quot;,&quot;becker&quot;,&quot;benq&quot;,&quot;bilbo&quot;,&quot;bird&quot;,&quot;blackberry&quot;,&quot;blazer&quot;,&quot;bleu&quot;,&quot;cdm-&quot;,&quot;compal&quot;,&quot;coolpad&quot;,&quot;danger&quot;,&quot;dbtel&quot;,&quot;dopod&quot;,&quot;elaine&quot;,&quot;eric&quot;,&quot;etouch&quot;,&quot;fly &quot;,&quot;fly_&quot;,&quot;fly-&quot;,&quot;go.web&quot;,&quot;goodaccess&quot;,&quot;gradiente&quot;,&quot;grundig&quot;,&quot;haier&quot;,&quot;hedy&quot;,&quot;hitachi&quot;,&quot;htc&quot;,&quot;huawei&quot;,&quot;hutchison&quot;,&quot;inno&quot;,&quot;ipad&quot;,&quot;ipaq&quot;,&quot;ipod&quot;,&quot;jbrowser&quot;,&quot;kddi&quot;,&quot;kgt&quot;,&quot;kwc&quot;,&quot;lenovo&quot;,&quot;lg &quot;,&quot;lg2&quot;,&quot;lg3&quot;,&quot;lg4&quot;,&quot;lg5&quot;,&quot;lg7&quot;,&quot;lg8&quot;,&quot;lg9&quot;,&quot;lg-&quot;,&quot;lge-&quot;,&quot;lge9&quot;,&quot;longcos&quot;,&quot;maemo&quot;,&quot;mercator&quot;,&quot;meridian&quot;,&quot;micromax&quot;,&quot;midp&quot;,&quot;mini&quot;,&quot;mitsu&quot;,&quot;mmm&quot;,&quot;mmp&quot;,&quot;mobi&quot;,&quot;mot-&quot;,&quot;moto&quot;,&quot;nec-&quot;,&quot;netfront&quot;,&quot;newgen&quot;,&quot;nexian&quot;,&quot;nf-browser&quot;,&quot;nintendo&quot;,&quot;nitro&quot;,&quot;nokia&quot;,&quot;nook&quot;,&quot;novarra&quot;,&quot;obigo&quot;,&quot;palm&quot;,&quot;panasonic&quot;,&quot;pantech&quot;,&quot;philips&quot;,&quot;phone&quot;,&quot;pg-&quot;,&quot;playstation&quot;,&quot;pocket&quot;,&quot;pt-&quot;,&quot;qc-&quot;,&quot;qtek&quot;,&quot;rover&quot;,&quot;sagem&quot;,&quot;sama&quot;,&quot;samu&quot;,&quot;sanyo&quot;,&quot;samsung&quot;,&quot;sch-&quot;,&quot;scooter&quot;,&quot;sec-&quot;,&quot;sendo&quot;,&quot;sgh-&quot;,&quot;sharp&quot;,&quot;siemens&quot;,&quot;sie-&quot;,&quot;softbank&quot;,&quot;sony&quot;,&quot;spice&quot;,&quot;sprint&quot;,&quot;spv&quot;,&quot;symbian&quot;,&quot;tablet&quot;,&quot;talkabout&quot;,&quot;tcl-&quot;,&quot;teleca&quot;,&quot;telit&quot;,&quot;tianyu&quot;,&quot;tim-&quot;,&quot;toshiba&quot;,&quot;tsm&quot;,&quot;up.browser&quot;,&quot;utec&quot;,&quot;utstar&quot;,&quot;verykool&quot;,&quot;virgin&quot;,&quot;vk-&quot;,&quot;voda&quot;,&quot;voxtel&quot;,&quot;vx&quot;,&quot;wap&quot;,&quot;wellco&quot;,&quot;wig browser&quot;,&quot;wii&quot;,&quot;windows ce&quot;,&quot;wireless&quot;,&quot;xda&quot;,&quot;xde&quot;,&quot;zte&quot;,&quot;GiONEE&quot;,&quot;GiONEE-&quot;];\n    for (var i = 0, lens = ma.length; i &lt; lens; i++) {\n        if (ua.indexOf(ma[i]) &gt; -1) {\n            isMobile = true;\n            break;\n        }\n    }\n    return isMobile;\n}\nif(is_mobile() === true){\n    document.write(navigator.userAgent + &apos;&lt;br&gt;&apos;);\n    document.write(&apos;mobile access!&apos;);\n    //location.href = &quot;http://blog.hankewins.com/&quot;\n} else {\n    document.write(navigator.userAgent + &apos;&lt;br&gt;&apos;);\n    //document.write(&apos;pc access!&apos;); \n}\n</code></pre><p>参考：<a href=\"http://levi.cg.am/?p=2214\" target=\"_blank\" rel=\"noopener\">http://levi.cg.am/?p=2214</a></p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>function is_mobile(){\n    var ua = navigator.userAgent, isMobile = false;\n    var ma = [&quot;240x320&quot;,&quot;acer&quot;,&quot;acoon&quot;,&quot;acs-&quot;,&quot;abacho&quot;,&quot;ahong&quot;,&quot;airness&quot;,&quot;alcatel&quot;,&quot;amoi&quot;,&quot;android&quot;,&quot;anywhereyougo.com&quot;,&quot;applewebkit/525&quot;,&quot;applewebkit/532&quot;,&quot;asus&quot;,&quot;audio&quot;,&quot;au-mic&quot;,&quot;avantogo&quot;,&quot;becker&quot;,&quot;benq&quot;,&quot;bilbo&quot;,&quot;bird&quot;,&quot;blackberry&quot;,&quot;blazer&quot;,&quot;bleu&quot;,&quot;cdm-&quot;,&quot;compal&quot;,&quot;coolpad&quot;,&quot;danger&quot;,&quot;dbtel&quot;,&quot;dopod&quot;,&quot;elaine&quot;,&quot;eric&quot;,&quot;etouch&quot;,&quot;fly &quot;,&quot;fly_&quot;,&quot;fly-&quot;,&quot;go.web&quot;,&quot;goodaccess&quot;,&quot;gradiente&quot;,&quot;grundig&quot;,&quot;haier&quot;,&quot;hedy&quot;,&quot;hitachi&quot;,&quot;htc&quot;,&quot;huawei&quot;,&quot;hutchison&quot;,&quot;inno&quot;,&quot;ipad&quot;,&quot;ipaq&quot;,&quot;ipod&quot;,&quot;jbrowser&quot;,&quot;kddi&quot;,&quot;kgt&quot;,&quot;kwc&quot;,&quot;lenovo&quot;,&quot;lg &quot;,&quot;lg2&quot;,&quot;lg3&quot;,&quot;lg4&quot;,&quot;lg5&quot;,&quot;lg7&quot;,&quot;lg8&quot;,&quot;lg9&quot;,&quot;lg-&quot;,&quot;lge-&quot;,&quot;lge9&quot;,&quot;longcos&quot;,&quot;maemo&quot;,&quot;mercator&quot;,&quot;meridian&quot;,&quot;micromax&quot;,&quot;midp&quot;,&quot;mini&quot;,&quot;mitsu&quot;,&quot;mmm&quot;,&quot;mmp&quot;,&quot;mobi&quot;,&quot;mot-&quot;,&quot;moto&quot;,&quot;nec-&quot;,&quot;netfront&quot;,&quot;newgen&quot;,&quot;nexian&quot;,&quot;nf-browser&quot;,&quot;nintendo&quot;,&quot;nitro&quot;,&quot;nokia&quot;,&quot;nook&quot;,&quot;novarra&quot;,&quot;obigo&quot;,&quot;palm&quot;,&quot;panasonic&quot;,&quot;pantech&quot;,&quot;philips&quot;,&quot;phone&quot;,&quot;pg-&quot;,&quot;playstation&quot;,&quot;pocket&quot;,&quot;pt-&quot;,&quot;qc-&quot;,&quot;qtek&quot;,&quot;rover&quot;,&quot;sagem&quot;,&quot;sama&quot;,&quot;samu&quot;,&quot;sanyo&quot;,&quot;samsung&quot;,&quot;sch-&quot;,&quot;scooter&quot;,&quot;sec-&quot;,&quot;sendo&quot;,&quot;sgh-&quot;,&quot;sharp&quot;,&quot;siemens&quot;,&quot;sie-&quot;,&quot;softbank&quot;,&quot;sony&quot;,&quot;spice&quot;,&quot;sprint&quot;,&quot;spv&quot;,&quot;symbian&quot;,&quot;tablet&quot;,&quot;talkabout&quot;,&quot;tcl-&quot;,&quot;teleca&quot;,&quot;telit&quot;,&quot;tianyu&quot;,&quot;tim-&quot;,&quot;toshiba&quot;,&quot;tsm&quot;,&quot;up.browser&quot;,&quot;utec&quot;,&quot;utstar&quot;,&quot;verykool&quot;,&quot;virgin&quot;,&quot;vk-&quot;,&quot;voda&quot;,&quot;voxtel&quot;,&quot;vx&quot;,&quot;wap&quot;,&quot;wellco&quot;,&quot;wig browser&quot;,&quot;wii&quot;,&quot;windows ce&quot;,&quot;wireless&quot;,&quot;xda&quot;,&quot;xde&quot;,&quot;zte&quot;,&quot;GiONEE&quot;,&quot;GiONEE-&quot;];\n    for (var i = 0, lens = ma.length; i &lt; lens; i++) {\n        if (ua.indexOf(ma[i]) &gt; -1) {\n            isMobile = true;\n            break;\n        }\n    }\n    return isMobile;\n}\nif(is_mobile() === true){\n    document.write(navigator.userAgent + &apos;&lt;br&gt;&apos;);\n    document.write(&apos;mobile access!&apos;);\n    //location.href = &quot;http://blog.hankewins.com/&quot;\n} else {\n    document.write(navigator.userAgent + &apos;&lt;br&gt;&apos;);\n    //document.write(&apos;pc access!&apos;); \n}\n</code></pre><p>参考：<a href=\"http://levi.cg.am/?p=2214\" target=\"_blank\" rel=\"noopener\">http://levi.cg.am/?p=2214</a></p>\n"},{"layout":"post","title":"用心感受生活，用视觉鞭笞思想","date":"2013-09-07T13:40:00.000Z","comments":1,"_content":"\n最近有些迷茫，不知道自己做了些什么，一下子感觉心里很空虚，每天看的最多的是网易新闻，似乎奇葩事情已不是在那么的奇怪，只是没有关注或者没有报道出来而已。看的多了，想的也就多了，久违的周公近期在我的心灵小站活动频频，难道周公不去光顾那些“美少女”了吗?我惊叹呼！\n\n以前大家都教我用心感受生活，总能有所收获。今天我不经意的要问：“不专注的心还能感受生活吗？”，迷茫的时刻，我发现自己不在专注，感觉很多东西要去多，这个弄弄那个弄弄，似乎还很忙的样子（其实什么都没有做成），连冷静思考的时间都没有似的。\n\n今天又是大周六，头脑风暴（3分钟）自由演讲，为了给自己充足的时间时间去头脑风暴，我选择了最后一个演讲。从心里回顾一下近期的工作以及生活等等方面，我确定了主题“耳听为虚，眼见为实，用心感受生活，用视觉鞭笞思想”，用它来概括这次涉及到的话题“梦、健康、人生价值、无奈生活”。\n\n冷静思考为了“梦、健康、人生价值、无奈生活”。\n\n中国梦 － 个人梦\n\n健康 － 奋斗\n\n人生价值 － 努力\n\n无奈生活 － 人生选择\n\n","source":"_posts/2013-09-07-feeling-in-your-heart.md","raw":"---\nlayout: post\ntitle: 用心感受生活，用视觉鞭笞思想\ndate: 2013-09-07 21:40\ncomments: true\ncategories: [工作与生活]\n---\n\n最近有些迷茫，不知道自己做了些什么，一下子感觉心里很空虚，每天看的最多的是网易新闻，似乎奇葩事情已不是在那么的奇怪，只是没有关注或者没有报道出来而已。看的多了，想的也就多了，久违的周公近期在我的心灵小站活动频频，难道周公不去光顾那些“美少女”了吗?我惊叹呼！\n\n以前大家都教我用心感受生活，总能有所收获。今天我不经意的要问：“不专注的心还能感受生活吗？”，迷茫的时刻，我发现自己不在专注，感觉很多东西要去多，这个弄弄那个弄弄，似乎还很忙的样子（其实什么都没有做成），连冷静思考的时间都没有似的。\n\n今天又是大周六，头脑风暴（3分钟）自由演讲，为了给自己充足的时间时间去头脑风暴，我选择了最后一个演讲。从心里回顾一下近期的工作以及生活等等方面，我确定了主题“耳听为虚，眼见为实，用心感受生活，用视觉鞭笞思想”，用它来概括这次涉及到的话题“梦、健康、人生价值、无奈生活”。\n\n冷静思考为了“梦、健康、人生价值、无奈生活”。\n\n中国梦 － 个人梦\n\n健康 － 奋斗\n\n人生价值 － 努力\n\n无奈生活 － 人生选择\n\n","slug":"feeling-in-your-heart","published":1,"updated":"2018-05-30T08:12:15.846Z","photos":[],"link":"","_id":"cjhubytjp000tyis5gjlvl2vw","content":"<p>最近有些迷茫，不知道自己做了些什么，一下子感觉心里很空虚，每天看的最多的是网易新闻，似乎奇葩事情已不是在那么的奇怪，只是没有关注或者没有报道出来而已。看的多了，想的也就多了，久违的周公近期在我的心灵小站活动频频，难道周公不去光顾那些“美少女”了吗?我惊叹呼！</p>\n<p>以前大家都教我用心感受生活，总能有所收获。今天我不经意的要问：“不专注的心还能感受生活吗？”，迷茫的时刻，我发现自己不在专注，感觉很多东西要去多，这个弄弄那个弄弄，似乎还很忙的样子（其实什么都没有做成），连冷静思考的时间都没有似的。</p>\n<p>今天又是大周六，头脑风暴（3分钟）自由演讲，为了给自己充足的时间时间去头脑风暴，我选择了最后一个演讲。从心里回顾一下近期的工作以及生活等等方面，我确定了主题“耳听为虚，眼见为实，用心感受生活，用视觉鞭笞思想”，用它来概括这次涉及到的话题“梦、健康、人生价值、无奈生活”。</p>\n<p>冷静思考为了“梦、健康、人生价值、无奈生活”。</p>\n<p>中国梦 － 个人梦</p>\n<p>健康 － 奋斗</p>\n<p>人生价值 － 努力</p>\n<p>无奈生活 － 人生选择</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近有些迷茫，不知道自己做了些什么，一下子感觉心里很空虚，每天看的最多的是网易新闻，似乎奇葩事情已不是在那么的奇怪，只是没有关注或者没有报道出来而已。看的多了，想的也就多了，久违的周公近期在我的心灵小站活动频频，难道周公不去光顾那些“美少女”了吗?我惊叹呼！</p>\n<p>以前大家都教我用心感受生活，总能有所收获。今天我不经意的要问：“不专注的心还能感受生活吗？”，迷茫的时刻，我发现自己不在专注，感觉很多东西要去多，这个弄弄那个弄弄，似乎还很忙的样子（其实什么都没有做成），连冷静思考的时间都没有似的。</p>\n<p>今天又是大周六，头脑风暴（3分钟）自由演讲，为了给自己充足的时间时间去头脑风暴，我选择了最后一个演讲。从心里回顾一下近期的工作以及生活等等方面，我确定了主题“耳听为虚，眼见为实，用心感受生活，用视觉鞭笞思想”，用它来概括这次涉及到的话题“梦、健康、人生价值、无奈生活”。</p>\n<p>冷静思考为了“梦、健康、人生价值、无奈生活”。</p>\n<p>中国梦 － 个人梦</p>\n<p>健康 － 奋斗</p>\n<p>人生价值 － 努力</p>\n<p>无奈生活 － 人生选择</p>\n"},{"layout":"post","title":"记忆人生，勿轻意忘记","date":"2013-09-15T12:56:00.000Z","comments":1,"_content":"\n你的人生，你的日子，不要放弃，不要忘记！\n\n今年是一个特殊的年份;\n\n今月是一个值得记忆的月份;\n\n今日是一个难忘的日子;\n\n今时是一个激动的时刻;\n\n我的本命年我的生日！\n\n###人生的本命年\n\n百度百科解释：十二年—遇的农历属相所在的年份，俗称属相年。在传统习俗中，本命年常常被认为是一个不吉利的年份。“本命年犯太岁，太岁当头坐，无喜必有祸”的民谣是关于本命年不甚吉利的最好写照。\n\n虽然在本命年的开始，我也失去了无法忘却的记忆，但是本命年的不利真的是天命吗？其实不然，个人认为都是自己处事的不严谨，造成了人生的插曲。呵呵，还是不要对这些进行评论啦！\n\n本命年无论是好还是坏，我们都不能忘记，因为人生中能有几个本命年呢。\n\n###特殊的九月\n\n九月是一个秋高气爽的季节;\n\n九月是一个开始大声高歌a、o、e的季节 ——— 小学;\n\n九月是一个开始为理想奋斗的季节 ——— 初中、高中;\n\n九月是一个开始进入梦想殿堂的季节 ——— 大学;\n\n九月也是爸爸、姐姐和我出生的季节。\n\n###难忘的今天\n\n今天是偷看十五的月亮圆不圆的日子;\n\n今天是一个月的中旬的日子;\n\n今天是值得记忆的日子;\n\n生日快乐！\n\n","source":"_posts/2013-09-15-snake-year-in-my-life.md","raw":"---\nlayout: post\ntitle: 记忆人生，勿轻意忘记\ndate: 2013-09-15 20:56\ncomments: true\ncategories: [工作与生活]\n---\n\n你的人生，你的日子，不要放弃，不要忘记！\n\n今年是一个特殊的年份;\n\n今月是一个值得记忆的月份;\n\n今日是一个难忘的日子;\n\n今时是一个激动的时刻;\n\n我的本命年我的生日！\n\n###人生的本命年\n\n百度百科解释：十二年—遇的农历属相所在的年份，俗称属相年。在传统习俗中，本命年常常被认为是一个不吉利的年份。“本命年犯太岁，太岁当头坐，无喜必有祸”的民谣是关于本命年不甚吉利的最好写照。\n\n虽然在本命年的开始，我也失去了无法忘却的记忆，但是本命年的不利真的是天命吗？其实不然，个人认为都是自己处事的不严谨，造成了人生的插曲。呵呵，还是不要对这些进行评论啦！\n\n本命年无论是好还是坏，我们都不能忘记，因为人生中能有几个本命年呢。\n\n###特殊的九月\n\n九月是一个秋高气爽的季节;\n\n九月是一个开始大声高歌a、o、e的季节 ——— 小学;\n\n九月是一个开始为理想奋斗的季节 ——— 初中、高中;\n\n九月是一个开始进入梦想殿堂的季节 ——— 大学;\n\n九月也是爸爸、姐姐和我出生的季节。\n\n###难忘的今天\n\n今天是偷看十五的月亮圆不圆的日子;\n\n今天是一个月的中旬的日子;\n\n今天是值得记忆的日子;\n\n生日快乐！\n\n","slug":"snake-year-in-my-life","published":1,"updated":"2018-05-30T08:12:15.847Z","photos":[],"link":"","_id":"cjhubytjq000vyis5vkaj9qz7","content":"<p>你的人生，你的日子，不要放弃，不要忘记！</p>\n<p>今年是一个特殊的年份;</p>\n<p>今月是一个值得记忆的月份;</p>\n<p>今日是一个难忘的日子;</p>\n<p>今时是一个激动的时刻;</p>\n<p>我的本命年我的生日！</p>\n<p>###人生的本命年</p>\n<p>百度百科解释：十二年—遇的农历属相所在的年份，俗称属相年。在传统习俗中，本命年常常被认为是一个不吉利的年份。“本命年犯太岁，太岁当头坐，无喜必有祸”的民谣是关于本命年不甚吉利的最好写照。</p>\n<p>虽然在本命年的开始，我也失去了无法忘却的记忆，但是本命年的不利真的是天命吗？其实不然，个人认为都是自己处事的不严谨，造成了人生的插曲。呵呵，还是不要对这些进行评论啦！</p>\n<p>本命年无论是好还是坏，我们都不能忘记，因为人生中能有几个本命年呢。</p>\n<p>###特殊的九月</p>\n<p>九月是一个秋高气爽的季节;</p>\n<p>九月是一个开始大声高歌a、o、e的季节 ——— 小学;</p>\n<p>九月是一个开始为理想奋斗的季节 ——— 初中、高中;</p>\n<p>九月是一个开始进入梦想殿堂的季节 ——— 大学;</p>\n<p>九月也是爸爸、姐姐和我出生的季节。</p>\n<p>###难忘的今天</p>\n<p>今天是偷看十五的月亮圆不圆的日子;</p>\n<p>今天是一个月的中旬的日子;</p>\n<p>今天是值得记忆的日子;</p>\n<p>生日快乐！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>你的人生，你的日子，不要放弃，不要忘记！</p>\n<p>今年是一个特殊的年份;</p>\n<p>今月是一个值得记忆的月份;</p>\n<p>今日是一个难忘的日子;</p>\n<p>今时是一个激动的时刻;</p>\n<p>我的本命年我的生日！</p>\n<p>###人生的本命年</p>\n<p>百度百科解释：十二年—遇的农历属相所在的年份，俗称属相年。在传统习俗中，本命年常常被认为是一个不吉利的年份。“本命年犯太岁，太岁当头坐，无喜必有祸”的民谣是关于本命年不甚吉利的最好写照。</p>\n<p>虽然在本命年的开始，我也失去了无法忘却的记忆，但是本命年的不利真的是天命吗？其实不然，个人认为都是自己处事的不严谨，造成了人生的插曲。呵呵，还是不要对这些进行评论啦！</p>\n<p>本命年无论是好还是坏，我们都不能忘记，因为人生中能有几个本命年呢。</p>\n<p>###特殊的九月</p>\n<p>九月是一个秋高气爽的季节;</p>\n<p>九月是一个开始大声高歌a、o、e的季节 ——— 小学;</p>\n<p>九月是一个开始为理想奋斗的季节 ——— 初中、高中;</p>\n<p>九月是一个开始进入梦想殿堂的季节 ——— 大学;</p>\n<p>九月也是爸爸、姐姐和我出生的季节。</p>\n<p>###难忘的今天</p>\n<p>今天是偷看十五的月亮圆不圆的日子;</p>\n<p>今天是一个月的中旬的日子;</p>\n<p>今天是值得记忆的日子;</p>\n<p>生日快乐！</p>\n"},{"layout":"post","title":"Ubuntu下通过Heroku部署Node.js应用程序","date":"2013-09-17T15:50:00.000Z","comments":1,"_content":"\n自从写第一个Node [Microblog](https://github.com/hankewins/microblog) web应用到现在也很长时间了，虽然后面也写了几个Node小工具，但是一直都是基于本地环境。虽然之前也有尝试在SAE、NAE(已停止维护)、BAE上部署Node应用程序，但由于种种原因，最终也只是一个尝试，没有成功部署，在此还是推荐几家PaaS平台：\n\n- [Heroku](https://www.heroku.com/)(信赖Git+Foreman)\n- [Cloud Foundry](http://www.cloudfoundry.com/)(依赖vmc+ruby+rubyGems)\n- [Nodester](http://nodester.com/)(被AppFog收购)\n- [AppFog](https://www.appfog.com/)\n\n可根据自己的喜好与对PaaS不同平台的了解，选择适合的平台，本文选择Heroku来部署。\n\nHeroku部署Node.js应用程序的步骤如下：\n\n1.访问 https://id.heroku.com/signup/www-header ，网站会要求用户输入电子邮件地址。\n\n2.Heroku注册，一旦成功输入电子邮件地址，网站会邀请你检查邮件，邮件中有确认链接。\n\n3.打开电子邮件，进入所提供的Heroku链接，点击链接会邀请你输入密码。\n\n4.按照 https://devcenter.heroku.com/articles/getting-started-with-nodejs 中的指南，首先安装Heroku工具条。它提供了能让我们将站点部署到Heroku的命令行工具。\n\n5.访问 https://toolbelt.heroku.com/ ，选择适用于自己平台的安装方式，这里我选择的是 Debian/Ubuntu。\n\n安装Heroku命令行工具\n\n6.Heroku toolbelt安装完成后，现在就可以登录账号，在命令行模式下输入\n\n    $ heroku login\n    //输入heroku注册的账号信息\n    Enter your Heroku credentials.\n    Email: test@gmail.com\n    Password (typing will be hidden):\n    //如果是第一次登录，heroku会为你生成一个SSH公共密钥，\n    //以此来管理对服务的访问，可在heroku账号设置中查看\n    Could not find on existing public key.\n    Would you like to generate one? [Yn]\n    Generating new SSH public key.\n    Uploading ssh public key ~/.ssh/id_rsa.pub\n\n7.至此，Heroku环境配置己完成，可以准备部署到Heroku服务器啦！\n\n8.检查程序入口文件中服务器端口设置是否正确。\n\n    //Express 默认端口配置\n    var port = process.env.PORT || 3000;\n    //由于heroku会随机分配端口，因此不用指定固定端口\n    app.listen(port);\n\n9.Heroku的进程管理工具Foreman需要通过Procfile文件来声明应该默认启动的文件，因此需在应用程序根目录添加一个名为Procfile的文件，如下所示：\n\n    //进入应用程序根目录，声明启动的文件\n    $ echo \"web: node app.js\" > Procfile\n    //通过Foreman启动应用程序\n    $ forman start\n    14:06:24 web.1  | started with pid 5105\n    14:06:26 web.1  | Express server listening on port 5000\n\n10.Foreman启动成功后，可以通过本地访问应用程序，最现只差上传应用程序到Heroku。\n\n    //在应用程序package.json文件中指定engines\n    \"engines\": {\n        \"node\": \"0.10.x\",\n        \"npm\": \"1.2.x\"\n    }\n\n    //检查应用程序package.json中的信赖文件是否安装\n    $ npm install\n\n    //通过Git添加应用程序到仓库，并上传到Heroku\n    $ git init //创建git仓库\n    $ git add . //添加文件到仓库\n    $ git commit -m 'upload to heroku' //提交文件到仓库\n    $ heroku create nodetest --stack ceder //在heroku中建立nodetest应用\n    $ git push heroku master //提交应用程序到heroku的master主干\n\n11.如果一切正常，可以通过Heroku分配的二级域名访问应用程序，例如 http://nodetest.herokuapp.com\n12.Heroku支持自定义域名绑定，操作如下：\n\n    //在以有的域名中添加子域名并指定DNS为Heroku分配的二级域名\n    //以www.nodetest.com为例,添加到heroku自定域名中\n    $ heroku domains:add www.nodetest.com\n\n    //查看域名信息\n    $ heroku domains\n    === nodetest Domain Names\n    nodetest.herokuapp.com\n    www.nodetest.com\n\n    //通过命令行打开并访问应用程序\n    $ heroku open\n\n### 参考文档：\n\n- [http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html](http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html)\n- [http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/](http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/)\n- [http://blog.csdn.net/ithomer/article/details/7529022](http://blog.csdn.net/ithomer/article/details/7529022)\n- [http://www.2cto.com/kf/201201/116097.html](http://www.2cto.com/kf/201201/116097.html)\n- [http://ux.etao.com/posts/799](http://ux.etao.com/posts/799)\n\n表达不清楚或者不正确的地方，请与我联系hankewins#gmail.com。\n\n","source":"_posts/2013-09-17-ubuntu-heroku-build-node-app.md","raw":"---\nlayout: post\ntitle: Ubuntu下通过Heroku部署Node.js应用程序\ndate: 2013-09-17 23:50\ncomments: true\ncategories: [前端开发]\n---\n\n自从写第一个Node [Microblog](https://github.com/hankewins/microblog) web应用到现在也很长时间了，虽然后面也写了几个Node小工具，但是一直都是基于本地环境。虽然之前也有尝试在SAE、NAE(已停止维护)、BAE上部署Node应用程序，但由于种种原因，最终也只是一个尝试，没有成功部署，在此还是推荐几家PaaS平台：\n\n- [Heroku](https://www.heroku.com/)(信赖Git+Foreman)\n- [Cloud Foundry](http://www.cloudfoundry.com/)(依赖vmc+ruby+rubyGems)\n- [Nodester](http://nodester.com/)(被AppFog收购)\n- [AppFog](https://www.appfog.com/)\n\n可根据自己的喜好与对PaaS不同平台的了解，选择适合的平台，本文选择Heroku来部署。\n\nHeroku部署Node.js应用程序的步骤如下：\n\n1.访问 https://id.heroku.com/signup/www-header ，网站会要求用户输入电子邮件地址。\n\n2.Heroku注册，一旦成功输入电子邮件地址，网站会邀请你检查邮件，邮件中有确认链接。\n\n3.打开电子邮件，进入所提供的Heroku链接，点击链接会邀请你输入密码。\n\n4.按照 https://devcenter.heroku.com/articles/getting-started-with-nodejs 中的指南，首先安装Heroku工具条。它提供了能让我们将站点部署到Heroku的命令行工具。\n\n5.访问 https://toolbelt.heroku.com/ ，选择适用于自己平台的安装方式，这里我选择的是 Debian/Ubuntu。\n\n安装Heroku命令行工具\n\n6.Heroku toolbelt安装完成后，现在就可以登录账号，在命令行模式下输入\n\n    $ heroku login\n    //输入heroku注册的账号信息\n    Enter your Heroku credentials.\n    Email: test@gmail.com\n    Password (typing will be hidden):\n    //如果是第一次登录，heroku会为你生成一个SSH公共密钥，\n    //以此来管理对服务的访问，可在heroku账号设置中查看\n    Could not find on existing public key.\n    Would you like to generate one? [Yn]\n    Generating new SSH public key.\n    Uploading ssh public key ~/.ssh/id_rsa.pub\n\n7.至此，Heroku环境配置己完成，可以准备部署到Heroku服务器啦！\n\n8.检查程序入口文件中服务器端口设置是否正确。\n\n    //Express 默认端口配置\n    var port = process.env.PORT || 3000;\n    //由于heroku会随机分配端口，因此不用指定固定端口\n    app.listen(port);\n\n9.Heroku的进程管理工具Foreman需要通过Procfile文件来声明应该默认启动的文件，因此需在应用程序根目录添加一个名为Procfile的文件，如下所示：\n\n    //进入应用程序根目录，声明启动的文件\n    $ echo \"web: node app.js\" > Procfile\n    //通过Foreman启动应用程序\n    $ forman start\n    14:06:24 web.1  | started with pid 5105\n    14:06:26 web.1  | Express server listening on port 5000\n\n10.Foreman启动成功后，可以通过本地访问应用程序，最现只差上传应用程序到Heroku。\n\n    //在应用程序package.json文件中指定engines\n    \"engines\": {\n        \"node\": \"0.10.x\",\n        \"npm\": \"1.2.x\"\n    }\n\n    //检查应用程序package.json中的信赖文件是否安装\n    $ npm install\n\n    //通过Git添加应用程序到仓库，并上传到Heroku\n    $ git init //创建git仓库\n    $ git add . //添加文件到仓库\n    $ git commit -m 'upload to heroku' //提交文件到仓库\n    $ heroku create nodetest --stack ceder //在heroku中建立nodetest应用\n    $ git push heroku master //提交应用程序到heroku的master主干\n\n11.如果一切正常，可以通过Heroku分配的二级域名访问应用程序，例如 http://nodetest.herokuapp.com\n12.Heroku支持自定义域名绑定，操作如下：\n\n    //在以有的域名中添加子域名并指定DNS为Heroku分配的二级域名\n    //以www.nodetest.com为例,添加到heroku自定域名中\n    $ heroku domains:add www.nodetest.com\n\n    //查看域名信息\n    $ heroku domains\n    === nodetest Domain Names\n    nodetest.herokuapp.com\n    www.nodetest.com\n\n    //通过命令行打开并访问应用程序\n    $ heroku open\n\n### 参考文档：\n\n- [http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html](http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html)\n- [http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/](http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/)\n- [http://blog.csdn.net/ithomer/article/details/7529022](http://blog.csdn.net/ithomer/article/details/7529022)\n- [http://www.2cto.com/kf/201201/116097.html](http://www.2cto.com/kf/201201/116097.html)\n- [http://ux.etao.com/posts/799](http://ux.etao.com/posts/799)\n\n表达不清楚或者不正确的地方，请与我联系hankewins#gmail.com。\n\n","slug":"ubuntu-heroku-build-node-app","published":1,"updated":"2018-05-30T08:12:15.848Z","photos":[],"link":"","_id":"cjhubytjs000yyis522kukkvw","content":"<p>自从写第一个Node <a href=\"https://github.com/hankewins/microblog\" target=\"_blank\" rel=\"noopener\">Microblog</a> web应用到现在也很长时间了，虽然后面也写了几个Node小工具，但是一直都是基于本地环境。虽然之前也有尝试在SAE、NAE(已停止维护)、BAE上部署Node应用程序，但由于种种原因，最终也只是一个尝试，没有成功部署，在此还是推荐几家PaaS平台：</p>\n<ul>\n<li><a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"noopener\">Heroku</a>(信赖Git+Foreman)</li>\n<li><a href=\"http://www.cloudfoundry.com/\" target=\"_blank\" rel=\"noopener\">Cloud Foundry</a>(依赖vmc+ruby+rubyGems)</li>\n<li><a href=\"http://nodester.com/\" target=\"_blank\" rel=\"noopener\">Nodester</a>(被AppFog收购)</li>\n<li><a href=\"https://www.appfog.com/\" target=\"_blank\" rel=\"noopener\">AppFog</a></li>\n</ul>\n<p>可根据自己的喜好与对PaaS不同平台的了解，选择适合的平台，本文选择Heroku来部署。</p>\n<p>Heroku部署Node.js应用程序的步骤如下：</p>\n<p>1.访问 <a href=\"https://id.heroku.com/signup/www-header\" target=\"_blank\" rel=\"noopener\">https://id.heroku.com/signup/www-header</a> ，网站会要求用户输入电子邮件地址。</p>\n<p>2.Heroku注册，一旦成功输入电子邮件地址，网站会邀请你检查邮件，邮件中有确认链接。</p>\n<p>3.打开电子邮件，进入所提供的Heroku链接，点击链接会邀请你输入密码。</p>\n<p>4.按照 <a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\" target=\"_blank\" rel=\"noopener\">https://devcenter.heroku.com/articles/getting-started-with-nodejs</a> 中的指南，首先安装Heroku工具条。它提供了能让我们将站点部署到Heroku的命令行工具。</p>\n<p>5.访问 <a href=\"https://toolbelt.heroku.com/\" target=\"_blank\" rel=\"noopener\">https://toolbelt.heroku.com/</a> ，选择适用于自己平台的安装方式，这里我选择的是 Debian/Ubuntu。</p>\n<p>安装Heroku命令行工具</p>\n<p>6.Heroku toolbelt安装完成后，现在就可以登录账号，在命令行模式下输入</p>\n<pre><code>$ heroku login\n//输入heroku注册的账号信息\nEnter your Heroku credentials.\nEmail: test@gmail.com\nPassword (typing will be hidden):\n//如果是第一次登录，heroku会为你生成一个SSH公共密钥，\n//以此来管理对服务的访问，可在heroku账号设置中查看\nCould not find on existing public key.\nWould you like to generate one? [Yn]\nGenerating new SSH public key.\nUploading ssh public key ~/.ssh/id_rsa.pub\n</code></pre><p>7.至此，Heroku环境配置己完成，可以准备部署到Heroku服务器啦！</p>\n<p>8.检查程序入口文件中服务器端口设置是否正确。</p>\n<pre><code>//Express 默认端口配置\nvar port = process.env.PORT || 3000;\n//由于heroku会随机分配端口，因此不用指定固定端口\napp.listen(port);\n</code></pre><p>9.Heroku的进程管理工具Foreman需要通过Procfile文件来声明应该默认启动的文件，因此需在应用程序根目录添加一个名为Procfile的文件，如下所示：</p>\n<pre><code>//进入应用程序根目录，声明启动的文件\n$ echo &quot;web: node app.js&quot; &gt; Procfile\n//通过Foreman启动应用程序\n$ forman start\n14:06:24 web.1  | started with pid 5105\n14:06:26 web.1  | Express server listening on port 5000\n</code></pre><p>10.Foreman启动成功后，可以通过本地访问应用程序，最现只差上传应用程序到Heroku。</p>\n<pre><code>//在应用程序package.json文件中指定engines\n&quot;engines&quot;: {\n    &quot;node&quot;: &quot;0.10.x&quot;,\n    &quot;npm&quot;: &quot;1.2.x&quot;\n}\n\n//检查应用程序package.json中的信赖文件是否安装\n$ npm install\n\n//通过Git添加应用程序到仓库，并上传到Heroku\n$ git init //创建git仓库\n$ git add . //添加文件到仓库\n$ git commit -m &apos;upload to heroku&apos; //提交文件到仓库\n$ heroku create nodetest --stack ceder //在heroku中建立nodetest应用\n$ git push heroku master //提交应用程序到heroku的master主干\n</code></pre><p>11.如果一切正常，可以通过Heroku分配的二级域名访问应用程序，例如 <a href=\"http://nodetest.herokuapp.com\" target=\"_blank\" rel=\"noopener\">http://nodetest.herokuapp.com</a><br>12.Heroku支持自定义域名绑定，操作如下：</p>\n<pre><code>//在以有的域名中添加子域名并指定DNS为Heroku分配的二级域名\n//以www.nodetest.com为例,添加到heroku自定域名中\n$ heroku domains:add www.nodetest.com\n\n//查看域名信息\n$ heroku domains\n=== nodetest Domain Names\nnodetest.herokuapp.com\nwww.nodetest.com\n\n//通过命令行打开并访问应用程序\n$ heroku open\n</code></pre><h3 id=\"参考文档：\"><a href=\"#参考文档：\" class=\"headerlink\" title=\"参考文档：\"></a>参考文档：</h3><ul>\n<li><a href=\"http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html</a></li>\n<li><a href=\"http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/\" target=\"_blank\" rel=\"noopener\">http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/</a></li>\n<li><a href=\"http://blog.csdn.net/ithomer/article/details/7529022\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/ithomer/article/details/7529022</a></li>\n<li><a href=\"http://www.2cto.com/kf/201201/116097.html\" target=\"_blank\" rel=\"noopener\">http://www.2cto.com/kf/201201/116097.html</a></li>\n<li><a href=\"http://ux.etao.com/posts/799\" target=\"_blank\" rel=\"noopener\">http://ux.etao.com/posts/799</a></li>\n</ul>\n<p>表达不清楚或者不正确的地方，请与我联系hankewins#gmail.com。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>自从写第一个Node <a href=\"https://github.com/hankewins/microblog\" target=\"_blank\" rel=\"noopener\">Microblog</a> web应用到现在也很长时间了，虽然后面也写了几个Node小工具，但是一直都是基于本地环境。虽然之前也有尝试在SAE、NAE(已停止维护)、BAE上部署Node应用程序，但由于种种原因，最终也只是一个尝试，没有成功部署，在此还是推荐几家PaaS平台：</p>\n<ul>\n<li><a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"noopener\">Heroku</a>(信赖Git+Foreman)</li>\n<li><a href=\"http://www.cloudfoundry.com/\" target=\"_blank\" rel=\"noopener\">Cloud Foundry</a>(依赖vmc+ruby+rubyGems)</li>\n<li><a href=\"http://nodester.com/\" target=\"_blank\" rel=\"noopener\">Nodester</a>(被AppFog收购)</li>\n<li><a href=\"https://www.appfog.com/\" target=\"_blank\" rel=\"noopener\">AppFog</a></li>\n</ul>\n<p>可根据自己的喜好与对PaaS不同平台的了解，选择适合的平台，本文选择Heroku来部署。</p>\n<p>Heroku部署Node.js应用程序的步骤如下：</p>\n<p>1.访问 <a href=\"https://id.heroku.com/signup/www-header\" target=\"_blank\" rel=\"noopener\">https://id.heroku.com/signup/www-header</a> ，网站会要求用户输入电子邮件地址。</p>\n<p>2.Heroku注册，一旦成功输入电子邮件地址，网站会邀请你检查邮件，邮件中有确认链接。</p>\n<p>3.打开电子邮件，进入所提供的Heroku链接，点击链接会邀请你输入密码。</p>\n<p>4.按照 <a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs\" target=\"_blank\" rel=\"noopener\">https://devcenter.heroku.com/articles/getting-started-with-nodejs</a> 中的指南，首先安装Heroku工具条。它提供了能让我们将站点部署到Heroku的命令行工具。</p>\n<p>5.访问 <a href=\"https://toolbelt.heroku.com/\" target=\"_blank\" rel=\"noopener\">https://toolbelt.heroku.com/</a> ，选择适用于自己平台的安装方式，这里我选择的是 Debian/Ubuntu。</p>\n<p>安装Heroku命令行工具</p>\n<p>6.Heroku toolbelt安装完成后，现在就可以登录账号，在命令行模式下输入</p>\n<pre><code>$ heroku login\n//输入heroku注册的账号信息\nEnter your Heroku credentials.\nEmail: test@gmail.com\nPassword (typing will be hidden):\n//如果是第一次登录，heroku会为你生成一个SSH公共密钥，\n//以此来管理对服务的访问，可在heroku账号设置中查看\nCould not find on existing public key.\nWould you like to generate one? [Yn]\nGenerating new SSH public key.\nUploading ssh public key ~/.ssh/id_rsa.pub\n</code></pre><p>7.至此，Heroku环境配置己完成，可以准备部署到Heroku服务器啦！</p>\n<p>8.检查程序入口文件中服务器端口设置是否正确。</p>\n<pre><code>//Express 默认端口配置\nvar port = process.env.PORT || 3000;\n//由于heroku会随机分配端口，因此不用指定固定端口\napp.listen(port);\n</code></pre><p>9.Heroku的进程管理工具Foreman需要通过Procfile文件来声明应该默认启动的文件，因此需在应用程序根目录添加一个名为Procfile的文件，如下所示：</p>\n<pre><code>//进入应用程序根目录，声明启动的文件\n$ echo &quot;web: node app.js&quot; &gt; Procfile\n//通过Foreman启动应用程序\n$ forman start\n14:06:24 web.1  | started with pid 5105\n14:06:26 web.1  | Express server listening on port 5000\n</code></pre><p>10.Foreman启动成功后，可以通过本地访问应用程序，最现只差上传应用程序到Heroku。</p>\n<pre><code>//在应用程序package.json文件中指定engines\n&quot;engines&quot;: {\n    &quot;node&quot;: &quot;0.10.x&quot;,\n    &quot;npm&quot;: &quot;1.2.x&quot;\n}\n\n//检查应用程序package.json中的信赖文件是否安装\n$ npm install\n\n//通过Git添加应用程序到仓库，并上传到Heroku\n$ git init //创建git仓库\n$ git add . //添加文件到仓库\n$ git commit -m &apos;upload to heroku&apos; //提交文件到仓库\n$ heroku create nodetest --stack ceder //在heroku中建立nodetest应用\n$ git push heroku master //提交应用程序到heroku的master主干\n</code></pre><p>11.如果一切正常，可以通过Heroku分配的二级域名访问应用程序，例如 <a href=\"http://nodetest.herokuapp.com\" target=\"_blank\" rel=\"noopener\">http://nodetest.herokuapp.com</a><br>12.Heroku支持自定义域名绑定，操作如下：</p>\n<pre><code>//在以有的域名中添加子域名并指定DNS为Heroku分配的二级域名\n//以www.nodetest.com为例,添加到heroku自定域名中\n$ heroku domains:add www.nodetest.com\n\n//查看域名信息\n$ heroku domains\n=== nodetest Domain Names\nnodetest.herokuapp.com\nwww.nodetest.com\n\n//通过命令行打开并访问应用程序\n$ heroku open\n</code></pre><h3 id=\"参考文档：\"><a href=\"#参考文档：\" class=\"headerlink\" title=\"参考文档：\"></a>参考文档：</h3><ul>\n<li><a href=\"http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/s/blog_6d0cbb0301019jor.html</a></li>\n<li><a href=\"http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/\" target=\"_blank\" rel=\"noopener\">http://blog.longwin.com.tw/2011/04/ssh-failure-sign-key-2011/</a></li>\n<li><a href=\"http://blog.csdn.net/ithomer/article/details/7529022\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/ithomer/article/details/7529022</a></li>\n<li><a href=\"http://www.2cto.com/kf/201201/116097.html\" target=\"_blank\" rel=\"noopener\">http://www.2cto.com/kf/201201/116097.html</a></li>\n<li><a href=\"http://ux.etao.com/posts/799\" target=\"_blank\" rel=\"noopener\">http://ux.etao.com/posts/799</a></li>\n</ul>\n<p>表达不清楚或者不正确的地方，请与我联系hankewins#gmail.com。</p>\n"},{"layout":"post","title":"Ubuntu下vim安装markdown插件","date":"2013-09-18T11:38:00.000Z","comments":1,"_content":"\nMarkdown出来也有很长时间了，网上也有很多关于Markdown的语法介绍以及使用说明，如果还不知道什么是Markdown,可以查看这篇文章。写这篇文章的初衷只为了记录在Windows系统与Ubuntu系统下使用markdown的一些个人感受。\n\nMarkdown in windows\nSublime text 2\n由于个人偏爱使用Sublime text 2（以下简写为ST2）进行编码,所以一般都偏向安装ST2的插件，在这里选择的是Markdown和Markdown Preview，Markdown主要是markdown的语法高度，Markdown Preview主要是文档预览（非实时的预览）。也许是更加喜爱像Dreamweaver那样的可视化操作，因此搜索后发现了MarkdownPad。\n\nMarkdownPad\n相比使用ST2来讲，MarkdownPad可以实时预览，多文件切换也很流畅，但不喜爱它默认的markdown语法高度的颜色以及有限的免费版功能，因此尝试了使用MdCharm。\n\nMdCharm\n相比ST2与MarkdownPad来讲，MdCharm是我个人比较喜爱的一款Markdown编辑器，不仅启动速度快、语法高亮的颜色以及渲染的文档都不错，所以在写Blog的时候使用非常的方便。\n\n由于开发环境切换到Ubuntu后,一般都是使用gedit和vim进行文件的查看与编写，所以在此记录vim下配置markdown以及markdown to wordpress。\n\nMarkdown in ubuntu\n在这里我也不需要重复造轮子，可以查看以下链接：\n\n在vim中设置markdown语法高亮\n\n使用vim和markdown撰写blog并发布到wordpress\n\n注意：操作完成后，重新打开vim。\n\n参考文档：\n\n[http://wowubuntu.com/markdown/](http://wowubuntu.com/markdown/)\n\n[http://daringfireball.net/projects/markdown/basics](http://daringfireball.net/projects/markdown/basics)\n\n[http://zh.wikipedia.org/wiki/Markdown](http://zh.wikipedia.org/wiki/Markdown)","source":"_posts/2013-09-18-ubuntu-vim-install-markdown-plugin.md","raw":"---\nlayout: post\ntitle: Ubuntu下vim安装markdown插件\ndate: 2013-09-18 19:38\ncomments: true\ncategories: [前端开发]\n---\n\nMarkdown出来也有很长时间了，网上也有很多关于Markdown的语法介绍以及使用说明，如果还不知道什么是Markdown,可以查看这篇文章。写这篇文章的初衷只为了记录在Windows系统与Ubuntu系统下使用markdown的一些个人感受。\n\nMarkdown in windows\nSublime text 2\n由于个人偏爱使用Sublime text 2（以下简写为ST2）进行编码,所以一般都偏向安装ST2的插件，在这里选择的是Markdown和Markdown Preview，Markdown主要是markdown的语法高度，Markdown Preview主要是文档预览（非实时的预览）。也许是更加喜爱像Dreamweaver那样的可视化操作，因此搜索后发现了MarkdownPad。\n\nMarkdownPad\n相比使用ST2来讲，MarkdownPad可以实时预览，多文件切换也很流畅，但不喜爱它默认的markdown语法高度的颜色以及有限的免费版功能，因此尝试了使用MdCharm。\n\nMdCharm\n相比ST2与MarkdownPad来讲，MdCharm是我个人比较喜爱的一款Markdown编辑器，不仅启动速度快、语法高亮的颜色以及渲染的文档都不错，所以在写Blog的时候使用非常的方便。\n\n由于开发环境切换到Ubuntu后,一般都是使用gedit和vim进行文件的查看与编写，所以在此记录vim下配置markdown以及markdown to wordpress。\n\nMarkdown in ubuntu\n在这里我也不需要重复造轮子，可以查看以下链接：\n\n在vim中设置markdown语法高亮\n\n使用vim和markdown撰写blog并发布到wordpress\n\n注意：操作完成后，重新打开vim。\n\n参考文档：\n\n[http://wowubuntu.com/markdown/](http://wowubuntu.com/markdown/)\n\n[http://daringfireball.net/projects/markdown/basics](http://daringfireball.net/projects/markdown/basics)\n\n[http://zh.wikipedia.org/wiki/Markdown](http://zh.wikipedia.org/wiki/Markdown)","slug":"ubuntu-vim-install-markdown-plugin","published":1,"updated":"2018-05-30T08:12:15.849Z","photos":[],"link":"","_id":"cjhubytjt0010yis5wpyfs1ps","content":"<p>Markdown出来也有很长时间了，网上也有很多关于Markdown的语法介绍以及使用说明，如果还不知道什么是Markdown,可以查看这篇文章。写这篇文章的初衷只为了记录在Windows系统与Ubuntu系统下使用markdown的一些个人感受。</p>\n<p>Markdown in windows<br>Sublime text 2<br>由于个人偏爱使用Sublime text 2（以下简写为ST2）进行编码,所以一般都偏向安装ST2的插件，在这里选择的是Markdown和Markdown Preview，Markdown主要是markdown的语法高度，Markdown Preview主要是文档预览（非实时的预览）。也许是更加喜爱像Dreamweaver那样的可视化操作，因此搜索后发现了MarkdownPad。</p>\n<p>MarkdownPad<br>相比使用ST2来讲，MarkdownPad可以实时预览，多文件切换也很流畅，但不喜爱它默认的markdown语法高度的颜色以及有限的免费版功能，因此尝试了使用MdCharm。</p>\n<p>MdCharm<br>相比ST2与MarkdownPad来讲，MdCharm是我个人比较喜爱的一款Markdown编辑器，不仅启动速度快、语法高亮的颜色以及渲染的文档都不错，所以在写Blog的时候使用非常的方便。</p>\n<p>由于开发环境切换到Ubuntu后,一般都是使用gedit和vim进行文件的查看与编写，所以在此记录vim下配置markdown以及markdown to wordpress。</p>\n<p>Markdown in ubuntu<br>在这里我也不需要重复造轮子，可以查看以下链接：</p>\n<p>在vim中设置markdown语法高亮</p>\n<p>使用vim和markdown撰写blog并发布到wordpress</p>\n<p>注意：操作完成后，重新打开vim。</p>\n<p>参考文档：</p>\n<p><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"noopener\">http://wowubuntu.com/markdown/</a></p>\n<p><a href=\"http://daringfireball.net/projects/markdown/basics\" target=\"_blank\" rel=\"noopener\">http://daringfireball.net/projects/markdown/basics</a></p>\n<p><a href=\"http://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">http://zh.wikipedia.org/wiki/Markdown</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Markdown出来也有很长时间了，网上也有很多关于Markdown的语法介绍以及使用说明，如果还不知道什么是Markdown,可以查看这篇文章。写这篇文章的初衷只为了记录在Windows系统与Ubuntu系统下使用markdown的一些个人感受。</p>\n<p>Markdown in windows<br>Sublime text 2<br>由于个人偏爱使用Sublime text 2（以下简写为ST2）进行编码,所以一般都偏向安装ST2的插件，在这里选择的是Markdown和Markdown Preview，Markdown主要是markdown的语法高度，Markdown Preview主要是文档预览（非实时的预览）。也许是更加喜爱像Dreamweaver那样的可视化操作，因此搜索后发现了MarkdownPad。</p>\n<p>MarkdownPad<br>相比使用ST2来讲，MarkdownPad可以实时预览，多文件切换也很流畅，但不喜爱它默认的markdown语法高度的颜色以及有限的免费版功能，因此尝试了使用MdCharm。</p>\n<p>MdCharm<br>相比ST2与MarkdownPad来讲，MdCharm是我个人比较喜爱的一款Markdown编辑器，不仅启动速度快、语法高亮的颜色以及渲染的文档都不错，所以在写Blog的时候使用非常的方便。</p>\n<p>由于开发环境切换到Ubuntu后,一般都是使用gedit和vim进行文件的查看与编写，所以在此记录vim下配置markdown以及markdown to wordpress。</p>\n<p>Markdown in ubuntu<br>在这里我也不需要重复造轮子，可以查看以下链接：</p>\n<p>在vim中设置markdown语法高亮</p>\n<p>使用vim和markdown撰写blog并发布到wordpress</p>\n<p>注意：操作完成后，重新打开vim。</p>\n<p>参考文档：</p>\n<p><a href=\"http://wowubuntu.com/markdown/\" target=\"_blank\" rel=\"noopener\">http://wowubuntu.com/markdown/</a></p>\n<p><a href=\"http://daringfireball.net/projects/markdown/basics\" target=\"_blank\" rel=\"noopener\">http://daringfireball.net/projects/markdown/basics</a></p>\n<p><a href=\"http://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">http://zh.wikipedia.org/wiki/Markdown</a></p>\n"},{"layout":"post","title":"精彩国庆，娱乐人生","date":"2013-10-07T06:54:00.000Z","comments":1,"_content":"\n今年的国庆假期可以简单的概括为“精彩国庆，娱乐人生”！\n\n没有加班，没有旅行，也没有回家，只有娱乐。有点遗憾的是没有及时的打电话回家，让爸妈担心啦！\n\n国庆的娱乐-游戏LOL,虽然国庆大部分时间都是在游戏中渡过的，可能关心我的朋友们在心里都认为我现在“颓废”了,其实我很清楚，自己在做什么，应该做什么。有时候感觉人很奇怪，有太多的想法，有太多的事，有太多的......,我记得某次分享中提到“用心感受生活，用视觉鞭笞思想”的主题，我想与工作了几年了解了一些国外的文化以及公司文化等等，让我视野开阔了，接受了一些新的思想，有了“丰富”的阅历。\n\n今年的国庆让我有以下的收获：\n\n1.冷静思考了近期的规划。\n\n2.学会了主动分享以及分享的价值。\n\n3.奉献与回报的意义。\n\n4.团队精神的重要性。\n\n5.愉快的心情。\n\n","source":"_posts/2013-10-07-happy-national-day.md","raw":"---\nlayout: post\ntitle: 精彩国庆，娱乐人生\ndate: 2013-10-07 14:54\ncomments: true\ncategories: [工作与生活]\n---\n\n今年的国庆假期可以简单的概括为“精彩国庆，娱乐人生”！\n\n没有加班，没有旅行，也没有回家，只有娱乐。有点遗憾的是没有及时的打电话回家，让爸妈担心啦！\n\n国庆的娱乐-游戏LOL,虽然国庆大部分时间都是在游戏中渡过的，可能关心我的朋友们在心里都认为我现在“颓废”了,其实我很清楚，自己在做什么，应该做什么。有时候感觉人很奇怪，有太多的想法，有太多的事，有太多的......,我记得某次分享中提到“用心感受生活，用视觉鞭笞思想”的主题，我想与工作了几年了解了一些国外的文化以及公司文化等等，让我视野开阔了，接受了一些新的思想，有了“丰富”的阅历。\n\n今年的国庆让我有以下的收获：\n\n1.冷静思考了近期的规划。\n\n2.学会了主动分享以及分享的价值。\n\n3.奉献与回报的意义。\n\n4.团队精神的重要性。\n\n5.愉快的心情。\n\n","slug":"happy-national-day","published":1,"updated":"2018-05-30T08:12:15.849Z","photos":[],"link":"","_id":"cjhubytjv0013yis5k1ekgn4w","content":"<p>今年的国庆假期可以简单的概括为“精彩国庆，娱乐人生”！</p>\n<p>没有加班，没有旅行，也没有回家，只有娱乐。有点遗憾的是没有及时的打电话回家，让爸妈担心啦！</p>\n<p>国庆的娱乐-游戏LOL,虽然国庆大部分时间都是在游戏中渡过的，可能关心我的朋友们在心里都认为我现在“颓废”了,其实我很清楚，自己在做什么，应该做什么。有时候感觉人很奇怪，有太多的想法，有太多的事，有太多的……,我记得某次分享中提到“用心感受生活，用视觉鞭笞思想”的主题，我想与工作了几年了解了一些国外的文化以及公司文化等等，让我视野开阔了，接受了一些新的思想，有了“丰富”的阅历。</p>\n<p>今年的国庆让我有以下的收获：</p>\n<p>1.冷静思考了近期的规划。</p>\n<p>2.学会了主动分享以及分享的价值。</p>\n<p>3.奉献与回报的意义。</p>\n<p>4.团队精神的重要性。</p>\n<p>5.愉快的心情。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今年的国庆假期可以简单的概括为“精彩国庆，娱乐人生”！</p>\n<p>没有加班，没有旅行，也没有回家，只有娱乐。有点遗憾的是没有及时的打电话回家，让爸妈担心啦！</p>\n<p>国庆的娱乐-游戏LOL,虽然国庆大部分时间都是在游戏中渡过的，可能关心我的朋友们在心里都认为我现在“颓废”了,其实我很清楚，自己在做什么，应该做什么。有时候感觉人很奇怪，有太多的想法，有太多的事，有太多的……,我记得某次分享中提到“用心感受生活，用视觉鞭笞思想”的主题，我想与工作了几年了解了一些国外的文化以及公司文化等等，让我视野开阔了，接受了一些新的思想，有了“丰富”的阅历。</p>\n<p>今年的国庆让我有以下的收获：</p>\n<p>1.冷静思考了近期的规划。</p>\n<p>2.学会了主动分享以及分享的价值。</p>\n<p>3.奉献与回报的意义。</p>\n<p>4.团队精神的重要性。</p>\n<p>5.愉快的心情。</p>\n"},{"layout":"post","title":"总结在金立工作的一年","date":"2013-10-07T13:23:00.000Z","comments":1,"_content":"\n2012年9月下旬加入金立(GiONEE),从事移动互联网H5研发工作。\n\n在金立的这一年，首先要感谢@rainkid和@valleykid对我的认可以及信任，特别感谢@valleykid在工作中的指导及帮助，其次要感谢@华仔和@老田在工作中的默契的配合以及主动帮助，最后要感谢其他小伙伴们在工作与生活中给予援助。有你们的陪伴让感受到家的气息。\n\n2012年是大家谈论世界末日的一年;\n\n2012年是我开启淘宝网店创业的一年;\n\n2012年是智能手机席卷的一年;\n\n2012年是移动开发燎原的一年;\n\n2012年是人生风向标指引的一年;\n\n......\n\n2012年对我来说是如此的重要，在特定的地方，特定的时间，遇到特定的机遇 ---- 正式进入移动开发。\n\n在金立这一年的收获：\n\n1.鉴证了金立移动互联网的组建\n\n2.鉴证团队的组建与完善\n\n3.鉴证了项目迭代的各个环节\n\n4.了解了PC端开发与移动端开发的区别\n\n5.参与前端库组件开发\n\n6.管理与规划\n\n总结在金立这一年，学到的不仅仅是技术，更多的是一个公司转型的过程，一个团队成长的历程，一个项目成熟的经过以及个人人生方向的指引。\n","source":"_posts/2013-10-07-work-in-gionee-for-one-year.md","raw":"---\nlayout: post\ntitle: 总结在金立工作的一年\ndate: 2013-10-07 21:23\ncomments: true\ncategories: [工作与生活]\n---\n\n2012年9月下旬加入金立(GiONEE),从事移动互联网H5研发工作。\n\n在金立的这一年，首先要感谢@rainkid和@valleykid对我的认可以及信任，特别感谢@valleykid在工作中的指导及帮助，其次要感谢@华仔和@老田在工作中的默契的配合以及主动帮助，最后要感谢其他小伙伴们在工作与生活中给予援助。有你们的陪伴让感受到家的气息。\n\n2012年是大家谈论世界末日的一年;\n\n2012年是我开启淘宝网店创业的一年;\n\n2012年是智能手机席卷的一年;\n\n2012年是移动开发燎原的一年;\n\n2012年是人生风向标指引的一年;\n\n......\n\n2012年对我来说是如此的重要，在特定的地方，特定的时间，遇到特定的机遇 ---- 正式进入移动开发。\n\n在金立这一年的收获：\n\n1.鉴证了金立移动互联网的组建\n\n2.鉴证团队的组建与完善\n\n3.鉴证了项目迭代的各个环节\n\n4.了解了PC端开发与移动端开发的区别\n\n5.参与前端库组件开发\n\n6.管理与规划\n\n总结在金立这一年，学到的不仅仅是技术，更多的是一个公司转型的过程，一个团队成长的历程，一个项目成熟的经过以及个人人生方向的指引。\n","slug":"work-in-gionee-for-one-year","published":1,"updated":"2018-05-30T08:12:15.850Z","photos":[],"link":"","_id":"cjhubytjw0015yis5xy41uo1t","content":"<p>2012年9月下旬加入金立(GiONEE),从事移动互联网H5研发工作。</p>\n<p>在金立的这一年，首先要感谢@rainkid和@valleykid对我的认可以及信任，特别感谢@valleykid在工作中的指导及帮助，其次要感谢@华仔和@老田在工作中的默契的配合以及主动帮助，最后要感谢其他小伙伴们在工作与生活中给予援助。有你们的陪伴让感受到家的气息。</p>\n<p>2012年是大家谈论世界末日的一年;</p>\n<p>2012年是我开启淘宝网店创业的一年;</p>\n<p>2012年是智能手机席卷的一年;</p>\n<p>2012年是移动开发燎原的一年;</p>\n<p>2012年是人生风向标指引的一年;</p>\n<p>……</p>\n<p>2012年对我来说是如此的重要，在特定的地方，特定的时间，遇到特定的机遇 —- 正式进入移动开发。</p>\n<p>在金立这一年的收获：</p>\n<p>1.鉴证了金立移动互联网的组建</p>\n<p>2.鉴证团队的组建与完善</p>\n<p>3.鉴证了项目迭代的各个环节</p>\n<p>4.了解了PC端开发与移动端开发的区别</p>\n<p>5.参与前端库组件开发</p>\n<p>6.管理与规划</p>\n<p>总结在金立这一年，学到的不仅仅是技术，更多的是一个公司转型的过程，一个团队成长的历程，一个项目成熟的经过以及个人人生方向的指引。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2012年9月下旬加入金立(GiONEE),从事移动互联网H5研发工作。</p>\n<p>在金立的这一年，首先要感谢@rainkid和@valleykid对我的认可以及信任，特别感谢@valleykid在工作中的指导及帮助，其次要感谢@华仔和@老田在工作中的默契的配合以及主动帮助，最后要感谢其他小伙伴们在工作与生活中给予援助。有你们的陪伴让感受到家的气息。</p>\n<p>2012年是大家谈论世界末日的一年;</p>\n<p>2012年是我开启淘宝网店创业的一年;</p>\n<p>2012年是智能手机席卷的一年;</p>\n<p>2012年是移动开发燎原的一年;</p>\n<p>2012年是人生风向标指引的一年;</p>\n<p>……</p>\n<p>2012年对我来说是如此的重要，在特定的地方，特定的时间，遇到特定的机遇 —- 正式进入移动开发。</p>\n<p>在金立这一年的收获：</p>\n<p>1.鉴证了金立移动互联网的组建</p>\n<p>2.鉴证团队的组建与完善</p>\n<p>3.鉴证了项目迭代的各个环节</p>\n<p>4.了解了PC端开发与移动端开发的区别</p>\n<p>5.参与前端库组件开发</p>\n<p>6.管理与规划</p>\n<p>总结在金立这一年，学到的不仅仅是技术，更多的是一个公司转型的过程，一个团队成长的历程，一个项目成熟的经过以及个人人生方向的指引。</p>\n"},{"layout":"post","title":"移动平台前端开发总结","date":"2013-10-14T12:21:00.000Z","comments":1,"_content":"\n移动平台前端开发主要是指针智能手机（iphone、android）做站点适配，并非是针对普通手机开发Wap 2.0，所以在阅读本篇文章以前，你需要对webkit内核的浏览器有一定的了解，需要对HTML5和CSS3有一定的了解。\n\n1、移动前端开发webkit内核中的一些私有的meta标签\n\n=> 强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览；\n\n=> Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览\n\n=> Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览\n\n=> Iphone设备中的safari私有meta标签，它表示：\n\n=> 告诉设备忽略将页面中的数字识别为电话号码\n\n=> 告诉设备忽略将页面中的电子邮箱\n\n(IOS) (Android)\n\n=> 说明： 这个link就是设置web app的放置主屏幕上icon文件路径。图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px）\n\n注：红色部分为H5模板页面通用设置项。\n\n2、如何去除IOS和Android中的输入URL的控件条\n\n=> setTimeout(scrollTo,0,0,10); 请注意，这句代码必须放在window.onload里才能够正常的工作，而且你的当前文档的内容高度必须是高于窗口的高度时，这句代码才能有效的执行。\n\n3、如何关闭IOS中键盘自动大写\n\n=> 我们知道在iOS中，当虚拟键盘弹出时，默认情况下键盘是开启首字母大写的功能的，根据某些业务场景，可能我们需要关闭这个功能，移动版本webkit为input元素提供了autocapitalize属性，通过指定autocapitalize=”off”来关闭键盘默认首字母大写。\n\n4、IOS中如何彻底禁止用户在新窗口打开页面\n\n=> 有时我们可能需要禁止用户在新窗口打开页面，我们可以使用a标签的target=”_self“来指定用户在新窗口打开，或者target属性保持空，但是你会发现iOS的用户在这个链接的上方长按3秒钟后，iOS会弹出一个列表按钮，用户通过这些按钮仍然可以在新窗口打开页面，这样的话，开发者指定的target属性就失效了，但是可以通过指定当前元素的-webkit-touch-callout样式属性为none来禁止iOS弹出这些按钮。这个技巧仅适用iOS对于Android平台则无效。\n\n5、IOS中如何禁止用户保存图片＼复制图片\n\n=> 我们可以为一个img标签指定-webkit-touch-callout为none也会禁止设备弹出列表按钮，这样用户就无法保存＼复制你的图片了。\n\n6、IOS中如何禁止用户选中文字(Android同样有效)\n\n=> 我们通过指定文字标签的-webkit-user-select属性为none便可以禁止iOS用户选中文字。\n\n7、学会使用webkit-box\n\n8、如何解决android平台中页面无法自适应\n\n=> 虽然你的html和css都是完全自适应的，但有一天如果你发现你的页面在android中显示的并不是自适应的时候，首先请你确认你的head标签中是否包含以下meta标签：\n\n如果有的话，那请你再仔细的看清楚有没有这个属性的值width=device-width，如果没有请立即加上吧！\n\n9、如何解决iOS 4.3版本中safari对页面中5位数字的自动识别和自动添加样式\n\n=> iOS4.3版本，升级后对safari造成了一个bug：即使你添加了如下的meta标签，safari仍然会对页面中的5位连续的数字进行自动识别，并且将其重新渲染样式，也就是说你的css对该标签是无效的。\n\n如下改写：\n\n12345.00元\n\n10、如何解决Android 2.0以下平台中圆角的问题\n\n=> 考虑到border-radius的兼容性问题，使用如下方式：\n\n定义4个圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px;\n\n定义部分圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px; -webkit-border-top-left-raduis:0; -webkit-border-bottom-left-radius:0;\n\n11、如何解决Android浏览器中webapp中圆角后存在背景色的问题（针对特定生产商的Android浏览器）\n\n=> 可以通过设置父层与子层元素都具有相同圆角，并设置父层元素的背景后与底色一致。\n\n12、如何解决移动开发中字体适配问题\n\n=> 我们推荐采用CSS3,新的长度单位REM(REM是相对长度单位。相对于根元素(即html元素)font-size计算值的倍数)。\n\n/* * 1rem=20px for 320px(中低端分辨率). * 1rem=22.5px for 360px(高端分辨率). */\n\nhtml{font-size:20px; -webkit-text-size-adjust:none;} @media all and (min-width:359px){.uc-hack{font-size:22.5px;}} @media all and (min-width:359px) and (-webkit-min-device-pixel-ratio:1.5){html{font-size:22.5px;}}\n\n（持续更新......）\n\n","source":"_posts/2013-10-14-summary-of-mobile-frontend-development.md","raw":"---\nlayout: post\ntitle: 移动平台前端开发总结\ndate: 2013-10-14 20:21\ncomments: true\ncategories: [工作与生活]\n---\n\n移动平台前端开发主要是指针智能手机（iphone、android）做站点适配，并非是针对普通手机开发Wap 2.0，所以在阅读本篇文章以前，你需要对webkit内核的浏览器有一定的了解，需要对HTML5和CSS3有一定的了解。\n\n1、移动前端开发webkit内核中的一些私有的meta标签\n\n=> 强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览；\n\n=> Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览\n\n=> Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览\n\n=> Iphone设备中的safari私有meta标签，它表示：\n\n=> 告诉设备忽略将页面中的数字识别为电话号码\n\n=> 告诉设备忽略将页面中的电子邮箱\n\n(IOS) (Android)\n\n=> 说明： 这个link就是设置web app的放置主屏幕上icon文件路径。图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px）\n\n注：红色部分为H5模板页面通用设置项。\n\n2、如何去除IOS和Android中的输入URL的控件条\n\n=> setTimeout(scrollTo,0,0,10); 请注意，这句代码必须放在window.onload里才能够正常的工作，而且你的当前文档的内容高度必须是高于窗口的高度时，这句代码才能有效的执行。\n\n3、如何关闭IOS中键盘自动大写\n\n=> 我们知道在iOS中，当虚拟键盘弹出时，默认情况下键盘是开启首字母大写的功能的，根据某些业务场景，可能我们需要关闭这个功能，移动版本webkit为input元素提供了autocapitalize属性，通过指定autocapitalize=”off”来关闭键盘默认首字母大写。\n\n4、IOS中如何彻底禁止用户在新窗口打开页面\n\n=> 有时我们可能需要禁止用户在新窗口打开页面，我们可以使用a标签的target=”_self“来指定用户在新窗口打开，或者target属性保持空，但是你会发现iOS的用户在这个链接的上方长按3秒钟后，iOS会弹出一个列表按钮，用户通过这些按钮仍然可以在新窗口打开页面，这样的话，开发者指定的target属性就失效了，但是可以通过指定当前元素的-webkit-touch-callout样式属性为none来禁止iOS弹出这些按钮。这个技巧仅适用iOS对于Android平台则无效。\n\n5、IOS中如何禁止用户保存图片＼复制图片\n\n=> 我们可以为一个img标签指定-webkit-touch-callout为none也会禁止设备弹出列表按钮，这样用户就无法保存＼复制你的图片了。\n\n6、IOS中如何禁止用户选中文字(Android同样有效)\n\n=> 我们通过指定文字标签的-webkit-user-select属性为none便可以禁止iOS用户选中文字。\n\n7、学会使用webkit-box\n\n8、如何解决android平台中页面无法自适应\n\n=> 虽然你的html和css都是完全自适应的，但有一天如果你发现你的页面在android中显示的并不是自适应的时候，首先请你确认你的head标签中是否包含以下meta标签：\n\n如果有的话，那请你再仔细的看清楚有没有这个属性的值width=device-width，如果没有请立即加上吧！\n\n9、如何解决iOS 4.3版本中safari对页面中5位数字的自动识别和自动添加样式\n\n=> iOS4.3版本，升级后对safari造成了一个bug：即使你添加了如下的meta标签，safari仍然会对页面中的5位连续的数字进行自动识别，并且将其重新渲染样式，也就是说你的css对该标签是无效的。\n\n如下改写：\n\n12345.00元\n\n10、如何解决Android 2.0以下平台中圆角的问题\n\n=> 考虑到border-radius的兼容性问题，使用如下方式：\n\n定义4个圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px;\n\n定义部分圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px; -webkit-border-top-left-raduis:0; -webkit-border-bottom-left-radius:0;\n\n11、如何解决Android浏览器中webapp中圆角后存在背景色的问题（针对特定生产商的Android浏览器）\n\n=> 可以通过设置父层与子层元素都具有相同圆角，并设置父层元素的背景后与底色一致。\n\n12、如何解决移动开发中字体适配问题\n\n=> 我们推荐采用CSS3,新的长度单位REM(REM是相对长度单位。相对于根元素(即html元素)font-size计算值的倍数)。\n\n/* * 1rem=20px for 320px(中低端分辨率). * 1rem=22.5px for 360px(高端分辨率). */\n\nhtml{font-size:20px; -webkit-text-size-adjust:none;} @media all and (min-width:359px){.uc-hack{font-size:22.5px;}} @media all and (min-width:359px) and (-webkit-min-device-pixel-ratio:1.5){html{font-size:22.5px;}}\n\n（持续更新......）\n\n","slug":"summary-of-mobile-frontend-development","published":1,"updated":"2018-05-30T08:12:15.851Z","photos":[],"link":"","_id":"cjhubytjy0017yis5a846g17z","content":"<p>移动平台前端开发主要是指针智能手机（iphone、android）做站点适配，并非是针对普通手机开发Wap 2.0，所以在阅读本篇文章以前，你需要对webkit内核的浏览器有一定的了解，需要对HTML5和CSS3有一定的了解。</p>\n<p>1、移动前端开发webkit内核中的一些私有的meta标签</p>\n<p>=&gt; 强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览；</p>\n<p>=&gt; Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览</p>\n<p>=&gt; Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览</p>\n<p>=&gt; Iphone设备中的safari私有meta标签，它表示：</p>\n<p>=&gt; 告诉设备忽略将页面中的数字识别为电话号码</p>\n<p>=&gt; 告诉设备忽略将页面中的电子邮箱</p>\n<p>(IOS) (Android)</p>\n<p>=&gt; 说明： 这个link就是设置web app的放置主屏幕上icon文件路径。图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px）</p>\n<p>注：红色部分为H5模板页面通用设置项。</p>\n<p>2、如何去除IOS和Android中的输入URL的控件条</p>\n<p>=&gt; setTimeout(scrollTo,0,0,10); 请注意，这句代码必须放在window.onload里才能够正常的工作，而且你的当前文档的内容高度必须是高于窗口的高度时，这句代码才能有效的执行。</p>\n<p>3、如何关闭IOS中键盘自动大写</p>\n<p>=&gt; 我们知道在iOS中，当虚拟键盘弹出时，默认情况下键盘是开启首字母大写的功能的，根据某些业务场景，可能我们需要关闭这个功能，移动版本webkit为input元素提供了autocapitalize属性，通过指定autocapitalize=”off”来关闭键盘默认首字母大写。</p>\n<p>4、IOS中如何彻底禁止用户在新窗口打开页面</p>\n<p>=&gt; 有时我们可能需要禁止用户在新窗口打开页面，我们可以使用a标签的target=”_self“来指定用户在新窗口打开，或者target属性保持空，但是你会发现iOS的用户在这个链接的上方长按3秒钟后，iOS会弹出一个列表按钮，用户通过这些按钮仍然可以在新窗口打开页面，这样的话，开发者指定的target属性就失效了，但是可以通过指定当前元素的-webkit-touch-callout样式属性为none来禁止iOS弹出这些按钮。这个技巧仅适用iOS对于Android平台则无效。</p>\n<p>5、IOS中如何禁止用户保存图片＼复制图片</p>\n<p>=&gt; 我们可以为一个img标签指定-webkit-touch-callout为none也会禁止设备弹出列表按钮，这样用户就无法保存＼复制你的图片了。</p>\n<p>6、IOS中如何禁止用户选中文字(Android同样有效)</p>\n<p>=&gt; 我们通过指定文字标签的-webkit-user-select属性为none便可以禁止iOS用户选中文字。</p>\n<p>7、学会使用webkit-box</p>\n<p>8、如何解决android平台中页面无法自适应</p>\n<p>=&gt; 虽然你的html和css都是完全自适应的，但有一天如果你发现你的页面在android中显示的并不是自适应的时候，首先请你确认你的head标签中是否包含以下meta标签：</p>\n<p>如果有的话，那请你再仔细的看清楚有没有这个属性的值width=device-width，如果没有请立即加上吧！</p>\n<p>9、如何解决iOS 4.3版本中safari对页面中5位数字的自动识别和自动添加样式</p>\n<p>=&gt; iOS4.3版本，升级后对safari造成了一个bug：即使你添加了如下的meta标签，safari仍然会对页面中的5位连续的数字进行自动识别，并且将其重新渲染样式，也就是说你的css对该标签是无效的。</p>\n<p>如下改写：</p>\n<p>12345.00元</p>\n<p>10、如何解决Android 2.0以下平台中圆角的问题</p>\n<p>=&gt; 考虑到border-radius的兼容性问题，使用如下方式：</p>\n<p>定义4个圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px;</p>\n<p>定义部分圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px; -webkit-border-top-left-raduis:0; -webkit-border-bottom-left-radius:0;</p>\n<p>11、如何解决Android浏览器中webapp中圆角后存在背景色的问题（针对特定生产商的Android浏览器）</p>\n<p>=&gt; 可以通过设置父层与子层元素都具有相同圆角，并设置父层元素的背景后与底色一致。</p>\n<p>12、如何解决移动开发中字体适配问题</p>\n<p>=&gt; 我们推荐采用CSS3,新的长度单位REM(REM是相对长度单位。相对于根元素(即html元素)font-size计算值的倍数)。</p>\n<p>/<em> </em> 1rem=20px for 320px(中低端分辨率). <em> 1rem=22.5px for 360px(高端分辨率). </em>/</p>\n<p>html{font-size:20px; -webkit-text-size-adjust:none;} @media all and (min-width:359px){.uc-hack{font-size:22.5px;}} @media all and (min-width:359px) and (-webkit-min-device-pixel-ratio:1.5){html{font-size:22.5px;}}</p>\n<p>（持续更新……）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>移动平台前端开发主要是指针智能手机（iphone、android）做站点适配，并非是针对普通手机开发Wap 2.0，所以在阅读本篇文章以前，你需要对webkit内核的浏览器有一定的了解，需要对HTML5和CSS3有一定的了解。</p>\n<p>1、移动前端开发webkit内核中的一些私有的meta标签</p>\n<p>=&gt; 强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览；</p>\n<p>=&gt; Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览</p>\n<p>=&gt; Iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览</p>\n<p>=&gt; Iphone设备中的safari私有meta标签，它表示：</p>\n<p>=&gt; 告诉设备忽略将页面中的数字识别为电话号码</p>\n<p>=&gt; 告诉设备忽略将页面中的电子邮箱</p>\n<p>(IOS) (Android)</p>\n<p>=&gt; 说明： 这个link就是设置web app的放置主屏幕上icon文件路径。图片尺寸可以设定为5757（px）或者Retina可以定为114114（px），ipad尺寸为72*72（px）</p>\n<p>注：红色部分为H5模板页面通用设置项。</p>\n<p>2、如何去除IOS和Android中的输入URL的控件条</p>\n<p>=&gt; setTimeout(scrollTo,0,0,10); 请注意，这句代码必须放在window.onload里才能够正常的工作，而且你的当前文档的内容高度必须是高于窗口的高度时，这句代码才能有效的执行。</p>\n<p>3、如何关闭IOS中键盘自动大写</p>\n<p>=&gt; 我们知道在iOS中，当虚拟键盘弹出时，默认情况下键盘是开启首字母大写的功能的，根据某些业务场景，可能我们需要关闭这个功能，移动版本webkit为input元素提供了autocapitalize属性，通过指定autocapitalize=”off”来关闭键盘默认首字母大写。</p>\n<p>4、IOS中如何彻底禁止用户在新窗口打开页面</p>\n<p>=&gt; 有时我们可能需要禁止用户在新窗口打开页面，我们可以使用a标签的target=”_self“来指定用户在新窗口打开，或者target属性保持空，但是你会发现iOS的用户在这个链接的上方长按3秒钟后，iOS会弹出一个列表按钮，用户通过这些按钮仍然可以在新窗口打开页面，这样的话，开发者指定的target属性就失效了，但是可以通过指定当前元素的-webkit-touch-callout样式属性为none来禁止iOS弹出这些按钮。这个技巧仅适用iOS对于Android平台则无效。</p>\n<p>5、IOS中如何禁止用户保存图片＼复制图片</p>\n<p>=&gt; 我们可以为一个img标签指定-webkit-touch-callout为none也会禁止设备弹出列表按钮，这样用户就无法保存＼复制你的图片了。</p>\n<p>6、IOS中如何禁止用户选中文字(Android同样有效)</p>\n<p>=&gt; 我们通过指定文字标签的-webkit-user-select属性为none便可以禁止iOS用户选中文字。</p>\n<p>7、学会使用webkit-box</p>\n<p>8、如何解决android平台中页面无法自适应</p>\n<p>=&gt; 虽然你的html和css都是完全自适应的，但有一天如果你发现你的页面在android中显示的并不是自适应的时候，首先请你确认你的head标签中是否包含以下meta标签：</p>\n<p>如果有的话，那请你再仔细的看清楚有没有这个属性的值width=device-width，如果没有请立即加上吧！</p>\n<p>9、如何解决iOS 4.3版本中safari对页面中5位数字的自动识别和自动添加样式</p>\n<p>=&gt; iOS4.3版本，升级后对safari造成了一个bug：即使你添加了如下的meta标签，safari仍然会对页面中的5位连续的数字进行自动识别，并且将其重新渲染样式，也就是说你的css对该标签是无效的。</p>\n<p>如下改写：</p>\n<p>12345.00元</p>\n<p>10、如何解决Android 2.0以下平台中圆角的问题</p>\n<p>=&gt; 考虑到border-radius的兼容性问题，使用如下方式：</p>\n<p>定义4个圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px;</p>\n<p>定义部分圆角 border:1px solid #F8F8F8; -webkit-border-radius:5px; -webkit-border-top-left-raduis:0; -webkit-border-bottom-left-radius:0;</p>\n<p>11、如何解决Android浏览器中webapp中圆角后存在背景色的问题（针对特定生产商的Android浏览器）</p>\n<p>=&gt; 可以通过设置父层与子层元素都具有相同圆角，并设置父层元素的背景后与底色一致。</p>\n<p>12、如何解决移动开发中字体适配问题</p>\n<p>=&gt; 我们推荐采用CSS3,新的长度单位REM(REM是相对长度单位。相对于根元素(即html元素)font-size计算值的倍数)。</p>\n<p>/<em> </em> 1rem=20px for 320px(中低端分辨率). <em> 1rem=22.5px for 360px(高端分辨率). </em>/</p>\n<p>html{font-size:20px; -webkit-text-size-adjust:none;} @media all and (min-width:359px){.uc-hack{font-size:22.5px;}} @media all and (min-width:359px) and (-webkit-min-device-pixel-ratio:1.5){html{font-size:22.5px;}}</p>\n<p>（持续更新……）</p>\n"},{"layout":"post","title":"蜕变·WebRebuild 2013 前端年度交流盛会邀请","date":"2013-10-17T12:17:00.000Z","comments":1,"_content":"\n![蜕变·WebRebuild 2013 前端年度交流盛会邀请](/files/2013/10/jbfuimM2CvFvuU.jpg)\n\n互联网web前端设计行业通过一段时期的茧封或焰炼，web技术使行业、企业及自身发生质的改变。痛苦的蜕变是成长的契机，在彼此互相冲击、交流、融合的对话下，将以尊重包容互助合作同步发展的心态，对行业蜕变、自我提升的过程分享自己的观点进行探讨。\n\n2013，本届主题为“蜕变”的前端技术年度交流会已是第七届，依然如往年在深圳、广州、上海、北京、成都五地举行，腾讯ecd联合WebRebuild.ORG、深圳大学文化产业研究院、迅雷CUED主办了第七届前端年度交流会“蜕变”首站 － 深圳站，将于10月26日上午9点在深圳大学拉开帷幕。\n\n###交流会形式 \n\nweb前端设计主题分享、现场来宾主题交流对话探讨。\n\n###会议进行时间 \n\n2013年10月26日（周六）上午 9:00\n\n###会议地点 \n\n深圳市南山区深圳大学科技楼一号报告厅。\n\n###邀请参会对象 \n\n互联网web前端/设计从业者及相关专业、兴趣的学生。\n\n###报名渠道 \n\nWebRebuild.ORG官方网站，或添加微信公众帐号(webrebuildorg)进行相关操作。\n\n###交流会背景\n\nWebRebuild.ORG 成立于2007年，由互联网前端业界人员自发起的一个交流会组织，从深圳扩散至全国，旨在推动互联网前端web标准技术在中国的发展，致力于为同行从业者提供一个分享交流的平台，提升从业者的影响力及技术能力储备，并向发展成为推动中国互联网前端web标准技术的非盈利性组织的目标而努力。\n\n从2007年至今，WebRebuild.ORG得到了W3C中国、Google中国、腾讯、迅雷、网易、欢聚时代、百家筝鸣古筝教育集团等企业组织、同行及会议组委志愿者的大力支持与帮助，已成为中国前端盛大的行业盛会之一。\n\n广州、上海、北京、成都地区更多详细信息及参会报名请访问WebRebuild官方网站查阅：[http://www.webrebuild.org](http://www.webrebuild.org)或收听WebRebuild微信公众帐号（webrebuildorg）获取最新信息。\n\n","source":"_posts/2013-10-17-web-rebuild-party.md","raw":"---\nlayout: post\ntitle: 蜕变·WebRebuild 2013 前端年度交流盛会邀请\ndate: 2013-10-17 20:17\ncomments: true\ncategories: [培训与交流]\n---\n\n![蜕变·WebRebuild 2013 前端年度交流盛会邀请](/files/2013/10/jbfuimM2CvFvuU.jpg)\n\n互联网web前端设计行业通过一段时期的茧封或焰炼，web技术使行业、企业及自身发生质的改变。痛苦的蜕变是成长的契机，在彼此互相冲击、交流、融合的对话下，将以尊重包容互助合作同步发展的心态，对行业蜕变、自我提升的过程分享自己的观点进行探讨。\n\n2013，本届主题为“蜕变”的前端技术年度交流会已是第七届，依然如往年在深圳、广州、上海、北京、成都五地举行，腾讯ecd联合WebRebuild.ORG、深圳大学文化产业研究院、迅雷CUED主办了第七届前端年度交流会“蜕变”首站 － 深圳站，将于10月26日上午9点在深圳大学拉开帷幕。\n\n###交流会形式 \n\nweb前端设计主题分享、现场来宾主题交流对话探讨。\n\n###会议进行时间 \n\n2013年10月26日（周六）上午 9:00\n\n###会议地点 \n\n深圳市南山区深圳大学科技楼一号报告厅。\n\n###邀请参会对象 \n\n互联网web前端/设计从业者及相关专业、兴趣的学生。\n\n###报名渠道 \n\nWebRebuild.ORG官方网站，或添加微信公众帐号(webrebuildorg)进行相关操作。\n\n###交流会背景\n\nWebRebuild.ORG 成立于2007年，由互联网前端业界人员自发起的一个交流会组织，从深圳扩散至全国，旨在推动互联网前端web标准技术在中国的发展，致力于为同行从业者提供一个分享交流的平台，提升从业者的影响力及技术能力储备，并向发展成为推动中国互联网前端web标准技术的非盈利性组织的目标而努力。\n\n从2007年至今，WebRebuild.ORG得到了W3C中国、Google中国、腾讯、迅雷、网易、欢聚时代、百家筝鸣古筝教育集团等企业组织、同行及会议组委志愿者的大力支持与帮助，已成为中国前端盛大的行业盛会之一。\n\n广州、上海、北京、成都地区更多详细信息及参会报名请访问WebRebuild官方网站查阅：[http://www.webrebuild.org](http://www.webrebuild.org)或收听WebRebuild微信公众帐号（webrebuildorg）获取最新信息。\n\n","slug":"web-rebuild-party","published":1,"updated":"2018-05-30T08:12:15.853Z","photos":[],"link":"","_id":"cjhubytk00019yis520hp2c0x","content":"<p><img src=\"/files/2013/10/jbfuimM2CvFvuU.jpg\" alt=\"蜕变·WebRebuild 2013 前端年度交流盛会邀请\"></p>\n<p>互联网web前端设计行业通过一段时期的茧封或焰炼，web技术使行业、企业及自身发生质的改变。痛苦的蜕变是成长的契机，在彼此互相冲击、交流、融合的对话下，将以尊重包容互助合作同步发展的心态，对行业蜕变、自我提升的过程分享自己的观点进行探讨。</p>\n<p>2013，本届主题为“蜕变”的前端技术年度交流会已是第七届，依然如往年在深圳、广州、上海、北京、成都五地举行，腾讯ecd联合WebRebuild.ORG、深圳大学文化产业研究院、迅雷CUED主办了第七届前端年度交流会“蜕变”首站 － 深圳站，将于10月26日上午9点在深圳大学拉开帷幕。</p>\n<p>###交流会形式 </p>\n<p>web前端设计主题分享、现场来宾主题交流对话探讨。</p>\n<p>###会议进行时间 </p>\n<p>2013年10月26日（周六）上午 9:00</p>\n<p>###会议地点 </p>\n<p>深圳市南山区深圳大学科技楼一号报告厅。</p>\n<p>###邀请参会对象 </p>\n<p>互联网web前端/设计从业者及相关专业、兴趣的学生。</p>\n<p>###报名渠道 </p>\n<p>WebRebuild.ORG官方网站，或添加微信公众帐号(webrebuildorg)进行相关操作。</p>\n<p>###交流会背景</p>\n<p>WebRebuild.ORG 成立于2007年，由互联网前端业界人员自发起的一个交流会组织，从深圳扩散至全国，旨在推动互联网前端web标准技术在中国的发展，致力于为同行从业者提供一个分享交流的平台，提升从业者的影响力及技术能力储备，并向发展成为推动中国互联网前端web标准技术的非盈利性组织的目标而努力。</p>\n<p>从2007年至今，WebRebuild.ORG得到了W3C中国、Google中国、腾讯、迅雷、网易、欢聚时代、百家筝鸣古筝教育集团等企业组织、同行及会议组委志愿者的大力支持与帮助，已成为中国前端盛大的行业盛会之一。</p>\n<p>广州、上海、北京、成都地区更多详细信息及参会报名请访问WebRebuild官方网站查阅：<a href=\"http://www.webrebuild.org\" target=\"_blank\" rel=\"noopener\">http://www.webrebuild.org</a>或收听WebRebuild微信公众帐号（webrebuildorg）获取最新信息。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/files/2013/10/jbfuimM2CvFvuU.jpg\" alt=\"蜕变·WebRebuild 2013 前端年度交流盛会邀请\"></p>\n<p>互联网web前端设计行业通过一段时期的茧封或焰炼，web技术使行业、企业及自身发生质的改变。痛苦的蜕变是成长的契机，在彼此互相冲击、交流、融合的对话下，将以尊重包容互助合作同步发展的心态，对行业蜕变、自我提升的过程分享自己的观点进行探讨。</p>\n<p>2013，本届主题为“蜕变”的前端技术年度交流会已是第七届，依然如往年在深圳、广州、上海、北京、成都五地举行，腾讯ecd联合WebRebuild.ORG、深圳大学文化产业研究院、迅雷CUED主办了第七届前端年度交流会“蜕变”首站 － 深圳站，将于10月26日上午9点在深圳大学拉开帷幕。</p>\n<p>###交流会形式 </p>\n<p>web前端设计主题分享、现场来宾主题交流对话探讨。</p>\n<p>###会议进行时间 </p>\n<p>2013年10月26日（周六）上午 9:00</p>\n<p>###会议地点 </p>\n<p>深圳市南山区深圳大学科技楼一号报告厅。</p>\n<p>###邀请参会对象 </p>\n<p>互联网web前端/设计从业者及相关专业、兴趣的学生。</p>\n<p>###报名渠道 </p>\n<p>WebRebuild.ORG官方网站，或添加微信公众帐号(webrebuildorg)进行相关操作。</p>\n<p>###交流会背景</p>\n<p>WebRebuild.ORG 成立于2007年，由互联网前端业界人员自发起的一个交流会组织，从深圳扩散至全国，旨在推动互联网前端web标准技术在中国的发展，致力于为同行从业者提供一个分享交流的平台，提升从业者的影响力及技术能力储备，并向发展成为推动中国互联网前端web标准技术的非盈利性组织的目标而努力。</p>\n<p>从2007年至今，WebRebuild.ORG得到了W3C中国、Google中国、腾讯、迅雷、网易、欢聚时代、百家筝鸣古筝教育集团等企业组织、同行及会议组委志愿者的大力支持与帮助，已成为中国前端盛大的行业盛会之一。</p>\n<p>广州、上海、北京、成都地区更多详细信息及参会报名请访问WebRebuild官方网站查阅：<a href=\"http://www.webrebuild.org\" target=\"_blank\" rel=\"noopener\">http://www.webrebuild.org</a>或收听WebRebuild微信公众帐号（webrebuildorg）获取最新信息。</p>\n"},{"layout":"post","title":"阿里前端的困局与突围(转)","date":"2013-10-23T15:39:00.000Z","comments":1,"_content":"\n最近发了两条微博： 想起克军的一句话：前端研究，研究个屁~ 的确如此呀。补充下联：前端设计，设计个屁~ 前端目前最大的困境是，如 HTML 一样，无论你承不承认，市场上并不太需要 HTML 高手。 微博上的回复大部分歪楼了。上面两句话乍看有点激进，却是我的真实想法。\n\n###背后是一个问题：\n\n前端的价值究竟是什么？未来应该如何发展？\n\n###前端的价值\n\n如果你刚入行，或者从事专职前端工作未满 3 年，请忽略上面这个问题，并且尽量不要再往下看了。\n\n我知道你会忍不住往下看，那就看吧。负能量有时也是正能量。真实面对所做的事，如实面对自己的真心，这是迟早的。有过痛，才真正懂得乐。\n\n特别注意，下面说的前端，都是阿里的前端，其他公司切勿对号入座，每个公司的情况都不同。每个公司，前端的定位也会有差异。\n\n阿里的前端，目前主要分两种：一种在 UX / UED 部门，另一种在技术部门，所做的事大同小异，都是负责界面交互层的开发。上游是 PD、交互、视觉等，下游是后端开发人员、测试等。技能主要是 HTML、CSS、JavaScript，有些前端团队比如支付宝还直接负责 Velocity 等模板层的开发。这是阿里目前前端的现状。\n\n前端是后端数据的第一消费者，也是最贴近用户的程序员。\n\n一切看起来很美。\n\n前端的价值在哪呢？很多人会回答：\n\n- 实现界面交互。\n- 提升用户体验。\n\n第一点是前端的本职工作，也是前端岗位存在的原因。第二点也不多说，前端做得好，对用户体验是有益的。\n\n让人纠结的，是前端有价值，可是，这价值真的很重要吗？真的值得做为一个职业投入一辈子吗？做技术的，可能都会有类似纠结。但传统技术，纠结相对少点。比如搞数据库的，有一堆牛人榜样，搞网络、安全等等的，也是如此。这个现实的背后，是因为：\n\n这批传统技术的背后，无论是数据库底层优化，还是网络优化、安全防范等等，做得好，对业务都能直接产生影响，比如大幅度降低硬件成本等等。 价值是直接的，可见的，不太会被质疑。\n\n然而前端的价值，没有人会直接否认，但看得明白的，都知道： 淘宝的核心用户体验，并非是 UI 层面带来的，而是 C2C 的模式，是同等品质下商品的价格，还有支付宝的便捷等等。前端的确很重要，但真的，也就那么着。比如京东，很多交互细节做得其实不咋的，但京东靠着靠谱的物流、货到付款等方式提升了整体购物体验。对阿里来说，用户体验非常非常重要，但前端在用户体验层面能做的其实很少很少。\n\n###一个事实：\n\n把国内大部分公司的 UX 部门解散掉，也不会太影响产品的体验。在国内，UX 主要还是起到美工的作用，虽然我不想承认。\n\n前端依旧是美工，而且仅仅是实现工。\n\n在阿里，我们不得不承认一个事实：**前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。** 在阿里，虽然前端的工作已经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。\n\n###前端的未来发展\n\n前端，往后是技术，往前是体验。我的理解，前端的未来发展，有两个方向：\n\n前后端体系的融合，技术平台化。 范例是 Google、Facebook 等公司的技术体系，不细分前后端，都是 Web Developer，在整套技术平台上，Developer 都可以从后到前高效开发。技术平台本身由 Engineer 维护，有各个领域的高手，包括前端的。\n\n前端技术带来的体验革新，成为某些产品的核心竞争力。 典型的比如 Path，国外有很多创新型项目，体验是核心竞争力之一。在这类产品中， 前端带来的用户体验很关键。\n\n然而，上面两个方向，在阿里的现状下，困难重重：\n\n技术平台化之路很难。 阿里现有的技术体系，前端只是薄薄的一层，要靠这薄薄的一层，来渗透甚至改革现有前后端开发模式，非常困难。支付宝算是走在前面，已经摸索了一年多，但越来越觉得，前端的绝大部分问题，其实都需要后端才能解决。去跨团队推动也可以，因为难，所以前行也挺有挑战挺有意义。可是，更悲催的事实是，技术平台化，前后端开发模式的融合，目前来看，并不是阿里的痛点，还没有到这一步，没这个强烈需求。需求不强烈，意味着缺了“天时”。很希望我的想法是错的。前后端的技术平台化之路，还有一个很现实的问题是，马云留下的隐患：平凡的人去做非凡的事。虽然现在有意不提这句话了。这句话很伤人，特别是技术人员，然而事实就是事实。即便技术平台能建成，在平台之上，阿里现有的开发人员，无论是前端还是后端，很多人可能还欠缺了不少能力。Facebook、Google 等玩起来，有个重要因素是精英文化。这话题不多说。现实的残酷，虽然也有方法是改变。\n\n体验创新之路也非常难。 在淘系可能相对好点，在支付宝，前几年首要的问题是安全、稳定，接下来几年之内，依旧是安全、稳定。创新受产品形态的影响非常大，没有一个好的产品，妄谈创新。可以有不少微创新，可以有很多小而美，但目前都触不到痛点，隔靴搔痒。真正承担阿里用户体验的，是 CDN 团队、是数据库团队、是 PD、是运营、是大安全…… 继续希望我是错的。\n\n以上两个方向，虽然困难重重，但在一些新领域，却充满机会与希望：\n\n无线领域。 未来是属于无线的，这话说到心坎上。目前阿里的无线才起步，起步意味着百废待兴。无论是前后端的技术体系，还是产品的体验创新，在无线领域，前端的机遇与挑战都很多。并且其价值，有可能变成核心价值。这一点，希望我的判断是对的。（编者注：在阿里“移动”叫“无线”）\n\nNode.js 领域。严格来说是 JavaScript 程序员的新舞台。通过 Node，前端程序员可以摇身一变，变成传统程序员。数据库、网络、业务架构等等技术核心领域，都可以通过 JavaScript 来达成。Node 社区是迷人的。同样，希望我的判断是对的。\n\n上面的分类有点混乱，下面继续乱谈：\n\n创业。 在很多产品中，前端虽然很难产生核心价值，但在有竞争的地方，附属价值经常会成为核心竞争力。比如出去创业，如何在大量同类产品中脱颖而出，前端界面层的实现非常关键。可是，无论是淘宝，还是支付宝等，目前都已经过了初期创业期。有时真希望，易趣如果还强大着该有多好。\n\n转行。 的确，没必要因为懂 JavaScript，就一辈子做前端。没必要限定自己的发展，可以做 2-3 年前端，然后再去做 2-3 年开发，还年轻的话，可以继续尝试各种岗位，说不定，10年后，就变 CTO 了。\n\n从人的一生来看，前端只是一段很小的旅途。它能带给你我们的已经不少，舍弃惯性，脱离舒适区，长远来看才能走得更远。放弃有时也是坚持，重要的是你心中的梦是什么。\n\n###感悟与坚持\n\n纯技术上，前端目前的很多发展，只是在满足业务，并没有真正对业务带来“从无到有、促进变革”的变化。从公司的角度讲，并不需要那么多前端牛人。这是我那条说 HTML 高手是屠龙术的微博的含义。\n\n另一个角度上，前端技术这些年的变化，无论是 YUI 的发展、还是最近两三年兴起来的模块化开发理念、以及 Node.js 带来的前端工具变革、还有 Backbone 等类库背后的 MVX 的发展，这些都切实推动着前端往前发展，虽然很慢很慢，虽然短时间内很难直接影响业务价值，但我相信，这类工作的价值，也很大。\n\n一类是直接促进业务发展，一类是缓慢带动人员的成长。这两类工作，都非常有价值。一个着力于现在，一个发力于未来。\n\n看起来，路都很清楚。然而我们都是人不是神。最后以一段人与人之间的对话来结束这篇充满负能量的文章：\n\n> 章小新：有一个现实是，如果在这块上长时间的价值不被认可，那很有可能真正产出的价值没有我们想想象的大，是否是我们自己深限其中？ 有时虽然不想往这方面想，但又是不得不仔细深思的问题。\n\n> 玉伯：毕竟我们都是人，要坦诚面对自己的真心，包括贪欲。比如一个事，如果做了 5 年，依旧得不到直接认可，也没更多物质上奖励，我估计你也很难做下去了，或者就是打着酱油，干着其他有意思的事情去了。\n\n> 章小新：哈，今天的话题的确是沉了点，今天上午还和同事们讨论过~~~ 先认清自己，再从容微笑去面对。\n\n> 玉伯：从容微笑谈何容易。从容微笑的一个前提是，认清了自己，找到了今后要走的方向，知道接下来该怎么走下去。\n\n> 李牧：这么说好像我有多么淡定一样。。其实没有了。会很计较，但是现实面前了。\n\n> 玉伯：从容不是有希望，也不是在路上，而是自己喜欢自己做的事情。又变鸡汤了，不过发现很多鸡汤越来越有道理，得真心去信。真正的认可是自己给自己的。\n\n> 柏林：我不是做前端的，一直在关注大家。\n\n呵呵。看到这句话蛮有感触，要体验过鸡汤的过程，才能品味到真实的味道。（说得不好哈）\n\n（完）文 / 玉伯\n\nPS：把这篇文章发出来，很犹豫。把这些想清楚的事情说出来，虽然可能会影响团队士气，会打击工作不久的前端，但隐瞒更不可取。 前端还很年轻，如何发展，如何前行，需要所有前端们一起来思考。我们需要未来，也需要真实。我们不需要的是混日子。我们往哪里去，取决于我们自己。\n\n原文地址：[http://www.chengxuyuans.com/program_life/67632.html](http://www.chengxuyuans.com/program_life/67632.html)\n\n","source":"_posts/2013-10-23-thinking-about-frontend-future.md","raw":"---\nlayout: post\ntitle: 阿里前端的困局与突围(转)\ndate: 2013-10-23 23:39\ncomments: true\ncategories: [引用]\n---\n\n最近发了两条微博： 想起克军的一句话：前端研究，研究个屁~ 的确如此呀。补充下联：前端设计，设计个屁~ 前端目前最大的困境是，如 HTML 一样，无论你承不承认，市场上并不太需要 HTML 高手。 微博上的回复大部分歪楼了。上面两句话乍看有点激进，却是我的真实想法。\n\n###背后是一个问题：\n\n前端的价值究竟是什么？未来应该如何发展？\n\n###前端的价值\n\n如果你刚入行，或者从事专职前端工作未满 3 年，请忽略上面这个问题，并且尽量不要再往下看了。\n\n我知道你会忍不住往下看，那就看吧。负能量有时也是正能量。真实面对所做的事，如实面对自己的真心，这是迟早的。有过痛，才真正懂得乐。\n\n特别注意，下面说的前端，都是阿里的前端，其他公司切勿对号入座，每个公司的情况都不同。每个公司，前端的定位也会有差异。\n\n阿里的前端，目前主要分两种：一种在 UX / UED 部门，另一种在技术部门，所做的事大同小异，都是负责界面交互层的开发。上游是 PD、交互、视觉等，下游是后端开发人员、测试等。技能主要是 HTML、CSS、JavaScript，有些前端团队比如支付宝还直接负责 Velocity 等模板层的开发。这是阿里目前前端的现状。\n\n前端是后端数据的第一消费者，也是最贴近用户的程序员。\n\n一切看起来很美。\n\n前端的价值在哪呢？很多人会回答：\n\n- 实现界面交互。\n- 提升用户体验。\n\n第一点是前端的本职工作，也是前端岗位存在的原因。第二点也不多说，前端做得好，对用户体验是有益的。\n\n让人纠结的，是前端有价值，可是，这价值真的很重要吗？真的值得做为一个职业投入一辈子吗？做技术的，可能都会有类似纠结。但传统技术，纠结相对少点。比如搞数据库的，有一堆牛人榜样，搞网络、安全等等的，也是如此。这个现实的背后，是因为：\n\n这批传统技术的背后，无论是数据库底层优化，还是网络优化、安全防范等等，做得好，对业务都能直接产生影响，比如大幅度降低硬件成本等等。 价值是直接的，可见的，不太会被质疑。\n\n然而前端的价值，没有人会直接否认，但看得明白的，都知道： 淘宝的核心用户体验，并非是 UI 层面带来的，而是 C2C 的模式，是同等品质下商品的价格，还有支付宝的便捷等等。前端的确很重要，但真的，也就那么着。比如京东，很多交互细节做得其实不咋的，但京东靠着靠谱的物流、货到付款等方式提升了整体购物体验。对阿里来说，用户体验非常非常重要，但前端在用户体验层面能做的其实很少很少。\n\n###一个事实：\n\n把国内大部分公司的 UX 部门解散掉，也不会太影响产品的体验。在国内，UX 主要还是起到美工的作用，虽然我不想承认。\n\n前端依旧是美工，而且仅仅是实现工。\n\n在阿里，我们不得不承认一个事实：**前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。** 在阿里，虽然前端的工作已经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。\n\n###前端的未来发展\n\n前端，往后是技术，往前是体验。我的理解，前端的未来发展，有两个方向：\n\n前后端体系的融合，技术平台化。 范例是 Google、Facebook 等公司的技术体系，不细分前后端，都是 Web Developer，在整套技术平台上，Developer 都可以从后到前高效开发。技术平台本身由 Engineer 维护，有各个领域的高手，包括前端的。\n\n前端技术带来的体验革新，成为某些产品的核心竞争力。 典型的比如 Path，国外有很多创新型项目，体验是核心竞争力之一。在这类产品中， 前端带来的用户体验很关键。\n\n然而，上面两个方向，在阿里的现状下，困难重重：\n\n技术平台化之路很难。 阿里现有的技术体系，前端只是薄薄的一层，要靠这薄薄的一层，来渗透甚至改革现有前后端开发模式，非常困难。支付宝算是走在前面，已经摸索了一年多，但越来越觉得，前端的绝大部分问题，其实都需要后端才能解决。去跨团队推动也可以，因为难，所以前行也挺有挑战挺有意义。可是，更悲催的事实是，技术平台化，前后端开发模式的融合，目前来看，并不是阿里的痛点，还没有到这一步，没这个强烈需求。需求不强烈，意味着缺了“天时”。很希望我的想法是错的。前后端的技术平台化之路，还有一个很现实的问题是，马云留下的隐患：平凡的人去做非凡的事。虽然现在有意不提这句话了。这句话很伤人，特别是技术人员，然而事实就是事实。即便技术平台能建成，在平台之上，阿里现有的开发人员，无论是前端还是后端，很多人可能还欠缺了不少能力。Facebook、Google 等玩起来，有个重要因素是精英文化。这话题不多说。现实的残酷，虽然也有方法是改变。\n\n体验创新之路也非常难。 在淘系可能相对好点，在支付宝，前几年首要的问题是安全、稳定，接下来几年之内，依旧是安全、稳定。创新受产品形态的影响非常大，没有一个好的产品，妄谈创新。可以有不少微创新，可以有很多小而美，但目前都触不到痛点，隔靴搔痒。真正承担阿里用户体验的，是 CDN 团队、是数据库团队、是 PD、是运营、是大安全…… 继续希望我是错的。\n\n以上两个方向，虽然困难重重，但在一些新领域，却充满机会与希望：\n\n无线领域。 未来是属于无线的，这话说到心坎上。目前阿里的无线才起步，起步意味着百废待兴。无论是前后端的技术体系，还是产品的体验创新，在无线领域，前端的机遇与挑战都很多。并且其价值，有可能变成核心价值。这一点，希望我的判断是对的。（编者注：在阿里“移动”叫“无线”）\n\nNode.js 领域。严格来说是 JavaScript 程序员的新舞台。通过 Node，前端程序员可以摇身一变，变成传统程序员。数据库、网络、业务架构等等技术核心领域，都可以通过 JavaScript 来达成。Node 社区是迷人的。同样，希望我的判断是对的。\n\n上面的分类有点混乱，下面继续乱谈：\n\n创业。 在很多产品中，前端虽然很难产生核心价值，但在有竞争的地方，附属价值经常会成为核心竞争力。比如出去创业，如何在大量同类产品中脱颖而出，前端界面层的实现非常关键。可是，无论是淘宝，还是支付宝等，目前都已经过了初期创业期。有时真希望，易趣如果还强大着该有多好。\n\n转行。 的确，没必要因为懂 JavaScript，就一辈子做前端。没必要限定自己的发展，可以做 2-3 年前端，然后再去做 2-3 年开发，还年轻的话，可以继续尝试各种岗位，说不定，10年后，就变 CTO 了。\n\n从人的一生来看，前端只是一段很小的旅途。它能带给你我们的已经不少，舍弃惯性，脱离舒适区，长远来看才能走得更远。放弃有时也是坚持，重要的是你心中的梦是什么。\n\n###感悟与坚持\n\n纯技术上，前端目前的很多发展，只是在满足业务，并没有真正对业务带来“从无到有、促进变革”的变化。从公司的角度讲，并不需要那么多前端牛人。这是我那条说 HTML 高手是屠龙术的微博的含义。\n\n另一个角度上，前端技术这些年的变化，无论是 YUI 的发展、还是最近两三年兴起来的模块化开发理念、以及 Node.js 带来的前端工具变革、还有 Backbone 等类库背后的 MVX 的发展，这些都切实推动着前端往前发展，虽然很慢很慢，虽然短时间内很难直接影响业务价值，但我相信，这类工作的价值，也很大。\n\n一类是直接促进业务发展，一类是缓慢带动人员的成长。这两类工作，都非常有价值。一个着力于现在，一个发力于未来。\n\n看起来，路都很清楚。然而我们都是人不是神。最后以一段人与人之间的对话来结束这篇充满负能量的文章：\n\n> 章小新：有一个现实是，如果在这块上长时间的价值不被认可，那很有可能真正产出的价值没有我们想想象的大，是否是我们自己深限其中？ 有时虽然不想往这方面想，但又是不得不仔细深思的问题。\n\n> 玉伯：毕竟我们都是人，要坦诚面对自己的真心，包括贪欲。比如一个事，如果做了 5 年，依旧得不到直接认可，也没更多物质上奖励，我估计你也很难做下去了，或者就是打着酱油，干着其他有意思的事情去了。\n\n> 章小新：哈，今天的话题的确是沉了点，今天上午还和同事们讨论过~~~ 先认清自己，再从容微笑去面对。\n\n> 玉伯：从容微笑谈何容易。从容微笑的一个前提是，认清了自己，找到了今后要走的方向，知道接下来该怎么走下去。\n\n> 李牧：这么说好像我有多么淡定一样。。其实没有了。会很计较，但是现实面前了。\n\n> 玉伯：从容不是有希望，也不是在路上，而是自己喜欢自己做的事情。又变鸡汤了，不过发现很多鸡汤越来越有道理，得真心去信。真正的认可是自己给自己的。\n\n> 柏林：我不是做前端的，一直在关注大家。\n\n呵呵。看到这句话蛮有感触，要体验过鸡汤的过程，才能品味到真实的味道。（说得不好哈）\n\n（完）文 / 玉伯\n\nPS：把这篇文章发出来，很犹豫。把这些想清楚的事情说出来，虽然可能会影响团队士气，会打击工作不久的前端，但隐瞒更不可取。 前端还很年轻，如何发展，如何前行，需要所有前端们一起来思考。我们需要未来，也需要真实。我们不需要的是混日子。我们往哪里去，取决于我们自己。\n\n原文地址：[http://www.chengxuyuans.com/program_life/67632.html](http://www.chengxuyuans.com/program_life/67632.html)\n\n","slug":"thinking-about-frontend-future","published":1,"updated":"2018-05-30T08:12:15.855Z","photos":[],"link":"","_id":"cjhubytk2001byis5mdo4i9mq","content":"<p>最近发了两条微博： 想起克军的一句话：前端研究，研究个屁~ 的确如此呀。补充下联：前端设计，设计个屁~ 前端目前最大的困境是，如 HTML 一样，无论你承不承认，市场上并不太需要 HTML 高手。 微博上的回复大部分歪楼了。上面两句话乍看有点激进，却是我的真实想法。</p>\n<p>###背后是一个问题：</p>\n<p>前端的价值究竟是什么？未来应该如何发展？</p>\n<p>###前端的价值</p>\n<p>如果你刚入行，或者从事专职前端工作未满 3 年，请忽略上面这个问题，并且尽量不要再往下看了。</p>\n<p>我知道你会忍不住往下看，那就看吧。负能量有时也是正能量。真实面对所做的事，如实面对自己的真心，这是迟早的。有过痛，才真正懂得乐。</p>\n<p>特别注意，下面说的前端，都是阿里的前端，其他公司切勿对号入座，每个公司的情况都不同。每个公司，前端的定位也会有差异。</p>\n<p>阿里的前端，目前主要分两种：一种在 UX / UED 部门，另一种在技术部门，所做的事大同小异，都是负责界面交互层的开发。上游是 PD、交互、视觉等，下游是后端开发人员、测试等。技能主要是 HTML、CSS、JavaScript，有些前端团队比如支付宝还直接负责 Velocity 等模板层的开发。这是阿里目前前端的现状。</p>\n<p>前端是后端数据的第一消费者，也是最贴近用户的程序员。</p>\n<p>一切看起来很美。</p>\n<p>前端的价值在哪呢？很多人会回答：</p>\n<ul>\n<li>实现界面交互。</li>\n<li>提升用户体验。</li>\n</ul>\n<p>第一点是前端的本职工作，也是前端岗位存在的原因。第二点也不多说，前端做得好，对用户体验是有益的。</p>\n<p>让人纠结的，是前端有价值，可是，这价值真的很重要吗？真的值得做为一个职业投入一辈子吗？做技术的，可能都会有类似纠结。但传统技术，纠结相对少点。比如搞数据库的，有一堆牛人榜样，搞网络、安全等等的，也是如此。这个现实的背后，是因为：</p>\n<p>这批传统技术的背后，无论是数据库底层优化，还是网络优化、安全防范等等，做得好，对业务都能直接产生影响，比如大幅度降低硬件成本等等。 价值是直接的，可见的，不太会被质疑。</p>\n<p>然而前端的价值，没有人会直接否认，但看得明白的，都知道： 淘宝的核心用户体验，并非是 UI 层面带来的，而是 C2C 的模式，是同等品质下商品的价格，还有支付宝的便捷等等。前端的确很重要，但真的，也就那么着。比如京东，很多交互细节做得其实不咋的，但京东靠着靠谱的物流、货到付款等方式提升了整体购物体验。对阿里来说，用户体验非常非常重要，但前端在用户体验层面能做的其实很少很少。</p>\n<p>###一个事实：</p>\n<p>把国内大部分公司的 UX 部门解散掉，也不会太影响产品的体验。在国内，UX 主要还是起到美工的作用，虽然我不想承认。</p>\n<p>前端依旧是美工，而且仅仅是实现工。</p>\n<p>在阿里，我们不得不承认一个事实：<strong>前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。</strong> 在阿里，虽然前端的工作已经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。</p>\n<p>###前端的未来发展</p>\n<p>前端，往后是技术，往前是体验。我的理解，前端的未来发展，有两个方向：</p>\n<p>前后端体系的融合，技术平台化。 范例是 Google、Facebook 等公司的技术体系，不细分前后端，都是 Web Developer，在整套技术平台上，Developer 都可以从后到前高效开发。技术平台本身由 Engineer 维护，有各个领域的高手，包括前端的。</p>\n<p>前端技术带来的体验革新，成为某些产品的核心竞争力。 典型的比如 Path，国外有很多创新型项目，体验是核心竞争力之一。在这类产品中， 前端带来的用户体验很关键。</p>\n<p>然而，上面两个方向，在阿里的现状下，困难重重：</p>\n<p>技术平台化之路很难。 阿里现有的技术体系，前端只是薄薄的一层，要靠这薄薄的一层，来渗透甚至改革现有前后端开发模式，非常困难。支付宝算是走在前面，已经摸索了一年多，但越来越觉得，前端的绝大部分问题，其实都需要后端才能解决。去跨团队推动也可以，因为难，所以前行也挺有挑战挺有意义。可是，更悲催的事实是，技术平台化，前后端开发模式的融合，目前来看，并不是阿里的痛点，还没有到这一步，没这个强烈需求。需求不强烈，意味着缺了“天时”。很希望我的想法是错的。前后端的技术平台化之路，还有一个很现实的问题是，马云留下的隐患：平凡的人去做非凡的事。虽然现在有意不提这句话了。这句话很伤人，特别是技术人员，然而事实就是事实。即便技术平台能建成，在平台之上，阿里现有的开发人员，无论是前端还是后端，很多人可能还欠缺了不少能力。Facebook、Google 等玩起来，有个重要因素是精英文化。这话题不多说。现实的残酷，虽然也有方法是改变。</p>\n<p>体验创新之路也非常难。 在淘系可能相对好点，在支付宝，前几年首要的问题是安全、稳定，接下来几年之内，依旧是安全、稳定。创新受产品形态的影响非常大，没有一个好的产品，妄谈创新。可以有不少微创新，可以有很多小而美，但目前都触不到痛点，隔靴搔痒。真正承担阿里用户体验的，是 CDN 团队、是数据库团队、是 PD、是运营、是大安全…… 继续希望我是错的。</p>\n<p>以上两个方向，虽然困难重重，但在一些新领域，却充满机会与希望：</p>\n<p>无线领域。 未来是属于无线的，这话说到心坎上。目前阿里的无线才起步，起步意味着百废待兴。无论是前后端的技术体系，还是产品的体验创新，在无线领域，前端的机遇与挑战都很多。并且其价值，有可能变成核心价值。这一点，希望我的判断是对的。（编者注：在阿里“移动”叫“无线”）</p>\n<p>Node.js 领域。严格来说是 JavaScript 程序员的新舞台。通过 Node，前端程序员可以摇身一变，变成传统程序员。数据库、网络、业务架构等等技术核心领域，都可以通过 JavaScript 来达成。Node 社区是迷人的。同样，希望我的判断是对的。</p>\n<p>上面的分类有点混乱，下面继续乱谈：</p>\n<p>创业。 在很多产品中，前端虽然很难产生核心价值，但在有竞争的地方，附属价值经常会成为核心竞争力。比如出去创业，如何在大量同类产品中脱颖而出，前端界面层的实现非常关键。可是，无论是淘宝，还是支付宝等，目前都已经过了初期创业期。有时真希望，易趣如果还强大着该有多好。</p>\n<p>转行。 的确，没必要因为懂 JavaScript，就一辈子做前端。没必要限定自己的发展，可以做 2-3 年前端，然后再去做 2-3 年开发，还年轻的话，可以继续尝试各种岗位，说不定，10年后，就变 CTO 了。</p>\n<p>从人的一生来看，前端只是一段很小的旅途。它能带给你我们的已经不少，舍弃惯性，脱离舒适区，长远来看才能走得更远。放弃有时也是坚持，重要的是你心中的梦是什么。</p>\n<p>###感悟与坚持</p>\n<p>纯技术上，前端目前的很多发展，只是在满足业务，并没有真正对业务带来“从无到有、促进变革”的变化。从公司的角度讲，并不需要那么多前端牛人。这是我那条说 HTML 高手是屠龙术的微博的含义。</p>\n<p>另一个角度上，前端技术这些年的变化，无论是 YUI 的发展、还是最近两三年兴起来的模块化开发理念、以及 Node.js 带来的前端工具变革、还有 Backbone 等类库背后的 MVX 的发展，这些都切实推动着前端往前发展，虽然很慢很慢，虽然短时间内很难直接影响业务价值，但我相信，这类工作的价值，也很大。</p>\n<p>一类是直接促进业务发展，一类是缓慢带动人员的成长。这两类工作，都非常有价值。一个着力于现在，一个发力于未来。</p>\n<p>看起来，路都很清楚。然而我们都是人不是神。最后以一段人与人之间的对话来结束这篇充满负能量的文章：</p>\n<blockquote>\n<p>章小新：有一个现实是，如果在这块上长时间的价值不被认可，那很有可能真正产出的价值没有我们想想象的大，是否是我们自己深限其中？ 有时虽然不想往这方面想，但又是不得不仔细深思的问题。</p>\n</blockquote>\n<blockquote>\n<p>玉伯：毕竟我们都是人，要坦诚面对自己的真心，包括贪欲。比如一个事，如果做了 5 年，依旧得不到直接认可，也没更多物质上奖励，我估计你也很难做下去了，或者就是打着酱油，干着其他有意思的事情去了。</p>\n</blockquote>\n<blockquote>\n<p>章小新：哈，今天的话题的确是沉了点，今天上午还和同事们讨论过~~~ 先认清自己，再从容微笑去面对。</p>\n</blockquote>\n<blockquote>\n<p>玉伯：从容微笑谈何容易。从容微笑的一个前提是，认清了自己，找到了今后要走的方向，知道接下来该怎么走下去。</p>\n</blockquote>\n<blockquote>\n<p>李牧：这么说好像我有多么淡定一样。。其实没有了。会很计较，但是现实面前了。</p>\n</blockquote>\n<blockquote>\n<p>玉伯：从容不是有希望，也不是在路上，而是自己喜欢自己做的事情。又变鸡汤了，不过发现很多鸡汤越来越有道理，得真心去信。真正的认可是自己给自己的。</p>\n</blockquote>\n<blockquote>\n<p>柏林：我不是做前端的，一直在关注大家。</p>\n</blockquote>\n<p>呵呵。看到这句话蛮有感触，要体验过鸡汤的过程，才能品味到真实的味道。（说得不好哈）</p>\n<p>（完）文 / 玉伯</p>\n<p>PS：把这篇文章发出来，很犹豫。把这些想清楚的事情说出来，虽然可能会影响团队士气，会打击工作不久的前端，但隐瞒更不可取。 前端还很年轻，如何发展，如何前行，需要所有前端们一起来思考。我们需要未来，也需要真实。我们不需要的是混日子。我们往哪里去，取决于我们自己。</p>\n<p>原文地址：<a href=\"http://www.chengxuyuans.com/program_life/67632.html\" target=\"_blank\" rel=\"noopener\">http://www.chengxuyuans.com/program_life/67632.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近发了两条微博： 想起克军的一句话：前端研究，研究个屁~ 的确如此呀。补充下联：前端设计，设计个屁~ 前端目前最大的困境是，如 HTML 一样，无论你承不承认，市场上并不太需要 HTML 高手。 微博上的回复大部分歪楼了。上面两句话乍看有点激进，却是我的真实想法。</p>\n<p>###背后是一个问题：</p>\n<p>前端的价值究竟是什么？未来应该如何发展？</p>\n<p>###前端的价值</p>\n<p>如果你刚入行，或者从事专职前端工作未满 3 年，请忽略上面这个问题，并且尽量不要再往下看了。</p>\n<p>我知道你会忍不住往下看，那就看吧。负能量有时也是正能量。真实面对所做的事，如实面对自己的真心，这是迟早的。有过痛，才真正懂得乐。</p>\n<p>特别注意，下面说的前端，都是阿里的前端，其他公司切勿对号入座，每个公司的情况都不同。每个公司，前端的定位也会有差异。</p>\n<p>阿里的前端，目前主要分两种：一种在 UX / UED 部门，另一种在技术部门，所做的事大同小异，都是负责界面交互层的开发。上游是 PD、交互、视觉等，下游是后端开发人员、测试等。技能主要是 HTML、CSS、JavaScript，有些前端团队比如支付宝还直接负责 Velocity 等模板层的开发。这是阿里目前前端的现状。</p>\n<p>前端是后端数据的第一消费者，也是最贴近用户的程序员。</p>\n<p>一切看起来很美。</p>\n<p>前端的价值在哪呢？很多人会回答：</p>\n<ul>\n<li>实现界面交互。</li>\n<li>提升用户体验。</li>\n</ul>\n<p>第一点是前端的本职工作，也是前端岗位存在的原因。第二点也不多说，前端做得好，对用户体验是有益的。</p>\n<p>让人纠结的，是前端有价值，可是，这价值真的很重要吗？真的值得做为一个职业投入一辈子吗？做技术的，可能都会有类似纠结。但传统技术，纠结相对少点。比如搞数据库的，有一堆牛人榜样，搞网络、安全等等的，也是如此。这个现实的背后，是因为：</p>\n<p>这批传统技术的背后，无论是数据库底层优化，还是网络优化、安全防范等等，做得好，对业务都能直接产生影响，比如大幅度降低硬件成本等等。 价值是直接的，可见的，不太会被质疑。</p>\n<p>然而前端的价值，没有人会直接否认，但看得明白的，都知道： 淘宝的核心用户体验，并非是 UI 层面带来的，而是 C2C 的模式，是同等品质下商品的价格，还有支付宝的便捷等等。前端的确很重要，但真的，也就那么着。比如京东，很多交互细节做得其实不咋的，但京东靠着靠谱的物流、货到付款等方式提升了整体购物体验。对阿里来说，用户体验非常非常重要，但前端在用户体验层面能做的其实很少很少。</p>\n<p>###一个事实：</p>\n<p>把国内大部分公司的 UX 部门解散掉，也不会太影响产品的体验。在国内，UX 主要还是起到美工的作用，虽然我不想承认。</p>\n<p>前端依旧是美工，而且仅仅是实现工。</p>\n<p>在阿里，我们不得不承认一个事实：<strong>前端的确有价值，但放在全局来看，前端产生的价值并非核心价值。</strong> 在阿里，虽然前端的工作已经不可或缺，但对大公司而言，不可或缺的岗位多了去呢，不可或缺不代表有核心价值，我就不说了。</p>\n<p>###前端的未来发展</p>\n<p>前端，往后是技术，往前是体验。我的理解，前端的未来发展，有两个方向：</p>\n<p>前后端体系的融合，技术平台化。 范例是 Google、Facebook 等公司的技术体系，不细分前后端，都是 Web Developer，在整套技术平台上，Developer 都可以从后到前高效开发。技术平台本身由 Engineer 维护，有各个领域的高手，包括前端的。</p>\n<p>前端技术带来的体验革新，成为某些产品的核心竞争力。 典型的比如 Path，国外有很多创新型项目，体验是核心竞争力之一。在这类产品中， 前端带来的用户体验很关键。</p>\n<p>然而，上面两个方向，在阿里的现状下，困难重重：</p>\n<p>技术平台化之路很难。 阿里现有的技术体系，前端只是薄薄的一层，要靠这薄薄的一层，来渗透甚至改革现有前后端开发模式，非常困难。支付宝算是走在前面，已经摸索了一年多，但越来越觉得，前端的绝大部分问题，其实都需要后端才能解决。去跨团队推动也可以，因为难，所以前行也挺有挑战挺有意义。可是，更悲催的事实是，技术平台化，前后端开发模式的融合，目前来看，并不是阿里的痛点，还没有到这一步，没这个强烈需求。需求不强烈，意味着缺了“天时”。很希望我的想法是错的。前后端的技术平台化之路，还有一个很现实的问题是，马云留下的隐患：平凡的人去做非凡的事。虽然现在有意不提这句话了。这句话很伤人，特别是技术人员，然而事实就是事实。即便技术平台能建成，在平台之上，阿里现有的开发人员，无论是前端还是后端，很多人可能还欠缺了不少能力。Facebook、Google 等玩起来，有个重要因素是精英文化。这话题不多说。现实的残酷，虽然也有方法是改变。</p>\n<p>体验创新之路也非常难。 在淘系可能相对好点，在支付宝，前几年首要的问题是安全、稳定，接下来几年之内，依旧是安全、稳定。创新受产品形态的影响非常大，没有一个好的产品，妄谈创新。可以有不少微创新，可以有很多小而美，但目前都触不到痛点，隔靴搔痒。真正承担阿里用户体验的，是 CDN 团队、是数据库团队、是 PD、是运营、是大安全…… 继续希望我是错的。</p>\n<p>以上两个方向，虽然困难重重，但在一些新领域，却充满机会与希望：</p>\n<p>无线领域。 未来是属于无线的，这话说到心坎上。目前阿里的无线才起步，起步意味着百废待兴。无论是前后端的技术体系，还是产品的体验创新，在无线领域，前端的机遇与挑战都很多。并且其价值，有可能变成核心价值。这一点，希望我的判断是对的。（编者注：在阿里“移动”叫“无线”）</p>\n<p>Node.js 领域。严格来说是 JavaScript 程序员的新舞台。通过 Node，前端程序员可以摇身一变，变成传统程序员。数据库、网络、业务架构等等技术核心领域，都可以通过 JavaScript 来达成。Node 社区是迷人的。同样，希望我的判断是对的。</p>\n<p>上面的分类有点混乱，下面继续乱谈：</p>\n<p>创业。 在很多产品中，前端虽然很难产生核心价值，但在有竞争的地方，附属价值经常会成为核心竞争力。比如出去创业，如何在大量同类产品中脱颖而出，前端界面层的实现非常关键。可是，无论是淘宝，还是支付宝等，目前都已经过了初期创业期。有时真希望，易趣如果还强大着该有多好。</p>\n<p>转行。 的确，没必要因为懂 JavaScript，就一辈子做前端。没必要限定自己的发展，可以做 2-3 年前端，然后再去做 2-3 年开发，还年轻的话，可以继续尝试各种岗位，说不定，10年后，就变 CTO 了。</p>\n<p>从人的一生来看，前端只是一段很小的旅途。它能带给你我们的已经不少，舍弃惯性，脱离舒适区，长远来看才能走得更远。放弃有时也是坚持，重要的是你心中的梦是什么。</p>\n<p>###感悟与坚持</p>\n<p>纯技术上，前端目前的很多发展，只是在满足业务，并没有真正对业务带来“从无到有、促进变革”的变化。从公司的角度讲，并不需要那么多前端牛人。这是我那条说 HTML 高手是屠龙术的微博的含义。</p>\n<p>另一个角度上，前端技术这些年的变化，无论是 YUI 的发展、还是最近两三年兴起来的模块化开发理念、以及 Node.js 带来的前端工具变革、还有 Backbone 等类库背后的 MVX 的发展，这些都切实推动着前端往前发展，虽然很慢很慢，虽然短时间内很难直接影响业务价值，但我相信，这类工作的价值，也很大。</p>\n<p>一类是直接促进业务发展，一类是缓慢带动人员的成长。这两类工作，都非常有价值。一个着力于现在，一个发力于未来。</p>\n<p>看起来，路都很清楚。然而我们都是人不是神。最后以一段人与人之间的对话来结束这篇充满负能量的文章：</p>\n<blockquote>\n<p>章小新：有一个现实是，如果在这块上长时间的价值不被认可，那很有可能真正产出的价值没有我们想想象的大，是否是我们自己深限其中？ 有时虽然不想往这方面想，但又是不得不仔细深思的问题。</p>\n</blockquote>\n<blockquote>\n<p>玉伯：毕竟我们都是人，要坦诚面对自己的真心，包括贪欲。比如一个事，如果做了 5 年，依旧得不到直接认可，也没更多物质上奖励，我估计你也很难做下去了，或者就是打着酱油，干着其他有意思的事情去了。</p>\n</blockquote>\n<blockquote>\n<p>章小新：哈，今天的话题的确是沉了点，今天上午还和同事们讨论过~~~ 先认清自己，再从容微笑去面对。</p>\n</blockquote>\n<blockquote>\n<p>玉伯：从容微笑谈何容易。从容微笑的一个前提是，认清了自己，找到了今后要走的方向，知道接下来该怎么走下去。</p>\n</blockquote>\n<blockquote>\n<p>李牧：这么说好像我有多么淡定一样。。其实没有了。会很计较，但是现实面前了。</p>\n</blockquote>\n<blockquote>\n<p>玉伯：从容不是有希望，也不是在路上，而是自己喜欢自己做的事情。又变鸡汤了，不过发现很多鸡汤越来越有道理，得真心去信。真正的认可是自己给自己的。</p>\n</blockquote>\n<blockquote>\n<p>柏林：我不是做前端的，一直在关注大家。</p>\n</blockquote>\n<p>呵呵。看到这句话蛮有感触，要体验过鸡汤的过程，才能品味到真实的味道。（说得不好哈）</p>\n<p>（完）文 / 玉伯</p>\n<p>PS：把这篇文章发出来，很犹豫。把这些想清楚的事情说出来，虽然可能会影响团队士气，会打击工作不久的前端，但隐瞒更不可取。 前端还很年轻，如何发展，如何前行，需要所有前端们一起来思考。我们需要未来，也需要真实。我们不需要的是混日子。我们往哪里去，取决于我们自己。</p>\n<p>原文地址：<a href=\"http://www.chengxuyuans.com/program_life/67632.html\" target=\"_blank\" rel=\"noopener\">http://www.chengxuyuans.com/program_life/67632.html</a></p>\n"},{"layout":"post","title":"移动开发总结（转）","date":"2013-11-20T12:56:00.000Z","comments":1,"_content":"\n1、低版本Android下input有CSS3动画会让输入框失去焦点，解决办法是低版本Android下去掉所有CSS3动画。 .ua-ios .ipt{-webkit-transition:all .5s;-moz-transition:all .5s;-o-transition:all .5s;-ms-transition:all .5s;transition:all .5s} .ua-oldAndroid .ipt {-webkit-transition:none;-moz-transition:none;-o-transition:none;-ms-transition:none;transition:none;}\n\n2、-webkit-user-modify: read-write-plaintext-only; 作用是去掉输入框聚焦时候的白色背景 ； 但是这里有一个问题，Android4.0以上的系统，当软键盘激活出来的时候read-write-plaintext-only的输入框不会居中在屏幕中间，这里需要根据实际情况进行取舍。\n\n3、translate3d可以让IOS启用硬件渲染，动画效果会更加流畅，基本上能解决所有抖动；但在Android下带来新的问题——只要页面里面有节点拥有transform属性，输入框都会不正常（聚焦不正常、输入时上下抖动等），此外还会导致节点渲染变慢（如点击出下啦菜单渲染缓慢）。 再次强调CSS3的动画、投影在Android下尽量避免。 .ua-ios .mail-list .list-item, .ua-ios .menu-item, .ua-ios .menu-split{ -webkit-transform: translate3d(0,0,0); transform: translate3d(0,0,0); }\n\n4、Android 2.3.7 下不加透明border，会导致溢出隐藏失效。 .atts .att-preview{overflow:hidden;width:50px;height:50px;border:1px solid transparent;}\n\n5、IOS下fixed定位（比如框架顶部提示信息），当键盘收起的时候会有残影：fixed元素不会随着键盘收起而移动到页面顶部，而是保持在页面中间，需要hack改成绝对定位。 .frame-tips{position:fixed;z-index:30;left:0;top:0} .ua-ios .frame-tips{position: absolute}\n\n6、在iPad1等低版ios下，opacity和其他属性一起改变，会导致transition中重复执行三次，所以要么只改变opacity实现淡入淡出，要么只改变非opacity属性。 .mRead-reply .btn{position:absolute;right:0;top:0;/opacity:0;/overflow:hidden;display:block;width:64px}\n\n7、在Android4.1下，如果textarea聚焦的时候，其高度或者其兄弟节点的高度产生变化，那么textarea就会被软键盘挡住而不会自动调整位置，这里需要去掉所有效果，默认显示输入框展开状态。所以Android下尽量不要在textarea和input上做动画。\n\n8、Android下div的高度设置成100%，同时设置其overflow:auto;那么滚动条就会出现在这个div上面。 这个时候会出现抖动，所以建议Android下页面的滚动能且只能出现在body节点上面！\n\n原文章地址：[http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/](http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/)\n","source":"_posts/2013-11-20-html5-and-css3-for-mobile-development.md","raw":"---\nlayout: post\ntitle: 移动开发总结（转）\ndate: 2013-11-20 20:56\ncomments: true\ncategories: [引用]\n---\n\n1、低版本Android下input有CSS3动画会让输入框失去焦点，解决办法是低版本Android下去掉所有CSS3动画。 .ua-ios .ipt{-webkit-transition:all .5s;-moz-transition:all .5s;-o-transition:all .5s;-ms-transition:all .5s;transition:all .5s} .ua-oldAndroid .ipt {-webkit-transition:none;-moz-transition:none;-o-transition:none;-ms-transition:none;transition:none;}\n\n2、-webkit-user-modify: read-write-plaintext-only; 作用是去掉输入框聚焦时候的白色背景 ； 但是这里有一个问题，Android4.0以上的系统，当软键盘激活出来的时候read-write-plaintext-only的输入框不会居中在屏幕中间，这里需要根据实际情况进行取舍。\n\n3、translate3d可以让IOS启用硬件渲染，动画效果会更加流畅，基本上能解决所有抖动；但在Android下带来新的问题——只要页面里面有节点拥有transform属性，输入框都会不正常（聚焦不正常、输入时上下抖动等），此外还会导致节点渲染变慢（如点击出下啦菜单渲染缓慢）。 再次强调CSS3的动画、投影在Android下尽量避免。 .ua-ios .mail-list .list-item, .ua-ios .menu-item, .ua-ios .menu-split{ -webkit-transform: translate3d(0,0,0); transform: translate3d(0,0,0); }\n\n4、Android 2.3.7 下不加透明border，会导致溢出隐藏失效。 .atts .att-preview{overflow:hidden;width:50px;height:50px;border:1px solid transparent;}\n\n5、IOS下fixed定位（比如框架顶部提示信息），当键盘收起的时候会有残影：fixed元素不会随着键盘收起而移动到页面顶部，而是保持在页面中间，需要hack改成绝对定位。 .frame-tips{position:fixed;z-index:30;left:0;top:0} .ua-ios .frame-tips{position: absolute}\n\n6、在iPad1等低版ios下，opacity和其他属性一起改变，会导致transition中重复执行三次，所以要么只改变opacity实现淡入淡出，要么只改变非opacity属性。 .mRead-reply .btn{position:absolute;right:0;top:0;/opacity:0;/overflow:hidden;display:block;width:64px}\n\n7、在Android4.1下，如果textarea聚焦的时候，其高度或者其兄弟节点的高度产生变化，那么textarea就会被软键盘挡住而不会自动调整位置，这里需要去掉所有效果，默认显示输入框展开状态。所以Android下尽量不要在textarea和input上做动画。\n\n8、Android下div的高度设置成100%，同时设置其overflow:auto;那么滚动条就会出现在这个div上面。 这个时候会出现抖动，所以建议Android下页面的滚动能且只能出现在body节点上面！\n\n原文章地址：[http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/](http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/)\n","slug":"html5-and-css3-for-mobile-development","published":1,"updated":"2018-05-30T08:12:15.856Z","photos":[],"link":"","_id":"cjhubytk4001eyis5opjd24xh","content":"<p>1、低版本Android下input有CSS3动画会让输入框失去焦点，解决办法是低版本Android下去掉所有CSS3动画。 .ua-ios .ipt{-webkit-transition:all .5s;-moz-transition:all .5s;-o-transition:all .5s;-ms-transition:all .5s;transition:all .5s} .ua-oldAndroid .ipt {-webkit-transition:none;-moz-transition:none;-o-transition:none;-ms-transition:none;transition:none;}</p>\n<p>2、-webkit-user-modify: read-write-plaintext-only; 作用是去掉输入框聚焦时候的白色背景 ； 但是这里有一个问题，Android4.0以上的系统，当软键盘激活出来的时候read-write-plaintext-only的输入框不会居中在屏幕中间，这里需要根据实际情况进行取舍。</p>\n<p>3、translate3d可以让IOS启用硬件渲染，动画效果会更加流畅，基本上能解决所有抖动；但在Android下带来新的问题——只要页面里面有节点拥有transform属性，输入框都会不正常（聚焦不正常、输入时上下抖动等），此外还会导致节点渲染变慢（如点击出下啦菜单渲染缓慢）。 再次强调CSS3的动画、投影在Android下尽量避免。 .ua-ios .mail-list .list-item, .ua-ios .menu-item, .ua-ios .menu-split{ -webkit-transform: translate3d(0,0,0); transform: translate3d(0,0,0); }</p>\n<p>4、Android 2.3.7 下不加透明border，会导致溢出隐藏失效。 .atts .att-preview{overflow:hidden;width:50px;height:50px;border:1px solid transparent;}</p>\n<p>5、IOS下fixed定位（比如框架顶部提示信息），当键盘收起的时候会有残影：fixed元素不会随着键盘收起而移动到页面顶部，而是保持在页面中间，需要hack改成绝对定位。 .frame-tips{position:fixed;z-index:30;left:0;top:0} .ua-ios .frame-tips{position: absolute}</p>\n<p>6、在iPad1等低版ios下，opacity和其他属性一起改变，会导致transition中重复执行三次，所以要么只改变opacity实现淡入淡出，要么只改变非opacity属性。 .mRead-reply .btn{position:absolute;right:0;top:0;/opacity:0;/overflow:hidden;display:block;width:64px}</p>\n<p>7、在Android4.1下，如果textarea聚焦的时候，其高度或者其兄弟节点的高度产生变化，那么textarea就会被软键盘挡住而不会自动调整位置，这里需要去掉所有效果，默认显示输入框展开状态。所以Android下尽量不要在textarea和input上做动画。</p>\n<p>8、Android下div的高度设置成100%，同时设置其overflow:auto;那么滚动条就会出现在这个div上面。 这个时候会出现抖动，所以建议Android下页面的滚动能且只能出现在body节点上面！</p>\n<p>原文章地址：<a href=\"http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/\" target=\"_blank\" rel=\"noopener\">http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1、低版本Android下input有CSS3动画会让输入框失去焦点，解决办法是低版本Android下去掉所有CSS3动画。 .ua-ios .ipt{-webkit-transition:all .5s;-moz-transition:all .5s;-o-transition:all .5s;-ms-transition:all .5s;transition:all .5s} .ua-oldAndroid .ipt {-webkit-transition:none;-moz-transition:none;-o-transition:none;-ms-transition:none;transition:none;}</p>\n<p>2、-webkit-user-modify: read-write-plaintext-only; 作用是去掉输入框聚焦时候的白色背景 ； 但是这里有一个问题，Android4.0以上的系统，当软键盘激活出来的时候read-write-plaintext-only的输入框不会居中在屏幕中间，这里需要根据实际情况进行取舍。</p>\n<p>3、translate3d可以让IOS启用硬件渲染，动画效果会更加流畅，基本上能解决所有抖动；但在Android下带来新的问题——只要页面里面有节点拥有transform属性，输入框都会不正常（聚焦不正常、输入时上下抖动等），此外还会导致节点渲染变慢（如点击出下啦菜单渲染缓慢）。 再次强调CSS3的动画、投影在Android下尽量避免。 .ua-ios .mail-list .list-item, .ua-ios .menu-item, .ua-ios .menu-split{ -webkit-transform: translate3d(0,0,0); transform: translate3d(0,0,0); }</p>\n<p>4、Android 2.3.7 下不加透明border，会导致溢出隐藏失效。 .atts .att-preview{overflow:hidden;width:50px;height:50px;border:1px solid transparent;}</p>\n<p>5、IOS下fixed定位（比如框架顶部提示信息），当键盘收起的时候会有残影：fixed元素不会随着键盘收起而移动到页面顶部，而是保持在页面中间，需要hack改成绝对定位。 .frame-tips{position:fixed;z-index:30;left:0;top:0} .ua-ios .frame-tips{position: absolute}</p>\n<p>6、在iPad1等低版ios下，opacity和其他属性一起改变，会导致transition中重复执行三次，所以要么只改变opacity实现淡入淡出，要么只改变非opacity属性。 .mRead-reply .btn{position:absolute;right:0;top:0;/opacity:0;/overflow:hidden;display:block;width:64px}</p>\n<p>7、在Android4.1下，如果textarea聚焦的时候，其高度或者其兄弟节点的高度产生变化，那么textarea就会被软键盘挡住而不会自动调整位置，这里需要去掉所有效果，默认显示输入框展开状态。所以Android下尽量不要在textarea和input上做动画。</p>\n<p>8、Android下div的高度设置成100%，同时设置其overflow:auto;那么滚动条就会出现在这个div上面。 这个时候会出现抖动，所以建议Android下页面的滚动能且只能出现在body节点上面！</p>\n<p>原文章地址：<a href=\"http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/\" target=\"_blank\" rel=\"noopener\">http://ntesmailfetc.blog.163.com/blog/static/20628706120139184457401/</a></p>\n"},{"layout":"post","title":"2013年终总结","date":"2013-12-27T16:31:00.000Z","comments":1,"_content":"\n2013年就要过去了，像往年一样总结一下过去的一年我的变化。\n\n###生活\n\n2013年，我的本命年，生活和感情在我的人生中也开了一个小玩笑，让我心情低落过、脾气暴躁过、在游戏中颓废过，但我的认知从未游离过，我了解我自己，不快乐的都已经过去了，重新认识自己，做好自己，为了明天，为了自己。\n\n美好的瞬间，从现在开始， Let's go!\n\n在深圳第一次陪我家的“执子闲人”过了三个生日，送去了一份生日礼物 —— ipad 4\n\n在深圳第一次和“执子闲人”去东部华侨城——二日游，也许去的人太多，没有想像中的那么好玩，但华侨城的景色和设计的确不错。\n\n在深圳第一次和“执子闲人”订了一个KTV，傻傻的吃喝玩唱3小时。\n\n在深圳第一次和“执子闲人”一起陪着侄女和外甥女简单的了解深圳。\n\n今年夏天再次去清远二日游（ZTE 第一次、GiONEE移动互联网 第二次、GiONEE移动互联网战略第三次），但是和以往的心情却不一样，“清远鸡”味道着实不错，但我再也不打算去了，如果你下次去，记得帮忙带两只咯。\n\n仔细想想今年去的地方也是挺多的，拿着单反、骑着山地车、望着大海，大声说“Hong Kong am here\"!\n\n###工作\n\n年初的规划，一个一个的顺利完成。（深入了解了组内JS框架的架构和设计原理以及使用场景等，率先在组内切换工作环境到Linux，创建了基于Compass的LookitUI（基于前端的UI库），深入的了解并使用backbone进行开发。）\n\n在产品线成功的担任XX项目Master，离自己的职业规划又迈近了一小步！\n\n今年我做了大小十几次的演讲，参加了每一期的头脑风暴以及技术分享会。其实演讲也是一种需要大量练习才能买得的技能，我现在也只是做到了最基础：弄清楚目标听众是什么，吸引他们的注意，表达我的想法。最近也有去看了很多大牛的演讲和分享，我自愧太不如了，以后还得多加练习，积极主动。\n\n今年我成功的创建了Nodejs交流群（QQ群号：322794303），欢迎你的加入。成功的用Nodejs开发打包工具、CMS后台、年会抽奖系统。\n\n技术学习方面，粗而广的学了一些东西， Nodejs、MongoDB、Liunx、Andorid、Backbonejs、Seajs、Rangularjs、响应式流程等。我学技术的原则是熟练度可以不高，但原理和模式一定要理解。\n\n读书方面，粗略的看了这几本书， Nodejs 、MongoDB、JavascripMVC、淘宝技术这十年等，但对技术文章的阅读上有了很大的提高，同时对提高自身修养方面的关注度也近一步提高了。\n\n最后的最后，跟我们家的“执子闲人”恋爱四年了，回想过去我们也遇到过很多的艰难，最终都挺过来了，感谢在我最困惑的时候，有你的陪伴。我相信，以后无论发生什么，我们都能一路走下去。\n\n","source":"_posts/2013-12-28-2013-year.md","raw":"---\nlayout: post\ntitle: 2013年终总结\ndate: 2013-12-28 00:31\ncomments: true\ncategories: [工作与生活]\n---\n\n2013年就要过去了，像往年一样总结一下过去的一年我的变化。\n\n###生活\n\n2013年，我的本命年，生活和感情在我的人生中也开了一个小玩笑，让我心情低落过、脾气暴躁过、在游戏中颓废过，但我的认知从未游离过，我了解我自己，不快乐的都已经过去了，重新认识自己，做好自己，为了明天，为了自己。\n\n美好的瞬间，从现在开始， Let's go!\n\n在深圳第一次陪我家的“执子闲人”过了三个生日，送去了一份生日礼物 —— ipad 4\n\n在深圳第一次和“执子闲人”去东部华侨城——二日游，也许去的人太多，没有想像中的那么好玩，但华侨城的景色和设计的确不错。\n\n在深圳第一次和“执子闲人”订了一个KTV，傻傻的吃喝玩唱3小时。\n\n在深圳第一次和“执子闲人”一起陪着侄女和外甥女简单的了解深圳。\n\n今年夏天再次去清远二日游（ZTE 第一次、GiONEE移动互联网 第二次、GiONEE移动互联网战略第三次），但是和以往的心情却不一样，“清远鸡”味道着实不错，但我再也不打算去了，如果你下次去，记得帮忙带两只咯。\n\n仔细想想今年去的地方也是挺多的，拿着单反、骑着山地车、望着大海，大声说“Hong Kong am here\"!\n\n###工作\n\n年初的规划，一个一个的顺利完成。（深入了解了组内JS框架的架构和设计原理以及使用场景等，率先在组内切换工作环境到Linux，创建了基于Compass的LookitUI（基于前端的UI库），深入的了解并使用backbone进行开发。）\n\n在产品线成功的担任XX项目Master，离自己的职业规划又迈近了一小步！\n\n今年我做了大小十几次的演讲，参加了每一期的头脑风暴以及技术分享会。其实演讲也是一种需要大量练习才能买得的技能，我现在也只是做到了最基础：弄清楚目标听众是什么，吸引他们的注意，表达我的想法。最近也有去看了很多大牛的演讲和分享，我自愧太不如了，以后还得多加练习，积极主动。\n\n今年我成功的创建了Nodejs交流群（QQ群号：322794303），欢迎你的加入。成功的用Nodejs开发打包工具、CMS后台、年会抽奖系统。\n\n技术学习方面，粗而广的学了一些东西， Nodejs、MongoDB、Liunx、Andorid、Backbonejs、Seajs、Rangularjs、响应式流程等。我学技术的原则是熟练度可以不高，但原理和模式一定要理解。\n\n读书方面，粗略的看了这几本书， Nodejs 、MongoDB、JavascripMVC、淘宝技术这十年等，但对技术文章的阅读上有了很大的提高，同时对提高自身修养方面的关注度也近一步提高了。\n\n最后的最后，跟我们家的“执子闲人”恋爱四年了，回想过去我们也遇到过很多的艰难，最终都挺过来了，感谢在我最困惑的时候，有你的陪伴。我相信，以后无论发生什么，我们都能一路走下去。\n\n","slug":"2013-year","published":1,"updated":"2018-05-30T08:12:15.857Z","photos":[],"link":"","_id":"cjhubytk6001gyis51ak8zpaw","content":"<p>2013年就要过去了，像往年一样总结一下过去的一年我的变化。</p>\n<p>###生活</p>\n<p>2013年，我的本命年，生活和感情在我的人生中也开了一个小玩笑，让我心情低落过、脾气暴躁过、在游戏中颓废过，但我的认知从未游离过，我了解我自己，不快乐的都已经过去了，重新认识自己，做好自己，为了明天，为了自己。</p>\n<p>美好的瞬间，从现在开始， Let’s go!</p>\n<p>在深圳第一次陪我家的“执子闲人”过了三个生日，送去了一份生日礼物 —— ipad 4</p>\n<p>在深圳第一次和“执子闲人”去东部华侨城——二日游，也许去的人太多，没有想像中的那么好玩，但华侨城的景色和设计的确不错。</p>\n<p>在深圳第一次和“执子闲人”订了一个KTV，傻傻的吃喝玩唱3小时。</p>\n<p>在深圳第一次和“执子闲人”一起陪着侄女和外甥女简单的了解深圳。</p>\n<p>今年夏天再次去清远二日游（ZTE 第一次、GiONEE移动互联网 第二次、GiONEE移动互联网战略第三次），但是和以往的心情却不一样，“清远鸡”味道着实不错，但我再也不打算去了，如果你下次去，记得帮忙带两只咯。</p>\n<p>仔细想想今年去的地方也是挺多的，拿着单反、骑着山地车、望着大海，大声说“Hong Kong am here”!</p>\n<p>###工作</p>\n<p>年初的规划，一个一个的顺利完成。（深入了解了组内JS框架的架构和设计原理以及使用场景等，率先在组内切换工作环境到Linux，创建了基于Compass的LookitUI（基于前端的UI库），深入的了解并使用backbone进行开发。）</p>\n<p>在产品线成功的担任XX项目Master，离自己的职业规划又迈近了一小步！</p>\n<p>今年我做了大小十几次的演讲，参加了每一期的头脑风暴以及技术分享会。其实演讲也是一种需要大量练习才能买得的技能，我现在也只是做到了最基础：弄清楚目标听众是什么，吸引他们的注意，表达我的想法。最近也有去看了很多大牛的演讲和分享，我自愧太不如了，以后还得多加练习，积极主动。</p>\n<p>今年我成功的创建了Nodejs交流群（QQ群号：322794303），欢迎你的加入。成功的用Nodejs开发打包工具、CMS后台、年会抽奖系统。</p>\n<p>技术学习方面，粗而广的学了一些东西， Nodejs、MongoDB、Liunx、Andorid、Backbonejs、Seajs、Rangularjs、响应式流程等。我学技术的原则是熟练度可以不高，但原理和模式一定要理解。</p>\n<p>读书方面，粗略的看了这几本书， Nodejs 、MongoDB、JavascripMVC、淘宝技术这十年等，但对技术文章的阅读上有了很大的提高，同时对提高自身修养方面的关注度也近一步提高了。</p>\n<p>最后的最后，跟我们家的“执子闲人”恋爱四年了，回想过去我们也遇到过很多的艰难，最终都挺过来了，感谢在我最困惑的时候，有你的陪伴。我相信，以后无论发生什么，我们都能一路走下去。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2013年就要过去了，像往年一样总结一下过去的一年我的变化。</p>\n<p>###生活</p>\n<p>2013年，我的本命年，生活和感情在我的人生中也开了一个小玩笑，让我心情低落过、脾气暴躁过、在游戏中颓废过，但我的认知从未游离过，我了解我自己，不快乐的都已经过去了，重新认识自己，做好自己，为了明天，为了自己。</p>\n<p>美好的瞬间，从现在开始， Let’s go!</p>\n<p>在深圳第一次陪我家的“执子闲人”过了三个生日，送去了一份生日礼物 —— ipad 4</p>\n<p>在深圳第一次和“执子闲人”去东部华侨城——二日游，也许去的人太多，没有想像中的那么好玩，但华侨城的景色和设计的确不错。</p>\n<p>在深圳第一次和“执子闲人”订了一个KTV，傻傻的吃喝玩唱3小时。</p>\n<p>在深圳第一次和“执子闲人”一起陪着侄女和外甥女简单的了解深圳。</p>\n<p>今年夏天再次去清远二日游（ZTE 第一次、GiONEE移动互联网 第二次、GiONEE移动互联网战略第三次），但是和以往的心情却不一样，“清远鸡”味道着实不错，但我再也不打算去了，如果你下次去，记得帮忙带两只咯。</p>\n<p>仔细想想今年去的地方也是挺多的，拿着单反、骑着山地车、望着大海，大声说“Hong Kong am here”!</p>\n<p>###工作</p>\n<p>年初的规划，一个一个的顺利完成。（深入了解了组内JS框架的架构和设计原理以及使用场景等，率先在组内切换工作环境到Linux，创建了基于Compass的LookitUI（基于前端的UI库），深入的了解并使用backbone进行开发。）</p>\n<p>在产品线成功的担任XX项目Master，离自己的职业规划又迈近了一小步！</p>\n<p>今年我做了大小十几次的演讲，参加了每一期的头脑风暴以及技术分享会。其实演讲也是一种需要大量练习才能买得的技能，我现在也只是做到了最基础：弄清楚目标听众是什么，吸引他们的注意，表达我的想法。最近也有去看了很多大牛的演讲和分享，我自愧太不如了，以后还得多加练习，积极主动。</p>\n<p>今年我成功的创建了Nodejs交流群（QQ群号：322794303），欢迎你的加入。成功的用Nodejs开发打包工具、CMS后台、年会抽奖系统。</p>\n<p>技术学习方面，粗而广的学了一些东西， Nodejs、MongoDB、Liunx、Andorid、Backbonejs、Seajs、Rangularjs、响应式流程等。我学技术的原则是熟练度可以不高，但原理和模式一定要理解。</p>\n<p>读书方面，粗略的看了这几本书， Nodejs 、MongoDB、JavascripMVC、淘宝技术这十年等，但对技术文章的阅读上有了很大的提高，同时对提高自身修养方面的关注度也近一步提高了。</p>\n<p>最后的最后，跟我们家的“执子闲人”恋爱四年了，回想过去我们也遇到过很多的艰难，最终都挺过来了，感谢在我最困惑的时候，有你的陪伴。我相信，以后无论发生什么，我们都能一路走下去。</p>\n"},{"layout":"post","title":"金立移动互联网第三产品中心年度盛会","date":"2014-01-18T15:00:00.000Z","comments":1,"_content":"\n从移动互联网运营部到移动互联网第三产品中心的转变，标志着我们目前各产品线的良性成长。从个位数迅速发展到百位数、从第一个迭代版本到第几十个的迭代版本、从单一结构发展到 多元化结构、从年会时３桌的人数迅速发展到上10桌的人数、奖项从单一到多元化和人性化的分布。2013年是成长的一年，也是快乐的一年，因为和你们在一起。\n\n**2014 year department party, Ｗe are here in the sand beach party，where are you ?**\n\nsand beach party\n\n![sand beach party](/files/2014/01/20140118000.jpg)\n\n现场盛会\n\n![现场盛会](/files/2014/01/20140118010.jpg)\n\n我们的掌柜\n\n![金立移动互联网运营部　各位大佬们](/files/2014/01/20140118011.jpg)\n\n金立移动互联网运营部　各位大佬们\n\n![青春活力的萌妹纸](/files/2014/01/20140118001.jpg)\n\n青春活力的萌妹纸\n\n![卡哇伊的妹纸](/files/2014/01/20140118002.jpg)\n\n卡哇伊的妹纸\n\n![艺样的演技，人气之王](/files/2014/01/20140118003.jpg)\n\n艺样的演技，人气之王\n\n![各种舞蹈，各种帅锅美女](/files/2014/01/20140118004.jpg)\n\n各种舞蹈，各种帅锅美女\n\n![有了弓箭10,再也不用担心打羽毛球啦](/files/2014/01/20140118005.jpg)\n\n有了弓箭10,再也不用担心打羽毛球啦\n\n![非诚勿扰，这在等你](/files/2014/01/20140118006.jpg)\n\n非诚勿扰，这在等你\n\n![法海大闹许仙](/files/2014/01/20140118007.jpg)\n\n法海大闹许仙\n\n![比翼双飞，让我们飞的很高](/files/2014/01/20140118008.jpg)\n\n比翼双飞，让我们飞的很高\n\n![比翼双飞，让我们飞的很高](/files/2014/01/20140118009.jpg)\n\n海边盛会，火爆的现场，平静的夜晚，美妙的海上日出，享受生活，享受每好的时刻。\n\n2013年过去了，2014我们要更加的努力！\n\n","source":"_posts/2014-01-18-third-product-center-annual-party.md","raw":"---\nlayout: post\ntitle: 金立移动互联网第三产品中心年度盛会\ndate: 2014-01-18 23:00\ncomments: true\ncategories: [工作与生活]\n---\n\n从移动互联网运营部到移动互联网第三产品中心的转变，标志着我们目前各产品线的良性成长。从个位数迅速发展到百位数、从第一个迭代版本到第几十个的迭代版本、从单一结构发展到 多元化结构、从年会时３桌的人数迅速发展到上10桌的人数、奖项从单一到多元化和人性化的分布。2013年是成长的一年，也是快乐的一年，因为和你们在一起。\n\n**2014 year department party, Ｗe are here in the sand beach party，where are you ?**\n\nsand beach party\n\n![sand beach party](/files/2014/01/20140118000.jpg)\n\n现场盛会\n\n![现场盛会](/files/2014/01/20140118010.jpg)\n\n我们的掌柜\n\n![金立移动互联网运营部　各位大佬们](/files/2014/01/20140118011.jpg)\n\n金立移动互联网运营部　各位大佬们\n\n![青春活力的萌妹纸](/files/2014/01/20140118001.jpg)\n\n青春活力的萌妹纸\n\n![卡哇伊的妹纸](/files/2014/01/20140118002.jpg)\n\n卡哇伊的妹纸\n\n![艺样的演技，人气之王](/files/2014/01/20140118003.jpg)\n\n艺样的演技，人气之王\n\n![各种舞蹈，各种帅锅美女](/files/2014/01/20140118004.jpg)\n\n各种舞蹈，各种帅锅美女\n\n![有了弓箭10,再也不用担心打羽毛球啦](/files/2014/01/20140118005.jpg)\n\n有了弓箭10,再也不用担心打羽毛球啦\n\n![非诚勿扰，这在等你](/files/2014/01/20140118006.jpg)\n\n非诚勿扰，这在等你\n\n![法海大闹许仙](/files/2014/01/20140118007.jpg)\n\n法海大闹许仙\n\n![比翼双飞，让我们飞的很高](/files/2014/01/20140118008.jpg)\n\n比翼双飞，让我们飞的很高\n\n![比翼双飞，让我们飞的很高](/files/2014/01/20140118009.jpg)\n\n海边盛会，火爆的现场，平静的夜晚，美妙的海上日出，享受生活，享受每好的时刻。\n\n2013年过去了，2014我们要更加的努力！\n\n","slug":"third-product-center-annual-party","published":1,"updated":"2018-05-30T08:12:15.858Z","photos":[],"link":"","_id":"cjhubytk7001iyis5dl5juath","content":"<p>从移动互联网运营部到移动互联网第三产品中心的转变，标志着我们目前各产品线的良性成长。从个位数迅速发展到百位数、从第一个迭代版本到第几十个的迭代版本、从单一结构发展到 多元化结构、从年会时３桌的人数迅速发展到上10桌的人数、奖项从单一到多元化和人性化的分布。2013年是成长的一年，也是快乐的一年，因为和你们在一起。</p>\n<p><strong>2014 year department party, Ｗe are here in the sand beach party，where are you ?</strong></p>\n<p>sand beach party</p>\n<p><img src=\"/files/2014/01/20140118000.jpg\" alt=\"sand beach party\"></p>\n<p>现场盛会</p>\n<p><img src=\"/files/2014/01/20140118010.jpg\" alt=\"现场盛会\"></p>\n<p>我们的掌柜</p>\n<p><img src=\"/files/2014/01/20140118011.jpg\" alt=\"金立移动互联网运营部　各位大佬们\"></p>\n<p>金立移动互联网运营部　各位大佬们</p>\n<p><img src=\"/files/2014/01/20140118001.jpg\" alt=\"青春活力的萌妹纸\"></p>\n<p>青春活力的萌妹纸</p>\n<p><img src=\"/files/2014/01/20140118002.jpg\" alt=\"卡哇伊的妹纸\"></p>\n<p>卡哇伊的妹纸</p>\n<p><img src=\"/files/2014/01/20140118003.jpg\" alt=\"艺样的演技，人气之王\"></p>\n<p>艺样的演技，人气之王</p>\n<p><img src=\"/files/2014/01/20140118004.jpg\" alt=\"各种舞蹈，各种帅锅美女\"></p>\n<p>各种舞蹈，各种帅锅美女</p>\n<p><img src=\"/files/2014/01/20140118005.jpg\" alt=\"有了弓箭10,再也不用担心打羽毛球啦\"></p>\n<p>有了弓箭10,再也不用担心打羽毛球啦</p>\n<p><img src=\"/files/2014/01/20140118006.jpg\" alt=\"非诚勿扰，这在等你\"></p>\n<p>非诚勿扰，这在等你</p>\n<p><img src=\"/files/2014/01/20140118007.jpg\" alt=\"法海大闹许仙\"></p>\n<p>法海大闹许仙</p>\n<p><img src=\"/files/2014/01/20140118008.jpg\" alt=\"比翼双飞，让我们飞的很高\"></p>\n<p>比翼双飞，让我们飞的很高</p>\n<p><img src=\"/files/2014/01/20140118009.jpg\" alt=\"比翼双飞，让我们飞的很高\"></p>\n<p>海边盛会，火爆的现场，平静的夜晚，美妙的海上日出，享受生活，享受每好的时刻。</p>\n<p>2013年过去了，2014我们要更加的努力！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>从移动互联网运营部到移动互联网第三产品中心的转变，标志着我们目前各产品线的良性成长。从个位数迅速发展到百位数、从第一个迭代版本到第几十个的迭代版本、从单一结构发展到 多元化结构、从年会时３桌的人数迅速发展到上10桌的人数、奖项从单一到多元化和人性化的分布。2013年是成长的一年，也是快乐的一年，因为和你们在一起。</p>\n<p><strong>2014 year department party, Ｗe are here in the sand beach party，where are you ?</strong></p>\n<p>sand beach party</p>\n<p><img src=\"/files/2014/01/20140118000.jpg\" alt=\"sand beach party\"></p>\n<p>现场盛会</p>\n<p><img src=\"/files/2014/01/20140118010.jpg\" alt=\"现场盛会\"></p>\n<p>我们的掌柜</p>\n<p><img src=\"/files/2014/01/20140118011.jpg\" alt=\"金立移动互联网运营部　各位大佬们\"></p>\n<p>金立移动互联网运营部　各位大佬们</p>\n<p><img src=\"/files/2014/01/20140118001.jpg\" alt=\"青春活力的萌妹纸\"></p>\n<p>青春活力的萌妹纸</p>\n<p><img src=\"/files/2014/01/20140118002.jpg\" alt=\"卡哇伊的妹纸\"></p>\n<p>卡哇伊的妹纸</p>\n<p><img src=\"/files/2014/01/20140118003.jpg\" alt=\"艺样的演技，人气之王\"></p>\n<p>艺样的演技，人气之王</p>\n<p><img src=\"/files/2014/01/20140118004.jpg\" alt=\"各种舞蹈，各种帅锅美女\"></p>\n<p>各种舞蹈，各种帅锅美女</p>\n<p><img src=\"/files/2014/01/20140118005.jpg\" alt=\"有了弓箭10,再也不用担心打羽毛球啦\"></p>\n<p>有了弓箭10,再也不用担心打羽毛球啦</p>\n<p><img src=\"/files/2014/01/20140118006.jpg\" alt=\"非诚勿扰，这在等你\"></p>\n<p>非诚勿扰，这在等你</p>\n<p><img src=\"/files/2014/01/20140118007.jpg\" alt=\"法海大闹许仙\"></p>\n<p>法海大闹许仙</p>\n<p><img src=\"/files/2014/01/20140118008.jpg\" alt=\"比翼双飞，让我们飞的很高\"></p>\n<p>比翼双飞，让我们飞的很高</p>\n<p><img src=\"/files/2014/01/20140118009.jpg\" alt=\"比翼双飞，让我们飞的很高\"></p>\n<p>海边盛会，火爆的现场，平静的夜晚，美妙的海上日出，享受生活，享受每好的时刻。</p>\n<p>2013年过去了，2014我们要更加的努力！</p>\n"},{"layout":"post","title":"从 wordpress 搬迁到 github pages","date":"2014-01-22T15:10:00.000Z","comments":1,"_content":"\n一直在寻求快速发表文章的工具，于是不停的在尝试。期间尝试过win7和Ubuntu下各种Ｍarkdown编辑预览工具， 甚至使用开发工具ST2(Sublime text 2)装Ｍarkdown插件来更新博客，各种尝试，各种折腾。也许是因为之前对动态站点的理解， 导致思想上一直认为 —— WordPress 或者 emlog 等是最好的博客系统没有之一的原故。\n\n自从使用nico生成了ICAT文档后， 有一种冲动想立刻在上面建立起我的博客副本，感觉挺不错的。\n\n昨天打算在Ｗordpress的编辑器里写了一篇年会抽奖系统(nodejs+mongodb)的文章，由于涉及到很多的代码片段，有的需要格式化，有的只是要使用code标签。 当我在编辑模式和HTML源码编辑模式下各种抓狂之后，决定放弃ＷordPress，使用github。这样我就可以在我喜欢的编辑器里，使用我熟悉的markdown语法来写博客。\n\n迁移的步骤如下：\n\n先阅读阮一峰的一篇很赞的文章搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门\n\n备份wordpress数据库，并转换日志为.md文件\n\n下载一份 jekyll 模板 (这里感谢展新的模块kunka)\n\n将第二步中的所有.md文件放到_posts文件夹中（手动处理好.md文件中非法的字符和标签）\n\n模块 kunka 中支持两种评论插件（disqus 和多说），进行简单配置即可直接使用。\n\n将本地文件提交到github\n\n迁移的注意点如下：\n\ngithub pages 分为两大类，一类是以根站点（github user or organization site, e.g. username.github.io), 另一类是　项目站点（project site, e.g. username.github.io/projectname),请参考官方文档\n\n域名域名(顶级域名绑定——只需要把顶级域名的Ａ记录指向到204.232.175.78， 非顶级域名绑定——只需要把非顶级域名绑定的cname的DNS解析指向到username.github.com（请将username换成你的用户名）)，查看[官方文档](https://help.github.com/articles/setting-up-a-custom-domain-with-pages)\n\n关于 jekyll 的相关操作，可以查看[官方文档](https://help.github.com/articles/setting-up-a-custom-domain-with-pages)\n\n对以上有任何的疑问都可以联系我或者给我留言，谢谢！\n\n最后，整个博客都是开源，博客中的样式、模板都可以直接使用，但文章内容和图片内容保留版权，未经允许禁止使用！\n\n","source":"_posts/2014-01-22-wordpress-blog-to-github-pages.md","raw":"---\nlayout: post\ntitle: 从 wordpress 搬迁到 github pages\ndate: 2014-01-22 23:10\ncomments: true\ncategories: [工作与生活]\n---\n\n一直在寻求快速发表文章的工具，于是不停的在尝试。期间尝试过win7和Ubuntu下各种Ｍarkdown编辑预览工具， 甚至使用开发工具ST2(Sublime text 2)装Ｍarkdown插件来更新博客，各种尝试，各种折腾。也许是因为之前对动态站点的理解， 导致思想上一直认为 —— WordPress 或者 emlog 等是最好的博客系统没有之一的原故。\n\n自从使用nico生成了ICAT文档后， 有一种冲动想立刻在上面建立起我的博客副本，感觉挺不错的。\n\n昨天打算在Ｗordpress的编辑器里写了一篇年会抽奖系统(nodejs+mongodb)的文章，由于涉及到很多的代码片段，有的需要格式化，有的只是要使用code标签。 当我在编辑模式和HTML源码编辑模式下各种抓狂之后，决定放弃ＷordPress，使用github。这样我就可以在我喜欢的编辑器里，使用我熟悉的markdown语法来写博客。\n\n迁移的步骤如下：\n\n先阅读阮一峰的一篇很赞的文章搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门\n\n备份wordpress数据库，并转换日志为.md文件\n\n下载一份 jekyll 模板 (这里感谢展新的模块kunka)\n\n将第二步中的所有.md文件放到_posts文件夹中（手动处理好.md文件中非法的字符和标签）\n\n模块 kunka 中支持两种评论插件（disqus 和多说），进行简单配置即可直接使用。\n\n将本地文件提交到github\n\n迁移的注意点如下：\n\ngithub pages 分为两大类，一类是以根站点（github user or organization site, e.g. username.github.io), 另一类是　项目站点（project site, e.g. username.github.io/projectname),请参考官方文档\n\n域名域名(顶级域名绑定——只需要把顶级域名的Ａ记录指向到204.232.175.78， 非顶级域名绑定——只需要把非顶级域名绑定的cname的DNS解析指向到username.github.com（请将username换成你的用户名）)，查看[官方文档](https://help.github.com/articles/setting-up-a-custom-domain-with-pages)\n\n关于 jekyll 的相关操作，可以查看[官方文档](https://help.github.com/articles/setting-up-a-custom-domain-with-pages)\n\n对以上有任何的疑问都可以联系我或者给我留言，谢谢！\n\n最后，整个博客都是开源，博客中的样式、模板都可以直接使用，但文章内容和图片内容保留版权，未经允许禁止使用！\n\n","slug":"wordpress-blog-to-github-pages","published":1,"updated":"2018-05-30T08:12:15.859Z","photos":[],"link":"","_id":"cjhubytk8001kyis5tcyon7fl","content":"<p>一直在寻求快速发表文章的工具，于是不停的在尝试。期间尝试过win7和Ubuntu下各种Ｍarkdown编辑预览工具， 甚至使用开发工具ST2(Sublime text 2)装Ｍarkdown插件来更新博客，各种尝试，各种折腾。也许是因为之前对动态站点的理解， 导致思想上一直认为 —— WordPress 或者 emlog 等是最好的博客系统没有之一的原故。</p>\n<p>自从使用nico生成了ICAT文档后， 有一种冲动想立刻在上面建立起我的博客副本，感觉挺不错的。</p>\n<p>昨天打算在Ｗordpress的编辑器里写了一篇年会抽奖系统(nodejs+mongodb)的文章，由于涉及到很多的代码片段，有的需要格式化，有的只是要使用code标签。 当我在编辑模式和HTML源码编辑模式下各种抓狂之后，决定放弃ＷordPress，使用github。这样我就可以在我喜欢的编辑器里，使用我熟悉的markdown语法来写博客。</p>\n<p>迁移的步骤如下：</p>\n<p>先阅读阮一峰的一篇很赞的文章搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</p>\n<p>备份wordpress数据库，并转换日志为.md文件</p>\n<p>下载一份 jekyll 模板 (这里感谢展新的模块kunka)</p>\n<p>将第二步中的所有.md文件放到_posts文件夹中（手动处理好.md文件中非法的字符和标签）</p>\n<p>模块 kunka 中支持两种评论插件（disqus 和多说），进行简单配置即可直接使用。</p>\n<p>将本地文件提交到github</p>\n<p>迁移的注意点如下：</p>\n<p>github pages 分为两大类，一类是以根站点（github user or organization site, e.g. username.github.io), 另一类是　项目站点（project site, e.g. username.github.io/projectname),请参考官方文档</p>\n<p>域名域名(顶级域名绑定——只需要把顶级域名的Ａ记录指向到204.232.175.78， 非顶级域名绑定——只需要把非顶级域名绑定的cname的DNS解析指向到username.github.com（请将username换成你的用户名）)，查看<a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>关于 jekyll 的相关操作，可以查看<a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>对以上有任何的疑问都可以联系我或者给我留言，谢谢！</p>\n<p>最后，整个博客都是开源，博客中的样式、模板都可以直接使用，但文章内容和图片内容保留版权，未经允许禁止使用！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一直在寻求快速发表文章的工具，于是不停的在尝试。期间尝试过win7和Ubuntu下各种Ｍarkdown编辑预览工具， 甚至使用开发工具ST2(Sublime text 2)装Ｍarkdown插件来更新博客，各种尝试，各种折腾。也许是因为之前对动态站点的理解， 导致思想上一直认为 —— WordPress 或者 emlog 等是最好的博客系统没有之一的原故。</p>\n<p>自从使用nico生成了ICAT文档后， 有一种冲动想立刻在上面建立起我的博客副本，感觉挺不错的。</p>\n<p>昨天打算在Ｗordpress的编辑器里写了一篇年会抽奖系统(nodejs+mongodb)的文章，由于涉及到很多的代码片段，有的需要格式化，有的只是要使用code标签。 当我在编辑模式和HTML源码编辑模式下各种抓狂之后，决定放弃ＷordPress，使用github。这样我就可以在我喜欢的编辑器里，使用我熟悉的markdown语法来写博客。</p>\n<p>迁移的步骤如下：</p>\n<p>先阅读阮一峰的一篇很赞的文章搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</p>\n<p>备份wordpress数据库，并转换日志为.md文件</p>\n<p>下载一份 jekyll 模板 (这里感谢展新的模块kunka)</p>\n<p>将第二步中的所有.md文件放到_posts文件夹中（手动处理好.md文件中非法的字符和标签）</p>\n<p>模块 kunka 中支持两种评论插件（disqus 和多说），进行简单配置即可直接使用。</p>\n<p>将本地文件提交到github</p>\n<p>迁移的注意点如下：</p>\n<p>github pages 分为两大类，一类是以根站点（github user or organization site, e.g. username.github.io), 另一类是　项目站点（project site, e.g. username.github.io/projectname),请参考官方文档</p>\n<p>域名域名(顶级域名绑定——只需要把顶级域名的Ａ记录指向到204.232.175.78， 非顶级域名绑定——只需要把非顶级域名绑定的cname的DNS解析指向到username.github.com（请将username换成你的用户名）)，查看<a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>关于 jekyll 的相关操作，可以查看<a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>对以上有任何的疑问都可以联系我或者给我留言，谢谢！</p>\n<p>最后，整个博客都是开源，博客中的样式、模板都可以直接使用，但文章内容和图片内容保留版权，未经允许禁止使用！</p>\n"},{"layout":"post","title":"2014年新金立新征程","date":"2014-01-26T15:15:00.000Z","comments":1,"_content":"\n![新金立、新征程,2014年金立集团新年联欢晚会](/files/2014/01/20140126001.jpg)\n\n新金立、新征程，2014年金立集团新年联欢晚会，金立人齐聚一起。新金立、新征程！\n\n今年的年会如以往不同，处处都透露出公司的改革和创新，从高层的新动态，从制度的规范健全，从对研发的大力投入，每一个细节，每一个创新，每一次进步，都直接映射出金立战略， 创新的金立、国际的金立、跨界的金立。\n\n让我们一起来看看，新金立，新征程，不一样的视界，不一样的理念！\n\n2014年金立集团新年联欢晚会,新金立、新征程\n\n![新金立、新征程](/files/2014/01/20140126002.jpg)\n\n高层领导新形象\n\n![金立高层领导新形象](/files/2014/01/20140126003.jpg)\n\n高层领导新形象（刘董）\n\n![金立高层领导新形象](/files/2014/01/20140126004.jpg)\n\n高层领导新形象（卢总）\n\n![金立高层领导新形象](/files/2014/01/20140126005.jpg)\n\n参加晚集团年会回来都晚上12点多了，但本次年会却收获大大的，高层的行为举止、积极的心态、不一样的形象， 简单的一句话来概括现场所有的感受和本次收获的真谛——心有所归、力归所用，眼观所属，认清自我，让心态决定选择，让选择决定人生！","source":"_posts/2014-01-26-gionee-group-annual-party.md","raw":"---\nlayout: post\ntitle: 2014年新金立新征程\ndate: 2014-01-26 23:15\ncomments: true\ncategories: [工作与生活]\n---\n\n![新金立、新征程,2014年金立集团新年联欢晚会](/files/2014/01/20140126001.jpg)\n\n新金立、新征程，2014年金立集团新年联欢晚会，金立人齐聚一起。新金立、新征程！\n\n今年的年会如以往不同，处处都透露出公司的改革和创新，从高层的新动态，从制度的规范健全，从对研发的大力投入，每一个细节，每一个创新，每一次进步，都直接映射出金立战略， 创新的金立、国际的金立、跨界的金立。\n\n让我们一起来看看，新金立，新征程，不一样的视界，不一样的理念！\n\n2014年金立集团新年联欢晚会,新金立、新征程\n\n![新金立、新征程](/files/2014/01/20140126002.jpg)\n\n高层领导新形象\n\n![金立高层领导新形象](/files/2014/01/20140126003.jpg)\n\n高层领导新形象（刘董）\n\n![金立高层领导新形象](/files/2014/01/20140126004.jpg)\n\n高层领导新形象（卢总）\n\n![金立高层领导新形象](/files/2014/01/20140126005.jpg)\n\n参加晚集团年会回来都晚上12点多了，但本次年会却收获大大的，高层的行为举止、积极的心态、不一样的形象， 简单的一句话来概括现场所有的感受和本次收获的真谛——心有所归、力归所用，眼观所属，认清自我，让心态决定选择，让选择决定人生！","slug":"gionee-group-annual-party","published":1,"updated":"2018-05-30T08:12:15.860Z","photos":[],"link":"","_id":"cjhubytka001myis5spzg6bpw","content":"<p><img src=\"/files/2014/01/20140126001.jpg\" alt=\"新金立、新征程,2014年金立集团新年联欢晚会\"></p>\n<p>新金立、新征程，2014年金立集团新年联欢晚会，金立人齐聚一起。新金立、新征程！</p>\n<p>今年的年会如以往不同，处处都透露出公司的改革和创新，从高层的新动态，从制度的规范健全，从对研发的大力投入，每一个细节，每一个创新，每一次进步，都直接映射出金立战略， 创新的金立、国际的金立、跨界的金立。</p>\n<p>让我们一起来看看，新金立，新征程，不一样的视界，不一样的理念！</p>\n<p>2014年金立集团新年联欢晚会,新金立、新征程</p>\n<p><img src=\"/files/2014/01/20140126002.jpg\" alt=\"新金立、新征程\"></p>\n<p>高层领导新形象</p>\n<p><img src=\"/files/2014/01/20140126003.jpg\" alt=\"金立高层领导新形象\"></p>\n<p>高层领导新形象（刘董）</p>\n<p><img src=\"/files/2014/01/20140126004.jpg\" alt=\"金立高层领导新形象\"></p>\n<p>高层领导新形象（卢总）</p>\n<p><img src=\"/files/2014/01/20140126005.jpg\" alt=\"金立高层领导新形象\"></p>\n<p>参加晚集团年会回来都晚上12点多了，但本次年会却收获大大的，高层的行为举止、积极的心态、不一样的形象， 简单的一句话来概括现场所有的感受和本次收获的真谛——心有所归、力归所用，眼观所属，认清自我，让心态决定选择，让选择决定人生！</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/files/2014/01/20140126001.jpg\" alt=\"新金立、新征程,2014年金立集团新年联欢晚会\"></p>\n<p>新金立、新征程，2014年金立集团新年联欢晚会，金立人齐聚一起。新金立、新征程！</p>\n<p>今年的年会如以往不同，处处都透露出公司的改革和创新，从高层的新动态，从制度的规范健全，从对研发的大力投入，每一个细节，每一个创新，每一次进步，都直接映射出金立战略， 创新的金立、国际的金立、跨界的金立。</p>\n<p>让我们一起来看看，新金立，新征程，不一样的视界，不一样的理念！</p>\n<p>2014年金立集团新年联欢晚会,新金立、新征程</p>\n<p><img src=\"/files/2014/01/20140126002.jpg\" alt=\"新金立、新征程\"></p>\n<p>高层领导新形象</p>\n<p><img src=\"/files/2014/01/20140126003.jpg\" alt=\"金立高层领导新形象\"></p>\n<p>高层领导新形象（刘董）</p>\n<p><img src=\"/files/2014/01/20140126004.jpg\" alt=\"金立高层领导新形象\"></p>\n<p>高层领导新形象（卢总）</p>\n<p><img src=\"/files/2014/01/20140126005.jpg\" alt=\"金立高层领导新形象\"></p>\n<p>参加晚集团年会回来都晚上12点多了，但本次年会却收获大大的，高层的行为举止、积极的心态、不一样的形象， 简单的一句话来概括现场所有的感受和本次收获的真谛——心有所归、力归所用，眼观所属，认清自我，让心态决定选择，让选择决定人生！</p>\n"},{"layout":"post","title":"Jekyll中使用google-code-prettify语法高亮","date":"2014-02-19T13:19:00.000Z","comments":1,"_content":"\n之前使用wordpress时，一直都是用的SyntaxHIghlighter代码高亮的工具，虽然SyntaxHIghlighter的代码高亮显示的很漂亮，无奈加载太慢，且对markdown写的文章支持的还不是很好，只能舍弃了。现在用的这个是google-code-prettfy，效果也相当不错。最重要的是，非常小，加载速度比SyntaxHighlighter快得多，而且，可以直接使用markdown的语法去写代码。\n\n准备工作\nGoogle Code Prettify下载\n主题库\n第一步：引用prettify.css和prettify.js\n将下载后的Prettify压缩文件解压到指定文件文件夹,将prettify.css和prettify.js文件放到项目文件夹下（例如：assets/theme/prettify目录）,然后打开需要引用的页面，添加如下代码：\n\n    <link href=\"/assets/themes/prettify/prettify.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\n    <script type=\"text/javascript\" src=\"/assets/themes/prettify/prettify.js\"></script>\n\n考虑到加载速度，最好将js写到文档末尾，body闭合标签之前，css写到头部\n\n第二步：高亮代码块\n添加以下代码，用于识别并高亮代码块\n\n    <script type=\"text/javascript\">\n        // 需要引入jQuery\n        $(document).ready(function() {\n            $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto');\n            prettyPrint();\n        });\n    </script>\n    \n第三步：显示全部行号\n默认prettify只显示行号5,10,15...,可以给pre标签下的li设置以下样式\n\npre li{ list-style-type: decimal; }\n第四步：选择喜欢的主题样式\n打开主题库选择喜欢的主题，并复制或者下载主题样式文件，替换默认主题样式文件（prettify.css）,本文使用的主题是Desert\n\n第五步：完成\n到此Google Code Prettify已可以正常使用了，现在可以直接用markdown的前置4空格来写代码了。\n\n另外，如果博客中的代码块存在滚动条可以通过如下代码实现自动换行\n\nwhite-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;\n如在操作过程中存在任何问题，请给我留言，谢谢！\n","source":"_posts/2014-02-19-jekyll-use-google-code-prettify.md","raw":"---\nlayout: post\ntitle: Jekyll中使用google-code-prettify语法高亮\ndate: 2014-02-19 21:19\ncomments: true\ncategories: [工作与生活]\n---\n\n之前使用wordpress时，一直都是用的SyntaxHIghlighter代码高亮的工具，虽然SyntaxHIghlighter的代码高亮显示的很漂亮，无奈加载太慢，且对markdown写的文章支持的还不是很好，只能舍弃了。现在用的这个是google-code-prettfy，效果也相当不错。最重要的是，非常小，加载速度比SyntaxHighlighter快得多，而且，可以直接使用markdown的语法去写代码。\n\n准备工作\nGoogle Code Prettify下载\n主题库\n第一步：引用prettify.css和prettify.js\n将下载后的Prettify压缩文件解压到指定文件文件夹,将prettify.css和prettify.js文件放到项目文件夹下（例如：assets/theme/prettify目录）,然后打开需要引用的页面，添加如下代码：\n\n    <link href=\"/assets/themes/prettify/prettify.css\" rel=\"stylesheet\" type=\"text/css\" media=\"all\">\n    <script type=\"text/javascript\" src=\"/assets/themes/prettify/prettify.js\"></script>\n\n考虑到加载速度，最好将js写到文档末尾，body闭合标签之前，css写到头部\n\n第二步：高亮代码块\n添加以下代码，用于识别并高亮代码块\n\n    <script type=\"text/javascript\">\n        // 需要引入jQuery\n        $(document).ready(function() {\n            $('pre').addClass('prettyprint linenums').attr('style', 'overflow:auto');\n            prettyPrint();\n        });\n    </script>\n    \n第三步：显示全部行号\n默认prettify只显示行号5,10,15...,可以给pre标签下的li设置以下样式\n\npre li{ list-style-type: decimal; }\n第四步：选择喜欢的主题样式\n打开主题库选择喜欢的主题，并复制或者下载主题样式文件，替换默认主题样式文件（prettify.css）,本文使用的主题是Desert\n\n第五步：完成\n到此Google Code Prettify已可以正常使用了，现在可以直接用markdown的前置4空格来写代码了。\n\n另外，如果博客中的代码块存在滚动条可以通过如下代码实现自动换行\n\nwhite-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;\n如在操作过程中存在任何问题，请给我留言，谢谢！\n","slug":"jekyll-use-google-code-prettify","published":1,"updated":"2018-05-30T08:12:15.861Z","photos":[],"link":"","_id":"cjhubytkb001oyis5jv36f7vq","content":"<p>之前使用wordpress时，一直都是用的SyntaxHIghlighter代码高亮的工具，虽然SyntaxHIghlighter的代码高亮显示的很漂亮，无奈加载太慢，且对markdown写的文章支持的还不是很好，只能舍弃了。现在用的这个是google-code-prettfy，效果也相当不错。最重要的是，非常小，加载速度比SyntaxHighlighter快得多，而且，可以直接使用markdown的语法去写代码。</p>\n<p>准备工作<br>Google Code Prettify下载<br>主题库<br>第一步：引用prettify.css和prettify.js<br>将下载后的Prettify压缩文件解压到指定文件文件夹,将prettify.css和prettify.js文件放到项目文件夹下（例如：assets/theme/prettify目录）,然后打开需要引用的页面，添加如下代码：</p>\n<pre><code>&lt;link href=&quot;/assets/themes/prettify/prettify.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;all&quot;&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;/assets/themes/prettify/prettify.js&quot;&gt;&lt;/script&gt;\n</code></pre><p>考虑到加载速度，最好将js写到文档末尾，body闭合标签之前，css写到头部</p>\n<p>第二步：高亮代码块<br>添加以下代码，用于识别并高亮代码块</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;\n    // 需要引入jQuery\n    $(document).ready(function() {\n        $(&apos;pre&apos;).addClass(&apos;prettyprint linenums&apos;).attr(&apos;style&apos;, &apos;overflow:auto&apos;);\n        prettyPrint();\n    });\n&lt;/script&gt;\n</code></pre><p>第三步：显示全部行号<br>默认prettify只显示行号5,10,15…,可以给pre标签下的li设置以下样式</p>\n<p>pre li{ list-style-type: decimal; }<br>第四步：选择喜欢的主题样式<br>打开主题库选择喜欢的主题，并复制或者下载主题样式文件，替换默认主题样式文件（prettify.css）,本文使用的主题是Desert</p>\n<p>第五步：完成<br>到此Google Code Prettify已可以正常使用了，现在可以直接用markdown的前置4空格来写代码了。</p>\n<p>另外，如果博客中的代码块存在滚动条可以通过如下代码实现自动换行</p>\n<p>white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;<br>如在操作过程中存在任何问题，请给我留言，谢谢！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>之前使用wordpress时，一直都是用的SyntaxHIghlighter代码高亮的工具，虽然SyntaxHIghlighter的代码高亮显示的很漂亮，无奈加载太慢，且对markdown写的文章支持的还不是很好，只能舍弃了。现在用的这个是google-code-prettfy，效果也相当不错。最重要的是，非常小，加载速度比SyntaxHighlighter快得多，而且，可以直接使用markdown的语法去写代码。</p>\n<p>准备工作<br>Google Code Prettify下载<br>主题库<br>第一步：引用prettify.css和prettify.js<br>将下载后的Prettify压缩文件解压到指定文件文件夹,将prettify.css和prettify.js文件放到项目文件夹下（例如：assets/theme/prettify目录）,然后打开需要引用的页面，添加如下代码：</p>\n<pre><code>&lt;link href=&quot;/assets/themes/prettify/prettify.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;all&quot;&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;/assets/themes/prettify/prettify.js&quot;&gt;&lt;/script&gt;\n</code></pre><p>考虑到加载速度，最好将js写到文档末尾，body闭合标签之前，css写到头部</p>\n<p>第二步：高亮代码块<br>添加以下代码，用于识别并高亮代码块</p>\n<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;\n    // 需要引入jQuery\n    $(document).ready(function() {\n        $(&apos;pre&apos;).addClass(&apos;prettyprint linenums&apos;).attr(&apos;style&apos;, &apos;overflow:auto&apos;);\n        prettyPrint();\n    });\n&lt;/script&gt;\n</code></pre><p>第三步：显示全部行号<br>默认prettify只显示行号5,10,15…,可以给pre标签下的li设置以下样式</p>\n<p>pre li{ list-style-type: decimal; }<br>第四步：选择喜欢的主题样式<br>打开主题库选择喜欢的主题，并复制或者下载主题样式文件，替换默认主题样式文件（prettify.css）,本文使用的主题是Desert</p>\n<p>第五步：完成<br>到此Google Code Prettify已可以正常使用了，现在可以直接用markdown的前置4空格来写代码了。</p>\n<p>另外，如果博客中的代码块存在滚动条可以通过如下代码实现自动换行</p>\n<p>white-space:pre;white-space:pre-wrap;word-break:break-all;word-wrap:break-word;<br>如在操作过程中存在任何问题，请给我留言，谢谢！</p>\n"},{"layout":"ppt","title":"代码发布流程研讨会","date":"2014-03-01T06:47:00.000Z","comments":1,"_content":"\n<section>\n    <h1>代码发布流程研讨会</h1>\n    <p><small>Created by <a href=\"http://hankewins.com/\">Hankewins</a></small></p>\n</section>\n\n<section>\n    <h2>目前项目上线流程</h2>\n</section>\n\n<section>\n    <h2>项目上线流程（上）</h2>\n    <ul>\n        <li>开发完成、测试完成</li>\n        <li>前端打包静态文件包</li>\n        <li>后端打包后台文件包（同时修改后台版本号）</li>\n        <li>后台开发汇总前后端文件包</li>\n        <li>邮件运维及相关人员</li>\n    </ul>\n</section>\n\n<section>\n    <h2>项目上线流程（下）</h2>\n    <ul>\n        <li>运维整理后，开始更新</li>\n        <li>先更新静态文件包</li>\n        <li>再更新后台文件包</li>\n        <li>最后更新前台文件包</li>\n        <li>中间任一流程出问题，重新更新</li>\n        <li>如更新问题来源于程序，则回滚</li>\n    </ul>\n</section>\n\n<section>\n    <h2>IT大佬的发布流程？</h2>\n</section>\n\n<section>\n    <h2>各大IT公司的发布流程</h2>\n    <ul>\n        <li>电商大佬（阿里、淘宝）</li>\n        <li>传统通信（中兴、华为）</li>\n        <li>IT互联网（百度、腾讯、网易）</li>\n        <li>中小企业、小团队</li>\n    </ul>\n</section>\n\n<section>\n    <h2>发布流程是否可以这样？</h2>\n</section>\n\n<section>\n    <h2>静态文件发布流程（上）</h2>\n    <ul>\n        <li>开发完成（自测）、测试人员完成</li>\n        <li>后台上传更新的静态文件</li>\n        <li>后台更新版本号</li>\n        <li>打开浏览器查看是否正常</li>\n    </ul>\n</section>\n\n<section>\n    <h2>静态文件发布流程（下）</h2>\n    <ul>\n        <li>更新失败（立刻修改回原版本号）</li>\n        <li>否则更新上传原版本文件</li>\n        <li>打开浏览器查看是否正常</li>\n    </ul>\n</section>\n\n<section>\n    <h2>你有什么好的建议？</h2>\n</section>\n\n<section>\n    <h2>Thank You!</h2>\n</section>\n    ","source":"_posts/2014-03-01-publish-code-to-online.md","raw":"---\nlayout: ppt\ntitle: 代码发布流程研讨会\ndate: 2014-03-01 14:47\ncomments: true\ncategories: [工作与生活]\n---\n\n<section>\n    <h1>代码发布流程研讨会</h1>\n    <p><small>Created by <a href=\"http://hankewins.com/\">Hankewins</a></small></p>\n</section>\n\n<section>\n    <h2>目前项目上线流程</h2>\n</section>\n\n<section>\n    <h2>项目上线流程（上）</h2>\n    <ul>\n        <li>开发完成、测试完成</li>\n        <li>前端打包静态文件包</li>\n        <li>后端打包后台文件包（同时修改后台版本号）</li>\n        <li>后台开发汇总前后端文件包</li>\n        <li>邮件运维及相关人员</li>\n    </ul>\n</section>\n\n<section>\n    <h2>项目上线流程（下）</h2>\n    <ul>\n        <li>运维整理后，开始更新</li>\n        <li>先更新静态文件包</li>\n        <li>再更新后台文件包</li>\n        <li>最后更新前台文件包</li>\n        <li>中间任一流程出问题，重新更新</li>\n        <li>如更新问题来源于程序，则回滚</li>\n    </ul>\n</section>\n\n<section>\n    <h2>IT大佬的发布流程？</h2>\n</section>\n\n<section>\n    <h2>各大IT公司的发布流程</h2>\n    <ul>\n        <li>电商大佬（阿里、淘宝）</li>\n        <li>传统通信（中兴、华为）</li>\n        <li>IT互联网（百度、腾讯、网易）</li>\n        <li>中小企业、小团队</li>\n    </ul>\n</section>\n\n<section>\n    <h2>发布流程是否可以这样？</h2>\n</section>\n\n<section>\n    <h2>静态文件发布流程（上）</h2>\n    <ul>\n        <li>开发完成（自测）、测试人员完成</li>\n        <li>后台上传更新的静态文件</li>\n        <li>后台更新版本号</li>\n        <li>打开浏览器查看是否正常</li>\n    </ul>\n</section>\n\n<section>\n    <h2>静态文件发布流程（下）</h2>\n    <ul>\n        <li>更新失败（立刻修改回原版本号）</li>\n        <li>否则更新上传原版本文件</li>\n        <li>打开浏览器查看是否正常</li>\n    </ul>\n</section>\n\n<section>\n    <h2>你有什么好的建议？</h2>\n</section>\n\n<section>\n    <h2>Thank You!</h2>\n</section>\n    ","slug":"publish-code-to-online","published":1,"updated":"2018-05-30T08:12:15.861Z","photos":[],"link":"","_id":"cjhubytkd001qyis5ccjosnv4","content":"<section><br>    <h1>代码发布流程研讨会</h1><br>    <p><small>Created by <a href=\"http://hankewins.com/\" target=\"_blank\" rel=\"noopener\">Hankewins</a></small></p><br></section>\n\n<section><br>    <h2>目前项目上线流程</h2><br></section>\n\n<section><br>    <h2>项目上线流程（上）</h2><br>    <ul><br>        <li>开发完成、测试完成</li><br>        <li>前端打包静态文件包</li><br>        <li>后端打包后台文件包（同时修改后台版本号）</li><br>        <li>后台开发汇总前后端文件包</li><br>        <li>邮件运维及相关人员</li><br>    </ul><br></section>\n\n<section><br>    <h2>项目上线流程（下）</h2><br>    <ul><br>        <li>运维整理后，开始更新</li><br>        <li>先更新静态文件包</li><br>        <li>再更新后台文件包</li><br>        <li>最后更新前台文件包</li><br>        <li>中间任一流程出问题，重新更新</li><br>        <li>如更新问题来源于程序，则回滚</li><br>    </ul><br></section>\n\n<section><br>    <h2>IT大佬的发布流程？</h2><br></section>\n\n<section><br>    <h2>各大IT公司的发布流程</h2><br>    <ul><br>        <li>电商大佬（阿里、淘宝）</li><br>        <li>传统通信（中兴、华为）</li><br>        <li>IT互联网（百度、腾讯、网易）</li><br>        <li>中小企业、小团队</li><br>    </ul><br></section>\n\n<section><br>    <h2>发布流程是否可以这样？</h2><br></section>\n\n<section><br>    <h2>静态文件发布流程（上）</h2><br>    <ul><br>        <li>开发完成（自测）、测试人员完成</li><br>        <li>后台上传更新的静态文件</li><br>        <li>后台更新版本号</li><br>        <li>打开浏览器查看是否正常</li><br>    </ul><br></section>\n\n<section><br>    <h2>静态文件发布流程（下）</h2><br>    <ul><br>        <li>更新失败（立刻修改回原版本号）</li><br>        <li>否则更新上传原版本文件</li><br>        <li>打开浏览器查看是否正常</li><br>    </ul><br></section>\n\n<section><br>    <h2>你有什么好的建议？</h2><br></section>\n\n<section><br>    <h2>Thank You!</h2><br></section>\n","site":{"data":{}},"excerpt":"","more":"<section><br>    <h1>代码发布流程研讨会</h1><br>    <p><small>Created by <a href=\"http://hankewins.com/\" target=\"_blank\" rel=\"noopener\">Hankewins</a></small></p><br></section>\n\n<section><br>    <h2>目前项目上线流程</h2><br></section>\n\n<section><br>    <h2>项目上线流程（上）</h2><br>    <ul><br>        <li>开发完成、测试完成</li><br>        <li>前端打包静态文件包</li><br>        <li>后端打包后台文件包（同时修改后台版本号）</li><br>        <li>后台开发汇总前后端文件包</li><br>        <li>邮件运维及相关人员</li><br>    </ul><br></section>\n\n<section><br>    <h2>项目上线流程（下）</h2><br>    <ul><br>        <li>运维整理后，开始更新</li><br>        <li>先更新静态文件包</li><br>        <li>再更新后台文件包</li><br>        <li>最后更新前台文件包</li><br>        <li>中间任一流程出问题，重新更新</li><br>        <li>如更新问题来源于程序，则回滚</li><br>    </ul><br></section>\n\n<section><br>    <h2>IT大佬的发布流程？</h2><br></section>\n\n<section><br>    <h2>各大IT公司的发布流程</h2><br>    <ul><br>        <li>电商大佬（阿里、淘宝）</li><br>        <li>传统通信（中兴、华为）</li><br>        <li>IT互联网（百度、腾讯、网易）</li><br>        <li>中小企业、小团队</li><br>    </ul><br></section>\n\n<section><br>    <h2>发布流程是否可以这样？</h2><br></section>\n\n<section><br>    <h2>静态文件发布流程（上）</h2><br>    <ul><br>        <li>开发完成（自测）、测试人员完成</li><br>        <li>后台上传更新的静态文件</li><br>        <li>后台更新版本号</li><br>        <li>打开浏览器查看是否正常</li><br>    </ul><br></section>\n\n<section><br>    <h2>静态文件发布流程（下）</h2><br>    <ul><br>        <li>更新失败（立刻修改回原版本号）</li><br>        <li>否则更新上传原版本文件</li><br>        <li>打开浏览器查看是否正常</li><br>    </ul><br></section>\n\n<section><br>    <h2>你有什么好的建议？</h2><br></section>\n\n<section><br>    <h2>Thank You!</h2><br></section>\n"},{"layout":"post","title":"新环境新动力","date":"2014-05-30T15:35:00.000Z","comments":1,"_content":"\n今天部门即将开拔至阳光高尔夫大厦，虽然对东海国际(五星级写字楼)有点不舍，但是看着部门的成长，集体的壮大，需重新调整办公区域。离开了东海走向阳光， 我相信在新的环境下我们可以更好的成长。\n\n下面同我一起参观新环境下的新元素：\n\n- 根据业务线进行区域划分（BI支付、电商购物、游戏大厅、浏览器导航）\n- 根据业务线进行区域装扮 （非主流的元素、温馨的家园、时尚的风格）\n- 健身活动室（跑步机、桌面足球、动感单车、体感运动等等）\n- 特色会议室（白宫、白金汉宫、克里姆林宫等等）\n- 特色的办公墙面（可以绘画、可以记录）\n\n新环境新动力，让我们一起成长。","source":"_posts/2014-05-30-new-power-new-life.md","raw":"---\nlayout: post\ntitle: 新环境新动力\ndate: 2014-05-30 23:35\ncomments: true\ncategories: [工作与生活]\n---\n\n今天部门即将开拔至阳光高尔夫大厦，虽然对东海国际(五星级写字楼)有点不舍，但是看着部门的成长，集体的壮大，需重新调整办公区域。离开了东海走向阳光， 我相信在新的环境下我们可以更好的成长。\n\n下面同我一起参观新环境下的新元素：\n\n- 根据业务线进行区域划分（BI支付、电商购物、游戏大厅、浏览器导航）\n- 根据业务线进行区域装扮 （非主流的元素、温馨的家园、时尚的风格）\n- 健身活动室（跑步机、桌面足球、动感单车、体感运动等等）\n- 特色会议室（白宫、白金汉宫、克里姆林宫等等）\n- 特色的办公墙面（可以绘画、可以记录）\n\n新环境新动力，让我们一起成长。","slug":"new-power-new-life","published":1,"updated":"2018-05-30T08:12:15.862Z","photos":[],"link":"","_id":"cjhubytke001syis5z0mw2dw4","content":"<p>今天部门即将开拔至阳光高尔夫大厦，虽然对东海国际(五星级写字楼)有点不舍，但是看着部门的成长，集体的壮大，需重新调整办公区域。离开了东海走向阳光， 我相信在新的环境下我们可以更好的成长。</p>\n<p>下面同我一起参观新环境下的新元素：</p>\n<ul>\n<li>根据业务线进行区域划分（BI支付、电商购物、游戏大厅、浏览器导航）</li>\n<li>根据业务线进行区域装扮 （非主流的元素、温馨的家园、时尚的风格）</li>\n<li>健身活动室（跑步机、桌面足球、动感单车、体感运动等等）</li>\n<li>特色会议室（白宫、白金汉宫、克里姆林宫等等）</li>\n<li>特色的办公墙面（可以绘画、可以记录）</li>\n</ul>\n<p>新环境新动力，让我们一起成长。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天部门即将开拔至阳光高尔夫大厦，虽然对东海国际(五星级写字楼)有点不舍，但是看着部门的成长，集体的壮大，需重新调整办公区域。离开了东海走向阳光， 我相信在新的环境下我们可以更好的成长。</p>\n<p>下面同我一起参观新环境下的新元素：</p>\n<ul>\n<li>根据业务线进行区域划分（BI支付、电商购物、游戏大厅、浏览器导航）</li>\n<li>根据业务线进行区域装扮 （非主流的元素、温馨的家园、时尚的风格）</li>\n<li>健身活动室（跑步机、桌面足球、动感单车、体感运动等等）</li>\n<li>特色会议室（白宫、白金汉宫、克里姆林宫等等）</li>\n<li>特色的办公墙面（可以绘画、可以记录）</li>\n</ul>\n<p>新环境新动力，让我们一起成长。</p>\n"},{"layout":"post","title":"《卓越经理人的七个习惯》培训有感","date":"2014-07-20T13:37:00.000Z","comments":1,"_content":"\n最近公司组织了一次《卓越经理人的七个习惯》的培训，旨在提升管理层的管理水平，我很荣幸参与了这次课程的培训， 本次课程让我收获了很多，学习了很多，下面就谈谈这次培训的一些感悟吧！\n\n这次课程的内容主要是基于史蒂芬·柯维（Stephen R. Covey）的《高效能人士的七个习惯》并结合讲师独特的讲解手法， 通过案例、场景、现在模拟等方式，透彻的分析如何做好个人管理、建议人际关系、自我的持续提升。\n\n卓越经理人的七个习惯的自然法则和观念转移分别：\n\n自然法则\n人的反应不是受环境的制约，人有能力也有责任通过自主意识选择自己的反应。\n\n观念转移\n我们不要去总是去抱怨环境的不利、条件的限制和他人的缺失”，而应该考虑“在现有条件下我能做什么”。\n\n自然法则\n任何事物的创造需要经历两个过程，先想出来，再做出来。\n\n观念转移\n工作不能想做什么就做什么，做到哪里算哪里。 工作的第一步如何开展，过程中如何选择，都要根据最终的目标来进行。\n\n自然法则\n重要的少数往往决定结果的多数。\n\n观念转移\n我们在做事件时要以重要为依据而非紧急性。这样才能事半功倍。\n\n自然法则\n唯有双方都能获利，这样的关系才会长久。\n\n观念转移\n从我赢你输的小圈子里跳出来，用利人利已作为出发点来考虑人际问题。\n\n自然法则\n先诊断，再开药方。\n\n观念转移\n先理解别人再表达自己，为理解而去倾听，而不是为了反应而倾听。\n\n自然法则\n整体可以大于个体的总和。\n\n观念转移\n珍惜差异，善于从不同意见中吸取好的主意。\n\n自然法则\n产出和产能要平衡。\n\n观念转移\n我们需要自我更新，从而使自己走更远的路。磨刀不误砍柴功。\n\n通过这次培训，让我更深层次的了解“原则”的定义，并在如何应对生活层面、工作层面等复杂的环境方面得到提升， 同时学习到了思维模式的转变、四象限法则的运用、人际交往的整合等等。\n\n管理是一门艺术，需要主动积极、用心体会、用行动去描绘。\n\n最后给大家推荐两本书：\n\n- [《小强升职记》](http://baike.baidu.com/view/2274790.htm) -- 邹鑫 \n- [《浪潮之巅》](http://baike.baidu.com/view/2372837.htm) -- 吴军 \n\n\n\n","source":"_posts/2014-07-20-the-7-habits-of-outstanding-manager.md","raw":"---\nlayout: post\ntitle: 《卓越经理人的七个习惯》培训有感\ndate: 2014-07-20 21:37\ncomments: true\ncategories: [培训与交流]\n---\n\n最近公司组织了一次《卓越经理人的七个习惯》的培训，旨在提升管理层的管理水平，我很荣幸参与了这次课程的培训， 本次课程让我收获了很多，学习了很多，下面就谈谈这次培训的一些感悟吧！\n\n这次课程的内容主要是基于史蒂芬·柯维（Stephen R. Covey）的《高效能人士的七个习惯》并结合讲师独特的讲解手法， 通过案例、场景、现在模拟等方式，透彻的分析如何做好个人管理、建议人际关系、自我的持续提升。\n\n卓越经理人的七个习惯的自然法则和观念转移分别：\n\n自然法则\n人的反应不是受环境的制约，人有能力也有责任通过自主意识选择自己的反应。\n\n观念转移\n我们不要去总是去抱怨环境的不利、条件的限制和他人的缺失”，而应该考虑“在现有条件下我能做什么”。\n\n自然法则\n任何事物的创造需要经历两个过程，先想出来，再做出来。\n\n观念转移\n工作不能想做什么就做什么，做到哪里算哪里。 工作的第一步如何开展，过程中如何选择，都要根据最终的目标来进行。\n\n自然法则\n重要的少数往往决定结果的多数。\n\n观念转移\n我们在做事件时要以重要为依据而非紧急性。这样才能事半功倍。\n\n自然法则\n唯有双方都能获利，这样的关系才会长久。\n\n观念转移\n从我赢你输的小圈子里跳出来，用利人利已作为出发点来考虑人际问题。\n\n自然法则\n先诊断，再开药方。\n\n观念转移\n先理解别人再表达自己，为理解而去倾听，而不是为了反应而倾听。\n\n自然法则\n整体可以大于个体的总和。\n\n观念转移\n珍惜差异，善于从不同意见中吸取好的主意。\n\n自然法则\n产出和产能要平衡。\n\n观念转移\n我们需要自我更新，从而使自己走更远的路。磨刀不误砍柴功。\n\n通过这次培训，让我更深层次的了解“原则”的定义，并在如何应对生活层面、工作层面等复杂的环境方面得到提升， 同时学习到了思维模式的转变、四象限法则的运用、人际交往的整合等等。\n\n管理是一门艺术，需要主动积极、用心体会、用行动去描绘。\n\n最后给大家推荐两本书：\n\n- [《小强升职记》](http://baike.baidu.com/view/2274790.htm) -- 邹鑫 \n- [《浪潮之巅》](http://baike.baidu.com/view/2372837.htm) -- 吴军 \n\n\n\n","slug":"the-7-habits-of-outstanding-manager","published":1,"updated":"2018-05-30T08:12:15.863Z","photos":[],"link":"","_id":"cjhubytkf001uyis596bvnaq6","content":"<p>最近公司组织了一次《卓越经理人的七个习惯》的培训，旨在提升管理层的管理水平，我很荣幸参与了这次课程的培训， 本次课程让我收获了很多，学习了很多，下面就谈谈这次培训的一些感悟吧！</p>\n<p>这次课程的内容主要是基于史蒂芬·柯维（Stephen R. Covey）的《高效能人士的七个习惯》并结合讲师独特的讲解手法， 通过案例、场景、现在模拟等方式，透彻的分析如何做好个人管理、建议人际关系、自我的持续提升。</p>\n<p>卓越经理人的七个习惯的自然法则和观念转移分别：</p>\n<p>自然法则<br>人的反应不是受环境的制约，人有能力也有责任通过自主意识选择自己的反应。</p>\n<p>观念转移<br>我们不要去总是去抱怨环境的不利、条件的限制和他人的缺失”，而应该考虑“在现有条件下我能做什么”。</p>\n<p>自然法则<br>任何事物的创造需要经历两个过程，先想出来，再做出来。</p>\n<p>观念转移<br>工作不能想做什么就做什么，做到哪里算哪里。 工作的第一步如何开展，过程中如何选择，都要根据最终的目标来进行。</p>\n<p>自然法则<br>重要的少数往往决定结果的多数。</p>\n<p>观念转移<br>我们在做事件时要以重要为依据而非紧急性。这样才能事半功倍。</p>\n<p>自然法则<br>唯有双方都能获利，这样的关系才会长久。</p>\n<p>观念转移<br>从我赢你输的小圈子里跳出来，用利人利已作为出发点来考虑人际问题。</p>\n<p>自然法则<br>先诊断，再开药方。</p>\n<p>观念转移<br>先理解别人再表达自己，为理解而去倾听，而不是为了反应而倾听。</p>\n<p>自然法则<br>整体可以大于个体的总和。</p>\n<p>观念转移<br>珍惜差异，善于从不同意见中吸取好的主意。</p>\n<p>自然法则<br>产出和产能要平衡。</p>\n<p>观念转移<br>我们需要自我更新，从而使自己走更远的路。磨刀不误砍柴功。</p>\n<p>通过这次培训，让我更深层次的了解“原则”的定义，并在如何应对生活层面、工作层面等复杂的环境方面得到提升， 同时学习到了思维模式的转变、四象限法则的运用、人际交往的整合等等。</p>\n<p>管理是一门艺术，需要主动积极、用心体会、用行动去描绘。</p>\n<p>最后给大家推荐两本书：</p>\n<ul>\n<li><a href=\"http://baike.baidu.com/view/2274790.htm\" target=\"_blank\" rel=\"noopener\">《小强升职记》</a> – 邹鑫 </li>\n<li><a href=\"http://baike.baidu.com/view/2372837.htm\" target=\"_blank\" rel=\"noopener\">《浪潮之巅》</a> – 吴军 </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>最近公司组织了一次《卓越经理人的七个习惯》的培训，旨在提升管理层的管理水平，我很荣幸参与了这次课程的培训， 本次课程让我收获了很多，学习了很多，下面就谈谈这次培训的一些感悟吧！</p>\n<p>这次课程的内容主要是基于史蒂芬·柯维（Stephen R. Covey）的《高效能人士的七个习惯》并结合讲师独特的讲解手法， 通过案例、场景、现在模拟等方式，透彻的分析如何做好个人管理、建议人际关系、自我的持续提升。</p>\n<p>卓越经理人的七个习惯的自然法则和观念转移分别：</p>\n<p>自然法则<br>人的反应不是受环境的制约，人有能力也有责任通过自主意识选择自己的反应。</p>\n<p>观念转移<br>我们不要去总是去抱怨环境的不利、条件的限制和他人的缺失”，而应该考虑“在现有条件下我能做什么”。</p>\n<p>自然法则<br>任何事物的创造需要经历两个过程，先想出来，再做出来。</p>\n<p>观念转移<br>工作不能想做什么就做什么，做到哪里算哪里。 工作的第一步如何开展，过程中如何选择，都要根据最终的目标来进行。</p>\n<p>自然法则<br>重要的少数往往决定结果的多数。</p>\n<p>观念转移<br>我们在做事件时要以重要为依据而非紧急性。这样才能事半功倍。</p>\n<p>自然法则<br>唯有双方都能获利，这样的关系才会长久。</p>\n<p>观念转移<br>从我赢你输的小圈子里跳出来，用利人利已作为出发点来考虑人际问题。</p>\n<p>自然法则<br>先诊断，再开药方。</p>\n<p>观念转移<br>先理解别人再表达自己，为理解而去倾听，而不是为了反应而倾听。</p>\n<p>自然法则<br>整体可以大于个体的总和。</p>\n<p>观念转移<br>珍惜差异，善于从不同意见中吸取好的主意。</p>\n<p>自然法则<br>产出和产能要平衡。</p>\n<p>观念转移<br>我们需要自我更新，从而使自己走更远的路。磨刀不误砍柴功。</p>\n<p>通过这次培训，让我更深层次的了解“原则”的定义，并在如何应对生活层面、工作层面等复杂的环境方面得到提升， 同时学习到了思维模式的转变、四象限法则的运用、人际交往的整合等等。</p>\n<p>管理是一门艺术，需要主动积极、用心体会、用行动去描绘。</p>\n<p>最后给大家推荐两本书：</p>\n<ul>\n<li><a href=\"http://baike.baidu.com/view/2274790.htm\" target=\"_blank\" rel=\"noopener\">《小强升职记》</a> – 邹鑫 </li>\n<li><a href=\"http://baike.baidu.com/view/2372837.htm\" target=\"_blank\" rel=\"noopener\">《浪潮之巅》</a> – 吴军 </li>\n</ul>\n"},{"layout":"post","title":"2014年终总结","date":"2015-01-10T12:56:00.000Z","comments":1,"_content":"\n2014年过去了，有些计划还没开始就已经结束，这一年失去了许多，但也收获了不少，2015年来了，值得回顾与总结一番。\n\n还记得2013年底时，被口头上任命为项目经理（项目master），开始协助管理项目组内外的各项工作。转眼间一年过去了，在这一年里经历了产品、设计、研发、测试、运营、商务等各环节沟通交流与协助，也有多次参与了公司培训、内部交流、外部学习与交流等的机会，从多方面提升了个人综合能力，我想这应该就是今年最好的收获，在此感谢公司、感谢领导、感谢每位不伙伴，特别感谢@sam、@大大、@valleykid和研发小组的每位同学的支持。\n\n今年写的博客并不多，平均一个月一篇都不到，字应该到码到工作汇报和总结上去了。技术方面主要还是宽度的拓展，看的多动的少，期间虽然也看了些书籍《Backbone.js开发秘笈》、《Node.js开发实战详解》、《Javascript 框架设计》、《HTML5 Canvas开发详解》、《Object-C 基本教程》等，但没有深入研究和大量在项目中使用。\n\n今年比较痛心的是---奶奶去世了！在所有家里人都回去的那段时间里，我感受体会到了亲情的可贵、友情的重要、现实与理想的差距。我想以后要正面对人生，做好自己，让生活更精彩。\n\n###五、新年计划\n\n2014年是在“无状态”下度过的，虽然经历了很多，但没有提炼、没有总结、没有按着规划的方向前进。好在今年有太多的事情让我感悟到，适合地做些规划和总结，多了一些动力。年底总结也就多了些评判。\n\n简单地列举如下：\n\n1. 管理水平的提升：时间管理和项目管理\n2. 技术水平的提升：宽度和深度\n3. 开发一套UI组件，制定相关规范，提升团队效率\n4. 学车考驾照\n5. 建房子\n6. 拍婚纱照和订婚（收获与娟儿五年的恋爱）\n7. 至少和女朋友一次国内长途旅游，一次出国旅游\n8. 加强对家人的陪伴和对朋友的维护\n\n\n\n","source":"_posts/2015-01-10-2014-year.md","raw":"---\nlayout: post\ntitle: 2014年终总结\ndate: 2015-01-10 20:56\ncomments: true\ncategories: [工作与生活]\n---\n\n2014年过去了，有些计划还没开始就已经结束，这一年失去了许多，但也收获了不少，2015年来了，值得回顾与总结一番。\n\n还记得2013年底时，被口头上任命为项目经理（项目master），开始协助管理项目组内外的各项工作。转眼间一年过去了，在这一年里经历了产品、设计、研发、测试、运营、商务等各环节沟通交流与协助，也有多次参与了公司培训、内部交流、外部学习与交流等的机会，从多方面提升了个人综合能力，我想这应该就是今年最好的收获，在此感谢公司、感谢领导、感谢每位不伙伴，特别感谢@sam、@大大、@valleykid和研发小组的每位同学的支持。\n\n今年写的博客并不多，平均一个月一篇都不到，字应该到码到工作汇报和总结上去了。技术方面主要还是宽度的拓展，看的多动的少，期间虽然也看了些书籍《Backbone.js开发秘笈》、《Node.js开发实战详解》、《Javascript 框架设计》、《HTML5 Canvas开发详解》、《Object-C 基本教程》等，但没有深入研究和大量在项目中使用。\n\n今年比较痛心的是---奶奶去世了！在所有家里人都回去的那段时间里，我感受体会到了亲情的可贵、友情的重要、现实与理想的差距。我想以后要正面对人生，做好自己，让生活更精彩。\n\n###五、新年计划\n\n2014年是在“无状态”下度过的，虽然经历了很多，但没有提炼、没有总结、没有按着规划的方向前进。好在今年有太多的事情让我感悟到，适合地做些规划和总结，多了一些动力。年底总结也就多了些评判。\n\n简单地列举如下：\n\n1. 管理水平的提升：时间管理和项目管理\n2. 技术水平的提升：宽度和深度\n3. 开发一套UI组件，制定相关规范，提升团队效率\n4. 学车考驾照\n5. 建房子\n6. 拍婚纱照和订婚（收获与娟儿五年的恋爱）\n7. 至少和女朋友一次国内长途旅游，一次出国旅游\n8. 加强对家人的陪伴和对朋友的维护\n\n\n\n","slug":"2014-year","published":1,"updated":"2018-05-30T08:12:15.864Z","photos":[],"link":"","_id":"cjhubytkh001wyis5gaatkuoi","content":"<p>2014年过去了，有些计划还没开始就已经结束，这一年失去了许多，但也收获了不少，2015年来了，值得回顾与总结一番。</p>\n<p>还记得2013年底时，被口头上任命为项目经理（项目master），开始协助管理项目组内外的各项工作。转眼间一年过去了，在这一年里经历了产品、设计、研发、测试、运营、商务等各环节沟通交流与协助，也有多次参与了公司培训、内部交流、外部学习与交流等的机会，从多方面提升了个人综合能力，我想这应该就是今年最好的收获，在此感谢公司、感谢领导、感谢每位不伙伴，特别感谢@sam、@大大、@valleykid和研发小组的每位同学的支持。</p>\n<p>今年写的博客并不多，平均一个月一篇都不到，字应该到码到工作汇报和总结上去了。技术方面主要还是宽度的拓展，看的多动的少，期间虽然也看了些书籍《Backbone.js开发秘笈》、《Node.js开发实战详解》、《Javascript 框架设计》、《HTML5 Canvas开发详解》、《Object-C 基本教程》等，但没有深入研究和大量在项目中使用。</p>\n<p>今年比较痛心的是—奶奶去世了！在所有家里人都回去的那段时间里，我感受体会到了亲情的可贵、友情的重要、现实与理想的差距。我想以后要正面对人生，做好自己，让生活更精彩。</p>\n<p>###五、新年计划</p>\n<p>2014年是在“无状态”下度过的，虽然经历了很多，但没有提炼、没有总结、没有按着规划的方向前进。好在今年有太多的事情让我感悟到，适合地做些规划和总结，多了一些动力。年底总结也就多了些评判。</p>\n<p>简单地列举如下：</p>\n<ol>\n<li>管理水平的提升：时间管理和项目管理</li>\n<li>技术水平的提升：宽度和深度</li>\n<li>开发一套UI组件，制定相关规范，提升团队效率</li>\n<li>学车考驾照</li>\n<li>建房子</li>\n<li>拍婚纱照和订婚（收获与娟儿五年的恋爱）</li>\n<li>至少和女朋友一次国内长途旅游，一次出国旅游</li>\n<li>加强对家人的陪伴和对朋友的维护</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>2014年过去了，有些计划还没开始就已经结束，这一年失去了许多，但也收获了不少，2015年来了，值得回顾与总结一番。</p>\n<p>还记得2013年底时，被口头上任命为项目经理（项目master），开始协助管理项目组内外的各项工作。转眼间一年过去了，在这一年里经历了产品、设计、研发、测试、运营、商务等各环节沟通交流与协助，也有多次参与了公司培训、内部交流、外部学习与交流等的机会，从多方面提升了个人综合能力，我想这应该就是今年最好的收获，在此感谢公司、感谢领导、感谢每位不伙伴，特别感谢@sam、@大大、@valleykid和研发小组的每位同学的支持。</p>\n<p>今年写的博客并不多，平均一个月一篇都不到，字应该到码到工作汇报和总结上去了。技术方面主要还是宽度的拓展，看的多动的少，期间虽然也看了些书籍《Backbone.js开发秘笈》、《Node.js开发实战详解》、《Javascript 框架设计》、《HTML5 Canvas开发详解》、《Object-C 基本教程》等，但没有深入研究和大量在项目中使用。</p>\n<p>今年比较痛心的是—奶奶去世了！在所有家里人都回去的那段时间里，我感受体会到了亲情的可贵、友情的重要、现实与理想的差距。我想以后要正面对人生，做好自己，让生活更精彩。</p>\n<p>###五、新年计划</p>\n<p>2014年是在“无状态”下度过的，虽然经历了很多，但没有提炼、没有总结、没有按着规划的方向前进。好在今年有太多的事情让我感悟到，适合地做些规划和总结，多了一些动力。年底总结也就多了些评判。</p>\n<p>简单地列举如下：</p>\n<ol>\n<li>管理水平的提升：时间管理和项目管理</li>\n<li>技术水平的提升：宽度和深度</li>\n<li>开发一套UI组件，制定相关规范，提升团队效率</li>\n<li>学车考驾照</li>\n<li>建房子</li>\n<li>拍婚纱照和订婚（收获与娟儿五年的恋爱）</li>\n<li>至少和女朋友一次国内长途旅游，一次出国旅游</li>\n<li>加强对家人的陪伴和对朋友的维护</li>\n</ol>\n"},{"layout":"post","title":"快速提升前端开发工作效率的总结","date":"2015-02-27T13:39:00.000Z","comments":1,"_content":"\n近期在考虑团队建设以及前端小组的效率提升，故对前端开发过程中效率的提升做了个简单的总结，同时\n也希望对前端新人有点帮助。\n\n###选择一个好的编辑器，并熟练使用她（他）\n\n一个好的编辑器，至少应该具备：\n\n- 语法高亮\n- 括号匹配\n- 能快速定位\n    - 快速打开文件\n    - 在文件中查找\n    - 在文件夹中查找\n    - 跳至某一行\n- 能安装插件\n\n**推荐编辑器：** [SublimeText](http://www.sublimetext.com/) [Hbuilder](http://www.dcloud.io/) [Intellij IDEA](http://www.jetbrains.com/idea/)\n\n###能熟练使用一个前端调试工具\n\n一个好的前端调试工具，应该具备：\n\n- 网络请求数据查看\n- 审查元素\n- 打断点和断点调试\n- 控制台打印log\n\n**PC端推荐调试工具：** 谷歌浏览器（chrome） 火狐游览器（firefox） 苹果浏览器（safari）\n\n**移动端推荐调试工具：** 谷歌浏览器（chrome） 苹果浏览器（safari） weinre UC浏览器\n\n\n###良好的前端开发辅助环境\n\n前端模板、初始化项目、组件依赖管理、工具集等\n\n- [Yeoman](http://yeoman.io/) 项目脚手架\n- [Bower](http://bower.io/) 依赖管理\n- [Grunt](http://gruntjs.com/) 前端构件工具\n- [node](http://nodejs.org) 前端工具开发和运行环境\n- [less](http://lesscss.org/) css预编译\n\n###文档规范\n\n一个快速发展中的技术小组，应该具备：\n\n- 需求文档（PM）\n- 视觉规范（设计）\n- 接口文档（开发）\n- 代码规范（风格与全名等）\n\n###其他\n\n当然还可以通过其他方式以及相关的组合来提升效率，例如：\n\nsvn、git、ruby、compass、yuicompress、coffeescript、[代码片段](http://css-tricks.com/snippets/)、[模板页面](https://html5boilerplate.com/)、[bootstrap](http://v3.bootcss.com/)、[前端常用插件](https://github.com/iamjoel/front-end-plugins)\n\n最后的最后，欢迎大家来补充~\n\n\n\n\n\n\n","source":"_posts/2015-02-27-how-to-improve-the-efficiency-of-fe-develop.md","raw":"---\nlayout: post\ntitle: 快速提升前端开发工作效率的总结\ndate: 2015-02-27 21:39\ncomments: true\ncategories: [前端开发]\n---\n\n近期在考虑团队建设以及前端小组的效率提升，故对前端开发过程中效率的提升做了个简单的总结，同时\n也希望对前端新人有点帮助。\n\n###选择一个好的编辑器，并熟练使用她（他）\n\n一个好的编辑器，至少应该具备：\n\n- 语法高亮\n- 括号匹配\n- 能快速定位\n    - 快速打开文件\n    - 在文件中查找\n    - 在文件夹中查找\n    - 跳至某一行\n- 能安装插件\n\n**推荐编辑器：** [SublimeText](http://www.sublimetext.com/) [Hbuilder](http://www.dcloud.io/) [Intellij IDEA](http://www.jetbrains.com/idea/)\n\n###能熟练使用一个前端调试工具\n\n一个好的前端调试工具，应该具备：\n\n- 网络请求数据查看\n- 审查元素\n- 打断点和断点调试\n- 控制台打印log\n\n**PC端推荐调试工具：** 谷歌浏览器（chrome） 火狐游览器（firefox） 苹果浏览器（safari）\n\n**移动端推荐调试工具：** 谷歌浏览器（chrome） 苹果浏览器（safari） weinre UC浏览器\n\n\n###良好的前端开发辅助环境\n\n前端模板、初始化项目、组件依赖管理、工具集等\n\n- [Yeoman](http://yeoman.io/) 项目脚手架\n- [Bower](http://bower.io/) 依赖管理\n- [Grunt](http://gruntjs.com/) 前端构件工具\n- [node](http://nodejs.org) 前端工具开发和运行环境\n- [less](http://lesscss.org/) css预编译\n\n###文档规范\n\n一个快速发展中的技术小组，应该具备：\n\n- 需求文档（PM）\n- 视觉规范（设计）\n- 接口文档（开发）\n- 代码规范（风格与全名等）\n\n###其他\n\n当然还可以通过其他方式以及相关的组合来提升效率，例如：\n\nsvn、git、ruby、compass、yuicompress、coffeescript、[代码片段](http://css-tricks.com/snippets/)、[模板页面](https://html5boilerplate.com/)、[bootstrap](http://v3.bootcss.com/)、[前端常用插件](https://github.com/iamjoel/front-end-plugins)\n\n最后的最后，欢迎大家来补充~\n\n\n\n\n\n\n","slug":"how-to-improve-the-efficiency-of-fe-develop","published":1,"updated":"2018-05-30T08:12:15.865Z","photos":[],"link":"","_id":"cjhubytki001yyis5q8d8a8nk","content":"<p>近期在考虑团队建设以及前端小组的效率提升，故对前端开发过程中效率的提升做了个简单的总结，同时<br>也希望对前端新人有点帮助。</p>\n<p>###选择一个好的编辑器，并熟练使用她（他）</p>\n<p>一个好的编辑器，至少应该具备：</p>\n<ul>\n<li>语法高亮</li>\n<li>括号匹配</li>\n<li>能快速定位<ul>\n<li>快速打开文件</li>\n<li>在文件中查找</li>\n<li>在文件夹中查找</li>\n<li>跳至某一行</li>\n</ul>\n</li>\n<li>能安装插件</li>\n</ul>\n<p><strong>推荐编辑器：</strong> <a href=\"http://www.sublimetext.com/\" target=\"_blank\" rel=\"noopener\">SublimeText</a> <a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">Hbuilder</a> <a href=\"http://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener\">Intellij IDEA</a></p>\n<p>###能熟练使用一个前端调试工具</p>\n<p>一个好的前端调试工具，应该具备：</p>\n<ul>\n<li>网络请求数据查看</li>\n<li>审查元素</li>\n<li>打断点和断点调试</li>\n<li>控制台打印log</li>\n</ul>\n<p><strong>PC端推荐调试工具：</strong> 谷歌浏览器（chrome） 火狐游览器（firefox） 苹果浏览器（safari）</p>\n<p><strong>移动端推荐调试工具：</strong> 谷歌浏览器（chrome） 苹果浏览器（safari） weinre UC浏览器</p>\n<p>###良好的前端开发辅助环境</p>\n<p>前端模板、初始化项目、组件依赖管理、工具集等</p>\n<ul>\n<li><a href=\"http://yeoman.io/\" target=\"_blank\" rel=\"noopener\">Yeoman</a> 项目脚手架</li>\n<li><a href=\"http://bower.io/\" target=\"_blank\" rel=\"noopener\">Bower</a> 依赖管理</li>\n<li><a href=\"http://gruntjs.com/\" target=\"_blank\" rel=\"noopener\">Grunt</a> 前端构件工具</li>\n<li><a href=\"http://nodejs.org\" target=\"_blank\" rel=\"noopener\">node</a> 前端工具开发和运行环境</li>\n<li><a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">less</a> css预编译</li>\n</ul>\n<p>###文档规范</p>\n<p>一个快速发展中的技术小组，应该具备：</p>\n<ul>\n<li>需求文档（PM）</li>\n<li>视觉规范（设计）</li>\n<li>接口文档（开发）</li>\n<li>代码规范（风格与全名等）</li>\n</ul>\n<p>###其他</p>\n<p>当然还可以通过其他方式以及相关的组合来提升效率，例如：</p>\n<p>svn、git、ruby、compass、yuicompress、coffeescript、<a href=\"http://css-tricks.com/snippets/\" target=\"_blank\" rel=\"noopener\">代码片段</a>、<a href=\"https://html5boilerplate.com/\" target=\"_blank\" rel=\"noopener\">模板页面</a>、<a href=\"http://v3.bootcss.com/\" target=\"_blank\" rel=\"noopener\">bootstrap</a>、<a href=\"https://github.com/iamjoel/front-end-plugins\" target=\"_blank\" rel=\"noopener\">前端常用插件</a></p>\n<p>最后的最后，欢迎大家来补充~</p>\n","site":{"data":{}},"excerpt":"","more":"<p>近期在考虑团队建设以及前端小组的效率提升，故对前端开发过程中效率的提升做了个简单的总结，同时<br>也希望对前端新人有点帮助。</p>\n<p>###选择一个好的编辑器，并熟练使用她（他）</p>\n<p>一个好的编辑器，至少应该具备：</p>\n<ul>\n<li>语法高亮</li>\n<li>括号匹配</li>\n<li>能快速定位<ul>\n<li>快速打开文件</li>\n<li>在文件中查找</li>\n<li>在文件夹中查找</li>\n<li>跳至某一行</li>\n</ul>\n</li>\n<li>能安装插件</li>\n</ul>\n<p><strong>推荐编辑器：</strong> <a href=\"http://www.sublimetext.com/\" target=\"_blank\" rel=\"noopener\">SublimeText</a> <a href=\"http://www.dcloud.io/\" target=\"_blank\" rel=\"noopener\">Hbuilder</a> <a href=\"http://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noopener\">Intellij IDEA</a></p>\n<p>###能熟练使用一个前端调试工具</p>\n<p>一个好的前端调试工具，应该具备：</p>\n<ul>\n<li>网络请求数据查看</li>\n<li>审查元素</li>\n<li>打断点和断点调试</li>\n<li>控制台打印log</li>\n</ul>\n<p><strong>PC端推荐调试工具：</strong> 谷歌浏览器（chrome） 火狐游览器（firefox） 苹果浏览器（safari）</p>\n<p><strong>移动端推荐调试工具：</strong> 谷歌浏览器（chrome） 苹果浏览器（safari） weinre UC浏览器</p>\n<p>###良好的前端开发辅助环境</p>\n<p>前端模板、初始化项目、组件依赖管理、工具集等</p>\n<ul>\n<li><a href=\"http://yeoman.io/\" target=\"_blank\" rel=\"noopener\">Yeoman</a> 项目脚手架</li>\n<li><a href=\"http://bower.io/\" target=\"_blank\" rel=\"noopener\">Bower</a> 依赖管理</li>\n<li><a href=\"http://gruntjs.com/\" target=\"_blank\" rel=\"noopener\">Grunt</a> 前端构件工具</li>\n<li><a href=\"http://nodejs.org\" target=\"_blank\" rel=\"noopener\">node</a> 前端工具开发和运行环境</li>\n<li><a href=\"http://lesscss.org/\" target=\"_blank\" rel=\"noopener\">less</a> css预编译</li>\n</ul>\n<p>###文档规范</p>\n<p>一个快速发展中的技术小组，应该具备：</p>\n<ul>\n<li>需求文档（PM）</li>\n<li>视觉规范（设计）</li>\n<li>接口文档（开发）</li>\n<li>代码规范（风格与全名等）</li>\n</ul>\n<p>###其他</p>\n<p>当然还可以通过其他方式以及相关的组合来提升效率，例如：</p>\n<p>svn、git、ruby、compass、yuicompress、coffeescript、<a href=\"http://css-tricks.com/snippets/\" target=\"_blank\" rel=\"noopener\">代码片段</a>、<a href=\"https://html5boilerplate.com/\" target=\"_blank\" rel=\"noopener\">模板页面</a>、<a href=\"http://v3.bootcss.com/\" target=\"_blank\" rel=\"noopener\">bootstrap</a>、<a href=\"https://github.com/iamjoel/front-end-plugins\" target=\"_blank\" rel=\"noopener\">前端常用插件</a></p>\n<p>最后的最后，欢迎大家来补充~</p>\n"},{"layout":"post","title":"Linux命令行和Shell高效率使用方法(转)","date":"2015-02-27T08:24:00.000Z","comments":1,"_content":"\n###快速调用history中的命令\n\n- Ctrl+R快速搜索history \n- Ctrl+P显示上一条命令\n- 快速执行一条history命令：!!/!-number\n\n###快速进入某些目录\n\n- 键入cd～可直接进入用户的home目录；\n- 键入cd－可进入上一个目录。\n- export CDPATH=.:~:/etc:/usr/local\n- mkdir -p /***/***/***/\n- alias cd3=\"cd ../../../\"\n\n###一次运行多个命令\n\n- 在一个命令行中还可以置入多个命令，用分号将各个命令隔开\n- $last;exit\n- $make && make install\n\n###命令行下快捷键\n\n- Ctrl+a：把光标移到行首。\n- Ctrl+e：把光标移到行尾。\n- Ctrl+l：清除终端。该快捷操作与在命令行键入clear作用相同。\n- Ctrl+d：从Shell提示中注销并关闭，使用该快捷键就不必键入exit\n- Ctrl+u：删除光标至行首的所有字符,使用这一快捷操作可以清除从光标处到行首的字符\n- Ctrl+K：删除从光标到行末所有字符。\n- Ctrl+t：新建屏幕。\n- Alt+1到9：选择屏幕。\n- Ctrl + F :向前移动一个字符。\n- Ctrl + B :向后移动一个字符\n- Alt + F : 向前移动一个单词。\n- Alt + B : 向后移动一个单词。\n\n###在文件里查找\n\n    grep -rlI '\\<main' .\n    find -type f -name *.java -exec grep -l '\\<main' {} \\;\n\n###快速的建立一个文件\n\n    cat >> filename ，输入一些内容然后按Ctrl-d结束输入。\n\n###将文本文件中DOS换行符号转化为UNIX的换行符号\n\n    tr -s \"\\r\" \"\\n\" <inputfile\n    tr -s \"\\r\" \"\\n\" <inputfile >outputfile\n\n###当然你使用vim编辑文件时，vim也提供文件转换功能\n\n    // 整个文件大小写转换\n    tr a-z A-Z < **.txt\n    tr A-Z a-z < **.txt\n\n###Shell 脚本\n\n- $0为程序名称，$1为第一个参数，$2为第二个参数，依次类推，直到$9为第九个参数。\n- 特殊变量$#测试执行脚本时包含的命令行参数个数。\n- 变量$*将命令行中提供的所有参数作为一个单词处理，它将多个参数看成 一个参数。\n- 变量$@将命令行中提供的所有参数作为同一个字符串中的多个单词处理。 \n- shift命令能够改变命令行参数的相对位置。默 认将每个参数变量左移一个位置\n- 使用-t指定一个计时器，计时数满还未输入，read返回一个非0的退出状态。\n- 使用-n指定输入的字符个数，输入达到预定数目时，就自动结束输入\n- 使用-s使输入不显示在终端（例如输入密码）\n- shell 调试 set -xv\n- dstat & sar\n- iostat, vmstat, ifstat 三合一的工具，用来查看系统性能。\n- 官方网站：http://dag.wieers.com/rpm/packages/dstat/\n- 你可以这样使用：\n- alias dstat='dstat -cdlmnpsy'\n\n###vim 命令：\n\n- 查找一个字符：fx\n- 重复上次find:  ;\n- 重复执行上次：.\n- w 下一个单词开始字符\n- e 下一个单词结束字符\n- b 上一个单词开始字符\n- H M L 目前屏幕的第一行,中间行，最后一行\n- gg G 文件的第一行和最后一行\n- 拷贝到指定寄存器：yt{标识符}   \n- Ctrl + r{register}调出寄存器的值\n- 分割窗口：split  vsplit\n- 超级自动补全：ctrl-N\n- 转到一个变量定义的位置: gd(文件)  gD(全局)\n- 快速查询命令 :K 2K\n- 匹配花括号：%\n- 选取标志符的内容：va{       vit     vi{\n- 修改标示符的内容：ci{标识符}\n- 删除标志符的内容：di\"\n- 删除指定行前的内容：:10,20g/^$/d\n\n\n原文来自：[http://www.cnblogs.com/thinksasa/p/3507714.html](http://www.cnblogs.com/thinksasa/p/3507714.html)","source":"_posts/2015-02-27-quick-start-guide-of-shell-command.md","raw":"---\nlayout: post\ntitle: Linux命令行和Shell高效率使用方法(转)\ndate: 2015-02-27 16:24\ncomments: true\ncategories: [引用]\n---\n\n###快速调用history中的命令\n\n- Ctrl+R快速搜索history \n- Ctrl+P显示上一条命令\n- 快速执行一条history命令：!!/!-number\n\n###快速进入某些目录\n\n- 键入cd～可直接进入用户的home目录；\n- 键入cd－可进入上一个目录。\n- export CDPATH=.:~:/etc:/usr/local\n- mkdir -p /***/***/***/\n- alias cd3=\"cd ../../../\"\n\n###一次运行多个命令\n\n- 在一个命令行中还可以置入多个命令，用分号将各个命令隔开\n- $last;exit\n- $make && make install\n\n###命令行下快捷键\n\n- Ctrl+a：把光标移到行首。\n- Ctrl+e：把光标移到行尾。\n- Ctrl+l：清除终端。该快捷操作与在命令行键入clear作用相同。\n- Ctrl+d：从Shell提示中注销并关闭，使用该快捷键就不必键入exit\n- Ctrl+u：删除光标至行首的所有字符,使用这一快捷操作可以清除从光标处到行首的字符\n- Ctrl+K：删除从光标到行末所有字符。\n- Ctrl+t：新建屏幕。\n- Alt+1到9：选择屏幕。\n- Ctrl + F :向前移动一个字符。\n- Ctrl + B :向后移动一个字符\n- Alt + F : 向前移动一个单词。\n- Alt + B : 向后移动一个单词。\n\n###在文件里查找\n\n    grep -rlI '\\<main' .\n    find -type f -name *.java -exec grep -l '\\<main' {} \\;\n\n###快速的建立一个文件\n\n    cat >> filename ，输入一些内容然后按Ctrl-d结束输入。\n\n###将文本文件中DOS换行符号转化为UNIX的换行符号\n\n    tr -s \"\\r\" \"\\n\" <inputfile\n    tr -s \"\\r\" \"\\n\" <inputfile >outputfile\n\n###当然你使用vim编辑文件时，vim也提供文件转换功能\n\n    // 整个文件大小写转换\n    tr a-z A-Z < **.txt\n    tr A-Z a-z < **.txt\n\n###Shell 脚本\n\n- $0为程序名称，$1为第一个参数，$2为第二个参数，依次类推，直到$9为第九个参数。\n- 特殊变量$#测试执行脚本时包含的命令行参数个数。\n- 变量$*将命令行中提供的所有参数作为一个单词处理，它将多个参数看成 一个参数。\n- 变量$@将命令行中提供的所有参数作为同一个字符串中的多个单词处理。 \n- shift命令能够改变命令行参数的相对位置。默 认将每个参数变量左移一个位置\n- 使用-t指定一个计时器，计时数满还未输入，read返回一个非0的退出状态。\n- 使用-n指定输入的字符个数，输入达到预定数目时，就自动结束输入\n- 使用-s使输入不显示在终端（例如输入密码）\n- shell 调试 set -xv\n- dstat & sar\n- iostat, vmstat, ifstat 三合一的工具，用来查看系统性能。\n- 官方网站：http://dag.wieers.com/rpm/packages/dstat/\n- 你可以这样使用：\n- alias dstat='dstat -cdlmnpsy'\n\n###vim 命令：\n\n- 查找一个字符：fx\n- 重复上次find:  ;\n- 重复执行上次：.\n- w 下一个单词开始字符\n- e 下一个单词结束字符\n- b 上一个单词开始字符\n- H M L 目前屏幕的第一行,中间行，最后一行\n- gg G 文件的第一行和最后一行\n- 拷贝到指定寄存器：yt{标识符}   \n- Ctrl + r{register}调出寄存器的值\n- 分割窗口：split  vsplit\n- 超级自动补全：ctrl-N\n- 转到一个变量定义的位置: gd(文件)  gD(全局)\n- 快速查询命令 :K 2K\n- 匹配花括号：%\n- 选取标志符的内容：va{       vit     vi{\n- 修改标示符的内容：ci{标识符}\n- 删除标志符的内容：di\"\n- 删除指定行前的内容：:10,20g/^$/d\n\n\n原文来自：[http://www.cnblogs.com/thinksasa/p/3507714.html](http://www.cnblogs.com/thinksasa/p/3507714.html)","slug":"quick-start-guide-of-shell-command","published":1,"updated":"2018-05-30T08:12:15.866Z","photos":[],"link":"","_id":"cjhubytkj0020yis5qdr6y9r8","content":"<p>###快速调用history中的命令</p>\n<ul>\n<li>Ctrl+R快速搜索history </li>\n<li>Ctrl+P显示上一条命令</li>\n<li>快速执行一条history命令：!!/!-number</li>\n</ul>\n<p>###快速进入某些目录</p>\n<ul>\n<li>键入cd～可直接进入用户的home目录；</li>\n<li>键入cd－可进入上一个目录。</li>\n<li>export CDPATH=.:~:/etc:/usr/local</li>\n<li>mkdir -p /<strong><em>/</em></strong>/***/</li>\n<li>alias cd3=”cd ../../../“</li>\n</ul>\n<p>###一次运行多个命令</p>\n<ul>\n<li>在一个命令行中还可以置入多个命令，用分号将各个命令隔开</li>\n<li>$last;exit</li>\n<li>$make &amp;&amp; make install</li>\n</ul>\n<p>###命令行下快捷键</p>\n<ul>\n<li>Ctrl+a：把光标移到行首。</li>\n<li>Ctrl+e：把光标移到行尾。</li>\n<li>Ctrl+l：清除终端。该快捷操作与在命令行键入clear作用相同。</li>\n<li>Ctrl+d：从Shell提示中注销并关闭，使用该快捷键就不必键入exit</li>\n<li>Ctrl+u：删除光标至行首的所有字符,使用这一快捷操作可以清除从光标处到行首的字符</li>\n<li>Ctrl+K：删除从光标到行末所有字符。</li>\n<li>Ctrl+t：新建屏幕。</li>\n<li>Alt+1到9：选择屏幕。</li>\n<li>Ctrl + F :向前移动一个字符。</li>\n<li>Ctrl + B :向后移动一个字符</li>\n<li>Alt + F : 向前移动一个单词。</li>\n<li>Alt + B : 向后移动一个单词。</li>\n</ul>\n<p>###在文件里查找</p>\n<pre><code>grep -rlI &apos;\\&lt;main&apos; .\nfind -type f -name *.java -exec grep -l &apos;\\&lt;main&apos; {} \\;\n</code></pre><p>###快速的建立一个文件</p>\n<pre><code>cat &gt;&gt; filename ，输入一些内容然后按Ctrl-d结束输入。\n</code></pre><p>###将文本文件中DOS换行符号转化为UNIX的换行符号</p>\n<pre><code>tr -s &quot;\\r&quot; &quot;\\n&quot; &lt;inputfile\ntr -s &quot;\\r&quot; &quot;\\n&quot; &lt;inputfile &gt;outputfile\n</code></pre><p>###当然你使用vim编辑文件时，vim也提供文件转换功能</p>\n<pre><code>// 整个文件大小写转换\ntr a-z A-Z &lt; **.txt\ntr A-Z a-z &lt; **.txt\n</code></pre><p>###Shell 脚本</p>\n<ul>\n<li>$0为程序名称，$1为第一个参数，$2为第二个参数，依次类推，直到$9为第九个参数。</li>\n<li>特殊变量$#测试执行脚本时包含的命令行参数个数。</li>\n<li>变量$*将命令行中提供的所有参数作为一个单词处理，它将多个参数看成 一个参数。</li>\n<li>变量$@将命令行中提供的所有参数作为同一个字符串中的多个单词处理。 </li>\n<li>shift命令能够改变命令行参数的相对位置。默 认将每个参数变量左移一个位置</li>\n<li>使用-t指定一个计时器，计时数满还未输入，read返回一个非0的退出状态。</li>\n<li>使用-n指定输入的字符个数，输入达到预定数目时，就自动结束输入</li>\n<li>使用-s使输入不显示在终端（例如输入密码）</li>\n<li>shell 调试 set -xv</li>\n<li>dstat &amp; sar</li>\n<li>iostat, vmstat, ifstat 三合一的工具，用来查看系统性能。</li>\n<li>官方网站：<a href=\"http://dag.wieers.com/rpm/packages/dstat/\" target=\"_blank\" rel=\"noopener\">http://dag.wieers.com/rpm/packages/dstat/</a></li>\n<li>你可以这样使用：</li>\n<li>alias dstat=’dstat -cdlmnpsy’</li>\n</ul>\n<p>###vim 命令：</p>\n<ul>\n<li>查找一个字符：fx</li>\n<li>重复上次find:  ;</li>\n<li>重复执行上次：.</li>\n<li>w 下一个单词开始字符</li>\n<li>e 下一个单词结束字符</li>\n<li>b 上一个单词开始字符</li>\n<li>H M L 目前屏幕的第一行,中间行，最后一行</li>\n<li>gg G 文件的第一行和最后一行</li>\n<li>拷贝到指定寄存器：yt{标识符}   </li>\n<li>Ctrl + r{register}调出寄存器的值</li>\n<li>分割窗口：split  vsplit</li>\n<li>超级自动补全：ctrl-N</li>\n<li>转到一个变量定义的位置: gd(文件)  gD(全局)</li>\n<li>快速查询命令 :K 2K</li>\n<li>匹配花括号：%</li>\n<li>选取标志符的内容：va{       vit     vi{</li>\n<li>修改标示符的内容：ci{标识符}</li>\n<li>删除标志符的内容：di”</li>\n<li>删除指定行前的内容：:10,20g/^$/d</li>\n</ul>\n<p>原文来自：<a href=\"http://www.cnblogs.com/thinksasa/p/3507714.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/thinksasa/p/3507714.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>###快速调用history中的命令</p>\n<ul>\n<li>Ctrl+R快速搜索history </li>\n<li>Ctrl+P显示上一条命令</li>\n<li>快速执行一条history命令：!!/!-number</li>\n</ul>\n<p>###快速进入某些目录</p>\n<ul>\n<li>键入cd～可直接进入用户的home目录；</li>\n<li>键入cd－可进入上一个目录。</li>\n<li>export CDPATH=.:~:/etc:/usr/local</li>\n<li>mkdir -p /<strong><em>/</em></strong>/***/</li>\n<li>alias cd3=”cd ../../../“</li>\n</ul>\n<p>###一次运行多个命令</p>\n<ul>\n<li>在一个命令行中还可以置入多个命令，用分号将各个命令隔开</li>\n<li>$last;exit</li>\n<li>$make &amp;&amp; make install</li>\n</ul>\n<p>###命令行下快捷键</p>\n<ul>\n<li>Ctrl+a：把光标移到行首。</li>\n<li>Ctrl+e：把光标移到行尾。</li>\n<li>Ctrl+l：清除终端。该快捷操作与在命令行键入clear作用相同。</li>\n<li>Ctrl+d：从Shell提示中注销并关闭，使用该快捷键就不必键入exit</li>\n<li>Ctrl+u：删除光标至行首的所有字符,使用这一快捷操作可以清除从光标处到行首的字符</li>\n<li>Ctrl+K：删除从光标到行末所有字符。</li>\n<li>Ctrl+t：新建屏幕。</li>\n<li>Alt+1到9：选择屏幕。</li>\n<li>Ctrl + F :向前移动一个字符。</li>\n<li>Ctrl + B :向后移动一个字符</li>\n<li>Alt + F : 向前移动一个单词。</li>\n<li>Alt + B : 向后移动一个单词。</li>\n</ul>\n<p>###在文件里查找</p>\n<pre><code>grep -rlI &apos;\\&lt;main&apos; .\nfind -type f -name *.java -exec grep -l &apos;\\&lt;main&apos; {} \\;\n</code></pre><p>###快速的建立一个文件</p>\n<pre><code>cat &gt;&gt; filename ，输入一些内容然后按Ctrl-d结束输入。\n</code></pre><p>###将文本文件中DOS换行符号转化为UNIX的换行符号</p>\n<pre><code>tr -s &quot;\\r&quot; &quot;\\n&quot; &lt;inputfile\ntr -s &quot;\\r&quot; &quot;\\n&quot; &lt;inputfile &gt;outputfile\n</code></pre><p>###当然你使用vim编辑文件时，vim也提供文件转换功能</p>\n<pre><code>// 整个文件大小写转换\ntr a-z A-Z &lt; **.txt\ntr A-Z a-z &lt; **.txt\n</code></pre><p>###Shell 脚本</p>\n<ul>\n<li>$0为程序名称，$1为第一个参数，$2为第二个参数，依次类推，直到$9为第九个参数。</li>\n<li>特殊变量$#测试执行脚本时包含的命令行参数个数。</li>\n<li>变量$*将命令行中提供的所有参数作为一个单词处理，它将多个参数看成 一个参数。</li>\n<li>变量$@将命令行中提供的所有参数作为同一个字符串中的多个单词处理。 </li>\n<li>shift命令能够改变命令行参数的相对位置。默 认将每个参数变量左移一个位置</li>\n<li>使用-t指定一个计时器，计时数满还未输入，read返回一个非0的退出状态。</li>\n<li>使用-n指定输入的字符个数，输入达到预定数目时，就自动结束输入</li>\n<li>使用-s使输入不显示在终端（例如输入密码）</li>\n<li>shell 调试 set -xv</li>\n<li>dstat &amp; sar</li>\n<li>iostat, vmstat, ifstat 三合一的工具，用来查看系统性能。</li>\n<li>官方网站：<a href=\"http://dag.wieers.com/rpm/packages/dstat/\" target=\"_blank\" rel=\"noopener\">http://dag.wieers.com/rpm/packages/dstat/</a></li>\n<li>你可以这样使用：</li>\n<li>alias dstat=’dstat -cdlmnpsy’</li>\n</ul>\n<p>###vim 命令：</p>\n<ul>\n<li>查找一个字符：fx</li>\n<li>重复上次find:  ;</li>\n<li>重复执行上次：.</li>\n<li>w 下一个单词开始字符</li>\n<li>e 下一个单词结束字符</li>\n<li>b 上一个单词开始字符</li>\n<li>H M L 目前屏幕的第一行,中间行，最后一行</li>\n<li>gg G 文件的第一行和最后一行</li>\n<li>拷贝到指定寄存器：yt{标识符}   </li>\n<li>Ctrl + r{register}调出寄存器的值</li>\n<li>分割窗口：split  vsplit</li>\n<li>超级自动补全：ctrl-N</li>\n<li>转到一个变量定义的位置: gd(文件)  gD(全局)</li>\n<li>快速查询命令 :K 2K</li>\n<li>匹配花括号：%</li>\n<li>选取标志符的内容：va{       vit     vi{</li>\n<li>修改标示符的内容：ci{标识符}</li>\n<li>删除标志符的内容：di”</li>\n<li>删除指定行前的内容：:10,20g/^$/d</li>\n</ul>\n<p>原文来自：<a href=\"http://www.cnblogs.com/thinksasa/p/3507714.html\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/thinksasa/p/3507714.html</a></p>\n"},{"layout":"post","title":"决择","date":"2015-03-02T17:26:00.000Z","comments":1,"_content":"\n还记得在14年总结的时候提到过今年的规划，今天终于做下了这个决择，无论是否对错。\n\n一直以来我总是徘徊在技术与管理之间，但是我觉得这里的“度”我把握的不是很好。最近在和朋友交流中，其实发现自己现在遇到了一些瓶颈，在管理方面，经验不是很丰富，在技术方面，虽然有一定的宽度，但是深度自己还是比较清楚的。因此今天我调整了一下个人的方向，具体如下：\n\n- 关注管理动态，多看书，多学习，弱化管理权限\n- 找准技术方向，深入了解与研究\n- 建立良好的人脉圈，走出自我\n- 提高自我修养和素养\n\n\n","source":"_posts/2015-03-03-happy-day-for-free-heart.md","raw":"---\nlayout: post\ntitle: 决择\ndate: 2015-03-03 01:26\ncomments: true\ncategories: [工作与生活]\n---\n\n还记得在14年总结的时候提到过今年的规划，今天终于做下了这个决择，无论是否对错。\n\n一直以来我总是徘徊在技术与管理之间，但是我觉得这里的“度”我把握的不是很好。最近在和朋友交流中，其实发现自己现在遇到了一些瓶颈，在管理方面，经验不是很丰富，在技术方面，虽然有一定的宽度，但是深度自己还是比较清楚的。因此今天我调整了一下个人的方向，具体如下：\n\n- 关注管理动态，多看书，多学习，弱化管理权限\n- 找准技术方向，深入了解与研究\n- 建立良好的人脉圈，走出自我\n- 提高自我修养和素养\n\n\n","slug":"happy-day-for-free-heart","published":1,"updated":"2018-05-30T08:12:15.866Z","photos":[],"link":"","_id":"cjhubytkk0022yis5jqgv5ma5","content":"<p>还记得在14年总结的时候提到过今年的规划，今天终于做下了这个决择，无论是否对错。</p>\n<p>一直以来我总是徘徊在技术与管理之间，但是我觉得这里的“度”我把握的不是很好。最近在和朋友交流中，其实发现自己现在遇到了一些瓶颈，在管理方面，经验不是很丰富，在技术方面，虽然有一定的宽度，但是深度自己还是比较清楚的。因此今天我调整了一下个人的方向，具体如下：</p>\n<ul>\n<li>关注管理动态，多看书，多学习，弱化管理权限</li>\n<li>找准技术方向，深入了解与研究</li>\n<li>建立良好的人脉圈，走出自我</li>\n<li>提高自我修养和素养</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>还记得在14年总结的时候提到过今年的规划，今天终于做下了这个决择，无论是否对错。</p>\n<p>一直以来我总是徘徊在技术与管理之间，但是我觉得这里的“度”我把握的不是很好。最近在和朋友交流中，其实发现自己现在遇到了一些瓶颈，在管理方面，经验不是很丰富，在技术方面，虽然有一定的宽度，但是深度自己还是比较清楚的。因此今天我调整了一下个人的方向，具体如下：</p>\n<ul>\n<li>关注管理动态，多看书，多学习，弱化管理权限</li>\n<li>找准技术方向，深入了解与研究</li>\n<li>建立良好的人脉圈，走出自我</li>\n<li>提高自我修养和素养</li>\n</ul>\n"},{"layout":"post","title":"MAC OS X 10.10.1下安装php扩展","date":"2015-03-09T14:41:00.000Z","comments":1,"_content":"\n年后开发环境从ubuntu 14.0.4迁移到MAC OS X 10.10.1 Yosemite版本，本以为ubuntu中编译过的php扩展可以直接拷贝使用，其实是我“想多了”。除了常见的*unix系统的基本操作相同外，还是存在很大的差异。现记录一下mac os下如何安装php扩展，以便后面查阅。\n\n安装PHP扩展要求你的Mac系统已经安装了Xcode环境和命令行开发工具，如果还没安装，请先使用Shell安装。\n\n    xcode-select --install\n\n为了扩展管理方便，首先来安装pecl扩展管理器。\n\n    cd /usr/lib/php\n    sudo php install-pear-nozlib.phar\n\n安装Redis、Memcache、Mongo等扩展。\n\n    sudo pecl install redis\n    sudo pecl install memcache\n    sudo pecl install mongo\n\n将扩展配置添加的php.ini文件中：\n    \n    [memcache]\n    extension=memcache.so\n    [mongo]\n    extension=mongo.so\n    [redis]\n    extension=redis.so\n\n由于Mac自带的PHP环境是不包括mcrypt扩展的，所以需要下载同版本的php源码包，单独编译这个模块加载。从官网的归档里面找到php5.5.14的源码包，下载：[http://php.net/releases/](http://php.net/releases/)\n\n    tar zxvf php-5.5.14.tar.gz\n    cd php-5.5.14/ext/mcrypt/\n    phpize\n    ./configure\n    make\n    sudo make install\n\n配置Mcrypt\n\n    extension=mcrypt.so\n\n为了加速，还需要打开opcache。\n\n    zend_extension=opcache.so\n\n    [opcache]\n    ; Determines if Zend OPCache is enabled\n    opcache.enable=0\n\n    ; Determines if Zend OPCache is enabled for the CLI version of PHP\n    opcache.enable_cli=0\n\n如果在安装过程中PHP动态编译出现Cannot find autoconf错误：\n\n    Configuring for:\n    PHP Api Version:         20041225\n    Zend Module Api No:      20060613\n    Zend Extension Api No:   220060519\n    Cannot find autoconf. Please check your autoconf installation and the\n    $PHP_AUTOCONF environment variable. Then, rerun this script.\n\n请安装autoconf\n\n    brew install autoconfig\n\n\n\n\n","source":"_posts/2015-03-09-mac-os-x-install-php-extension.md","raw":"---\nlayout: post\ntitle: MAC OS X 10.10.1下安装php扩展\ndate: 2015-03-09 22:41\ncomments: true\ncategories: [服务器]\n---\n\n年后开发环境从ubuntu 14.0.4迁移到MAC OS X 10.10.1 Yosemite版本，本以为ubuntu中编译过的php扩展可以直接拷贝使用，其实是我“想多了”。除了常见的*unix系统的基本操作相同外，还是存在很大的差异。现记录一下mac os下如何安装php扩展，以便后面查阅。\n\n安装PHP扩展要求你的Mac系统已经安装了Xcode环境和命令行开发工具，如果还没安装，请先使用Shell安装。\n\n    xcode-select --install\n\n为了扩展管理方便，首先来安装pecl扩展管理器。\n\n    cd /usr/lib/php\n    sudo php install-pear-nozlib.phar\n\n安装Redis、Memcache、Mongo等扩展。\n\n    sudo pecl install redis\n    sudo pecl install memcache\n    sudo pecl install mongo\n\n将扩展配置添加的php.ini文件中：\n    \n    [memcache]\n    extension=memcache.so\n    [mongo]\n    extension=mongo.so\n    [redis]\n    extension=redis.so\n\n由于Mac自带的PHP环境是不包括mcrypt扩展的，所以需要下载同版本的php源码包，单独编译这个模块加载。从官网的归档里面找到php5.5.14的源码包，下载：[http://php.net/releases/](http://php.net/releases/)\n\n    tar zxvf php-5.5.14.tar.gz\n    cd php-5.5.14/ext/mcrypt/\n    phpize\n    ./configure\n    make\n    sudo make install\n\n配置Mcrypt\n\n    extension=mcrypt.so\n\n为了加速，还需要打开opcache。\n\n    zend_extension=opcache.so\n\n    [opcache]\n    ; Determines if Zend OPCache is enabled\n    opcache.enable=0\n\n    ; Determines if Zend OPCache is enabled for the CLI version of PHP\n    opcache.enable_cli=0\n\n如果在安装过程中PHP动态编译出现Cannot find autoconf错误：\n\n    Configuring for:\n    PHP Api Version:         20041225\n    Zend Module Api No:      20060613\n    Zend Extension Api No:   220060519\n    Cannot find autoconf. Please check your autoconf installation and the\n    $PHP_AUTOCONF environment variable. Then, rerun this script.\n\n请安装autoconf\n\n    brew install autoconfig\n\n\n\n\n","slug":"mac-os-x-install-php-extension","published":1,"updated":"2018-05-30T08:12:15.868Z","photos":[],"link":"","_id":"cjhubytkm0024yis5czit1wmf","content":"<p>年后开发环境从ubuntu 14.0.4迁移到MAC OS X 10.10.1 Yosemite版本，本以为ubuntu中编译过的php扩展可以直接拷贝使用，其实是我“想多了”。除了常见的*unix系统的基本操作相同外，还是存在很大的差异。现记录一下mac os下如何安装php扩展，以便后面查阅。</p>\n<p>安装PHP扩展要求你的Mac系统已经安装了Xcode环境和命令行开发工具，如果还没安装，请先使用Shell安装。</p>\n<pre><code>xcode-select --install\n</code></pre><p>为了扩展管理方便，首先来安装pecl扩展管理器。</p>\n<pre><code>cd /usr/lib/php\nsudo php install-pear-nozlib.phar\n</code></pre><p>安装Redis、Memcache、Mongo等扩展。</p>\n<pre><code>sudo pecl install redis\nsudo pecl install memcache\nsudo pecl install mongo\n</code></pre><p>将扩展配置添加的php.ini文件中：</p>\n<pre><code>[memcache]\nextension=memcache.so\n[mongo]\nextension=mongo.so\n[redis]\nextension=redis.so\n</code></pre><p>由于Mac自带的PHP环境是不包括mcrypt扩展的，所以需要下载同版本的php源码包，单独编译这个模块加载。从官网的归档里面找到php5.5.14的源码包，下载：<a href=\"http://php.net/releases/\" target=\"_blank\" rel=\"noopener\">http://php.net/releases/</a></p>\n<pre><code>tar zxvf php-5.5.14.tar.gz\ncd php-5.5.14/ext/mcrypt/\nphpize\n./configure\nmake\nsudo make install\n</code></pre><p>配置Mcrypt</p>\n<pre><code>extension=mcrypt.so\n</code></pre><p>为了加速，还需要打开opcache。</p>\n<pre><code>zend_extension=opcache.so\n\n[opcache]\n; Determines if Zend OPCache is enabled\nopcache.enable=0\n\n; Determines if Zend OPCache is enabled for the CLI version of PHP\nopcache.enable_cli=0\n</code></pre><p>如果在安装过程中PHP动态编译出现Cannot find autoconf错误：</p>\n<pre><code>Configuring for:\nPHP Api Version:         20041225\nZend Module Api No:      20060613\nZend Extension Api No:   220060519\nCannot find autoconf. Please check your autoconf installation and the\n$PHP_AUTOCONF environment variable. Then, rerun this script.\n</code></pre><p>请安装autoconf</p>\n<pre><code>brew install autoconfig\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>年后开发环境从ubuntu 14.0.4迁移到MAC OS X 10.10.1 Yosemite版本，本以为ubuntu中编译过的php扩展可以直接拷贝使用，其实是我“想多了”。除了常见的*unix系统的基本操作相同外，还是存在很大的差异。现记录一下mac os下如何安装php扩展，以便后面查阅。</p>\n<p>安装PHP扩展要求你的Mac系统已经安装了Xcode环境和命令行开发工具，如果还没安装，请先使用Shell安装。</p>\n<pre><code>xcode-select --install\n</code></pre><p>为了扩展管理方便，首先来安装pecl扩展管理器。</p>\n<pre><code>cd /usr/lib/php\nsudo php install-pear-nozlib.phar\n</code></pre><p>安装Redis、Memcache、Mongo等扩展。</p>\n<pre><code>sudo pecl install redis\nsudo pecl install memcache\nsudo pecl install mongo\n</code></pre><p>将扩展配置添加的php.ini文件中：</p>\n<pre><code>[memcache]\nextension=memcache.so\n[mongo]\nextension=mongo.so\n[redis]\nextension=redis.so\n</code></pre><p>由于Mac自带的PHP环境是不包括mcrypt扩展的，所以需要下载同版本的php源码包，单独编译这个模块加载。从官网的归档里面找到php5.5.14的源码包，下载：<a href=\"http://php.net/releases/\" target=\"_blank\" rel=\"noopener\">http://php.net/releases/</a></p>\n<pre><code>tar zxvf php-5.5.14.tar.gz\ncd php-5.5.14/ext/mcrypt/\nphpize\n./configure\nmake\nsudo make install\n</code></pre><p>配置Mcrypt</p>\n<pre><code>extension=mcrypt.so\n</code></pre><p>为了加速，还需要打开opcache。</p>\n<pre><code>zend_extension=opcache.so\n\n[opcache]\n; Determines if Zend OPCache is enabled\nopcache.enable=0\n\n; Determines if Zend OPCache is enabled for the CLI version of PHP\nopcache.enable_cli=0\n</code></pre><p>如果在安装过程中PHP动态编译出现Cannot find autoconf错误：</p>\n<pre><code>Configuring for:\nPHP Api Version:         20041225\nZend Module Api No:      20060613\nZend Extension Api No:   220060519\nCannot find autoconf. Please check your autoconf installation and the\n$PHP_AUTOCONF environment variable. Then, rerun this script.\n</code></pre><p>请安装autoconf</p>\n<pre><code>brew install autoconfig\n</code></pre>"},{"layout":"post","title":"移动端浏览器的私有Meta属性的整理","date":"2015-05-03T04:05:00.000Z","comments":1,"_content":"\n最近与浏览器客户端开发同学在探讨关于浏览器通用Web API实现方式，例如：横竖屏切换、日/夜间模式、全屏模式、页面模式等。\n通过讨论并与欧朋（Opera）、QQ、UC等浏览器团队进行相关交流，得到的结论————无内核开发的版本，很难彻底解决渲染、网络操作、安全等所带来的问题，\n但也是可以通过应用层的某些技巧方式满足部分的需求。\n\n今天主要是整理一下移动端浏览器的私有Meta属性的使用场景以及相关注释，以便查阅：\n\n强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览\n\n    <meta content=”width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;” name=”viewport” />\n    \niphone设备中的safari私有meta标签，它表示：允许全屏模式浏览\n\n    <meta content=”yes” name=”apple-mobile-web-app-capable” />\n    \niphone的私有标签，它指定的iphone中safari顶端的状态条的样式\n\n    <meta content=”black” name=”apple-mobile-web-app-status-bar-style” />\n \n告诉设备忽略将页面中的数字识别为电话号码\n\n    <meta content=”telephone=no” name=”format-detection” />\n\n\n###UC浏览器和QQ浏览器私有Meta属性\n\n目前国内浏览器内核开发团队主要有欧朋浏览器（oupeng）、UC浏览器、QQ浏览器，其中欧朋浏览器（oupeng）采用Presto内核（Opera 7）以及webkit内核（Opera 10），\nUC浏览器与QQ浏览器分别采用[U3内核](http://www.uc.cn/business/developer/)（Webkit内核）和[X5内核](http://x5.tencent.com/)（webkit内核），\n这里我们主要是介绍一下基于webkit内核定义的私有属性有哪些。\n\n###UC浏览器\n\n设置屏幕方向为横屏还是竖屏\n\n    <meta name=\"screen-orientation\" content=\"portrait|landscape\">\n    \n设置是否全屏，yes表示强制浏览器全屏\n\n    <meta name=\"full-screen\" content=\"yes\">\n    \n缩放不出滚动条\n\n    <meta name=\"viewport\" content=\"uc-fitscreen=no|yes\"/>\n    \n设置no后用户缩放与标准浏览器缩放一直，设置为yes后，用户缩放金放到图片和文字，不出现横向滚动条。\n\n排版\n\n    <meta name=\"layoutmode\" content=\"fitscreen|standard\" />\n    \nfitscreen模式简化页面处理，适合页面阅读节省流量，standard模式和标准浏览器一致；一旦设置layoutmode meta后，用户使用浏览器提供的的排版模式选项将会无效。\n\n夜间模式\n\n    <meta name=\"nightmode\" content=\"enable|disable\"/>\n    \nnightmode的值设置为disable后，即使用户使用浏览器的夜间模式，页面的表现也仍然是非夜间模式。\n\n强制图片显示\n\n    <meta name=\"imagemode\" content=\"force\"/>\n    \nUC浏览器为了节省流量，为用户提供了无图模式，但是如果页面的图片是必不可少的，如验证码的，需要强制浏览器显示图片，可以设置imagemode， 不影响子页面。通过META设置图片加载方式会作用于整个页面，如果希望对单个图片进行设置，那么可以使用这个\n\n    <img src=\"...\" show=\"force\">\n\n应用模式\n\n    <meta name=\"browsermode\" content=\"application\"/>\n\n使用了application这种应用模式后，页面讲默认全屏，禁止长按菜单，禁止收拾，标准排版，以及强制图片显示。\n\n###QQ浏览器\n\n设置屏幕方向\n\n    <meta name=\"x5-orientation\" content=\"portrait|landscape\" />\n    \n设置全屏\n\n    <meta name=\"x5-fullscreen\" content=\"auto|true\" />\n    \n设置屏幕模式\n\n    <meta name=\"x5-page-mode\" content=\"default|app\" />\n\napp:网页应用模式（定制工具栏，全屏显示）\n\n\n\n\n\n","source":"_posts/2015-05-03-mobile-brower-web-page-meta.md","raw":"---\nlayout: post\ntitle: 移动端浏览器的私有Meta属性的整理\ndate: 2015-05-03 12:05\ncomments: true\ncategories: [移动开发]\n---\n\n最近与浏览器客户端开发同学在探讨关于浏览器通用Web API实现方式，例如：横竖屏切换、日/夜间模式、全屏模式、页面模式等。\n通过讨论并与欧朋（Opera）、QQ、UC等浏览器团队进行相关交流，得到的结论————无内核开发的版本，很难彻底解决渲染、网络操作、安全等所带来的问题，\n但也是可以通过应用层的某些技巧方式满足部分的需求。\n\n今天主要是整理一下移动端浏览器的私有Meta属性的使用场景以及相关注释，以便查阅：\n\n强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览\n\n    <meta content=”width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;” name=”viewport” />\n    \niphone设备中的safari私有meta标签，它表示：允许全屏模式浏览\n\n    <meta content=”yes” name=”apple-mobile-web-app-capable” />\n    \niphone的私有标签，它指定的iphone中safari顶端的状态条的样式\n\n    <meta content=”black” name=”apple-mobile-web-app-status-bar-style” />\n \n告诉设备忽略将页面中的数字识别为电话号码\n\n    <meta content=”telephone=no” name=”format-detection” />\n\n\n###UC浏览器和QQ浏览器私有Meta属性\n\n目前国内浏览器内核开发团队主要有欧朋浏览器（oupeng）、UC浏览器、QQ浏览器，其中欧朋浏览器（oupeng）采用Presto内核（Opera 7）以及webkit内核（Opera 10），\nUC浏览器与QQ浏览器分别采用[U3内核](http://www.uc.cn/business/developer/)（Webkit内核）和[X5内核](http://x5.tencent.com/)（webkit内核），\n这里我们主要是介绍一下基于webkit内核定义的私有属性有哪些。\n\n###UC浏览器\n\n设置屏幕方向为横屏还是竖屏\n\n    <meta name=\"screen-orientation\" content=\"portrait|landscape\">\n    \n设置是否全屏，yes表示强制浏览器全屏\n\n    <meta name=\"full-screen\" content=\"yes\">\n    \n缩放不出滚动条\n\n    <meta name=\"viewport\" content=\"uc-fitscreen=no|yes\"/>\n    \n设置no后用户缩放与标准浏览器缩放一直，设置为yes后，用户缩放金放到图片和文字，不出现横向滚动条。\n\n排版\n\n    <meta name=\"layoutmode\" content=\"fitscreen|standard\" />\n    \nfitscreen模式简化页面处理，适合页面阅读节省流量，standard模式和标准浏览器一致；一旦设置layoutmode meta后，用户使用浏览器提供的的排版模式选项将会无效。\n\n夜间模式\n\n    <meta name=\"nightmode\" content=\"enable|disable\"/>\n    \nnightmode的值设置为disable后，即使用户使用浏览器的夜间模式，页面的表现也仍然是非夜间模式。\n\n强制图片显示\n\n    <meta name=\"imagemode\" content=\"force\"/>\n    \nUC浏览器为了节省流量，为用户提供了无图模式，但是如果页面的图片是必不可少的，如验证码的，需要强制浏览器显示图片，可以设置imagemode， 不影响子页面。通过META设置图片加载方式会作用于整个页面，如果希望对单个图片进行设置，那么可以使用这个\n\n    <img src=\"...\" show=\"force\">\n\n应用模式\n\n    <meta name=\"browsermode\" content=\"application\"/>\n\n使用了application这种应用模式后，页面讲默认全屏，禁止长按菜单，禁止收拾，标准排版，以及强制图片显示。\n\n###QQ浏览器\n\n设置屏幕方向\n\n    <meta name=\"x5-orientation\" content=\"portrait|landscape\" />\n    \n设置全屏\n\n    <meta name=\"x5-fullscreen\" content=\"auto|true\" />\n    \n设置屏幕模式\n\n    <meta name=\"x5-page-mode\" content=\"default|app\" />\n\napp:网页应用模式（定制工具栏，全屏显示）\n\n\n\n\n\n","slug":"mobile-brower-web-page-meta","published":1,"updated":"2018-05-30T08:12:15.869Z","photos":[],"link":"","_id":"cjhubytkn0026yis53g6qo3xp","content":"<p>最近与浏览器客户端开发同学在探讨关于浏览器通用Web API实现方式，例如：横竖屏切换、日/夜间模式、全屏模式、页面模式等。<br>通过讨论并与欧朋（Opera）、QQ、UC等浏览器团队进行相关交流，得到的结论————无内核开发的版本，很难彻底解决渲染、网络操作、安全等所带来的问题，<br>但也是可以通过应用层的某些技巧方式满足部分的需求。</p>\n<p>今天主要是整理一下移动端浏览器的私有Meta属性的使用场景以及相关注释，以便查阅：</p>\n<p>强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览</p>\n<pre><code>&lt;meta content=”width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;” name=”viewport” /&gt;\n</code></pre><p>iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览</p>\n<pre><code>&lt;meta content=”yes” name=”apple-mobile-web-app-capable” /&gt;\n</code></pre><p>iphone的私有标签，它指定的iphone中safari顶端的状态条的样式</p>\n<pre><code>&lt;meta content=”black” name=”apple-mobile-web-app-status-bar-style” /&gt;\n</code></pre><p>告诉设备忽略将页面中的数字识别为电话号码</p>\n<pre><code>&lt;meta content=”telephone=no” name=”format-detection” /&gt;\n</code></pre><p>###UC浏览器和QQ浏览器私有Meta属性</p>\n<p>目前国内浏览器内核开发团队主要有欧朋浏览器（oupeng）、UC浏览器、QQ浏览器，其中欧朋浏览器（oupeng）采用Presto内核（Opera 7）以及webkit内核（Opera 10），<br>UC浏览器与QQ浏览器分别采用<a href=\"http://www.uc.cn/business/developer/\" target=\"_blank\" rel=\"noopener\">U3内核</a>（Webkit内核）和<a href=\"http://x5.tencent.com/\" target=\"_blank\" rel=\"noopener\">X5内核</a>（webkit内核），<br>这里我们主要是介绍一下基于webkit内核定义的私有属性有哪些。</p>\n<p>###UC浏览器</p>\n<p>设置屏幕方向为横屏还是竖屏</p>\n<pre><code>&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait|landscape&quot;&gt;\n</code></pre><p>设置是否全屏，yes表示强制浏览器全屏</p>\n<pre><code>&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;\n</code></pre><p>缩放不出滚动条</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;uc-fitscreen=no|yes&quot;/&gt;\n</code></pre><p>设置no后用户缩放与标准浏览器缩放一直，设置为yes后，用户缩放金放到图片和文字，不出现横向滚动条。</p>\n<p>排版</p>\n<pre><code>&lt;meta name=&quot;layoutmode&quot; content=&quot;fitscreen|standard&quot; /&gt;\n</code></pre><p>fitscreen模式简化页面处理，适合页面阅读节省流量，standard模式和标准浏览器一致；一旦设置layoutmode meta后，用户使用浏览器提供的的排版模式选项将会无效。</p>\n<p>夜间模式</p>\n<pre><code>&lt;meta name=&quot;nightmode&quot; content=&quot;enable|disable&quot;/&gt;\n</code></pre><p>nightmode的值设置为disable后，即使用户使用浏览器的夜间模式，页面的表现也仍然是非夜间模式。</p>\n<p>强制图片显示</p>\n<pre><code>&lt;meta name=&quot;imagemode&quot; content=&quot;force&quot;/&gt;\n</code></pre><p>UC浏览器为了节省流量，为用户提供了无图模式，但是如果页面的图片是必不可少的，如验证码的，需要强制浏览器显示图片，可以设置imagemode， 不影响子页面。通过META设置图片加载方式会作用于整个页面，如果希望对单个图片进行设置，那么可以使用这个</p>\n<pre><code>&lt;img src=&quot;...&quot; show=&quot;force&quot;&gt;\n</code></pre><p>应用模式</p>\n<pre><code>&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;/&gt;\n</code></pre><p>使用了application这种应用模式后，页面讲默认全屏，禁止长按菜单，禁止收拾，标准排版，以及强制图片显示。</p>\n<p>###QQ浏览器</p>\n<p>设置屏幕方向</p>\n<pre><code>&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait|landscape&quot; /&gt;\n</code></pre><p>设置全屏</p>\n<pre><code>&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;auto|true&quot; /&gt;\n</code></pre><p>设置屏幕模式</p>\n<pre><code>&lt;meta name=&quot;x5-page-mode&quot; content=&quot;default|app&quot; /&gt;\n</code></pre><p>app:网页应用模式（定制工具栏，全屏显示）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近与浏览器客户端开发同学在探讨关于浏览器通用Web API实现方式，例如：横竖屏切换、日/夜间模式、全屏模式、页面模式等。<br>通过讨论并与欧朋（Opera）、QQ、UC等浏览器团队进行相关交流，得到的结论————无内核开发的版本，很难彻底解决渲染、网络操作、安全等所带来的问题，<br>但也是可以通过应用层的某些技巧方式满足部分的需求。</p>\n<p>今天主要是整理一下移动端浏览器的私有Meta属性的使用场景以及相关注释，以便查阅：</p>\n<p>强制让文档的宽度与设备的宽度保持1:1，并且文档最大的宽度比例是1.0，且不允许用户点击屏幕放大浏览</p>\n<pre><code>&lt;meta content=”width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0;” name=”viewport” /&gt;\n</code></pre><p>iphone设备中的safari私有meta标签，它表示：允许全屏模式浏览</p>\n<pre><code>&lt;meta content=”yes” name=”apple-mobile-web-app-capable” /&gt;\n</code></pre><p>iphone的私有标签，它指定的iphone中safari顶端的状态条的样式</p>\n<pre><code>&lt;meta content=”black” name=”apple-mobile-web-app-status-bar-style” /&gt;\n</code></pre><p>告诉设备忽略将页面中的数字识别为电话号码</p>\n<pre><code>&lt;meta content=”telephone=no” name=”format-detection” /&gt;\n</code></pre><p>###UC浏览器和QQ浏览器私有Meta属性</p>\n<p>目前国内浏览器内核开发团队主要有欧朋浏览器（oupeng）、UC浏览器、QQ浏览器，其中欧朋浏览器（oupeng）采用Presto内核（Opera 7）以及webkit内核（Opera 10），<br>UC浏览器与QQ浏览器分别采用<a href=\"http://www.uc.cn/business/developer/\" target=\"_blank\" rel=\"noopener\">U3内核</a>（Webkit内核）和<a href=\"http://x5.tencent.com/\" target=\"_blank\" rel=\"noopener\">X5内核</a>（webkit内核），<br>这里我们主要是介绍一下基于webkit内核定义的私有属性有哪些。</p>\n<p>###UC浏览器</p>\n<p>设置屏幕方向为横屏还是竖屏</p>\n<pre><code>&lt;meta name=&quot;screen-orientation&quot; content=&quot;portrait|landscape&quot;&gt;\n</code></pre><p>设置是否全屏，yes表示强制浏览器全屏</p>\n<pre><code>&lt;meta name=&quot;full-screen&quot; content=&quot;yes&quot;&gt;\n</code></pre><p>缩放不出滚动条</p>\n<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;uc-fitscreen=no|yes&quot;/&gt;\n</code></pre><p>设置no后用户缩放与标准浏览器缩放一直，设置为yes后，用户缩放金放到图片和文字，不出现横向滚动条。</p>\n<p>排版</p>\n<pre><code>&lt;meta name=&quot;layoutmode&quot; content=&quot;fitscreen|standard&quot; /&gt;\n</code></pre><p>fitscreen模式简化页面处理，适合页面阅读节省流量，standard模式和标准浏览器一致；一旦设置layoutmode meta后，用户使用浏览器提供的的排版模式选项将会无效。</p>\n<p>夜间模式</p>\n<pre><code>&lt;meta name=&quot;nightmode&quot; content=&quot;enable|disable&quot;/&gt;\n</code></pre><p>nightmode的值设置为disable后，即使用户使用浏览器的夜间模式，页面的表现也仍然是非夜间模式。</p>\n<p>强制图片显示</p>\n<pre><code>&lt;meta name=&quot;imagemode&quot; content=&quot;force&quot;/&gt;\n</code></pre><p>UC浏览器为了节省流量，为用户提供了无图模式，但是如果页面的图片是必不可少的，如验证码的，需要强制浏览器显示图片，可以设置imagemode， 不影响子页面。通过META设置图片加载方式会作用于整个页面，如果希望对单个图片进行设置，那么可以使用这个</p>\n<pre><code>&lt;img src=&quot;...&quot; show=&quot;force&quot;&gt;\n</code></pre><p>应用模式</p>\n<pre><code>&lt;meta name=&quot;browsermode&quot; content=&quot;application&quot;/&gt;\n</code></pre><p>使用了application这种应用模式后，页面讲默认全屏，禁止长按菜单，禁止收拾，标准排版，以及强制图片显示。</p>\n<p>###QQ浏览器</p>\n<p>设置屏幕方向</p>\n<pre><code>&lt;meta name=&quot;x5-orientation&quot; content=&quot;portrait|landscape&quot; /&gt;\n</code></pre><p>设置全屏</p>\n<pre><code>&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;auto|true&quot; /&gt;\n</code></pre><p>设置屏幕模式</p>\n<pre><code>&lt;meta name=&quot;x5-page-mode&quot; content=&quot;default|app&quot; /&gt;\n</code></pre><p>app:网页应用模式（定制工具栏，全屏显示）</p>\n"},{"layout":"post","title":"Javascript实现两个超大数字的相加","date":"2015-08-24T16:00:00.000Z","comments":1,"_content":"\n两个超大数字相加的实现\n\n分析：由于数字类型长度限制，故两个超大数字应为字符串类型。因此两个超大数字相加实则为两个字符串按”加法规则“计算即可，下面为一个简单的实现方式：\n\n    function result(str1, str2){\n        var arr1 = str1.split('').reverse();\n        var arr2 = str2.split('').reverse();\n        var step = 0, arr3 = [], \n            max = Math.max(arr1.length, arr2.length),\n            min = Math.min(arr1.length, arr2.length);\n\n        for(var i = 0; i < min; i++){\n            var tmp = Number(arr1[i]) + Number(arr2[i]) + step;\n            console.log(tmp,step);\n            if( tmp >= 10){\n                step = 1;\n                arr3.push(tmp -10);\n            } else {\n                step = 0;\n                arr3.push(tmp);\n            }\n        }\n\n        if(arr1.length == arr2.length){\n            if(step > 0){\n                arr3.push(step);\n            }\n        } else {\n            arr3 = arr3.concat(arr1[min] ? arr1.slice(min) : arr2.slice(min));\n        }\n\n        return arr3.reverse().join('');\n    }\n\n    result('11111111111111111111111111111111','2222222222222222222222222222222'); //结果 13333333333333333333333333333333\n\n如果有错误之处，欢迎指正，谢谢！\n\n","source":"_posts/2015-08-25-how-to-realize-the-two-numbers-together.md","raw":"---\nlayout: post\ntitle: Javascript实现两个超大数字的相加\ndate: 2015-08-25\ncomments: true\ncategories: [javascript]\n---\n\n两个超大数字相加的实现\n\n分析：由于数字类型长度限制，故两个超大数字应为字符串类型。因此两个超大数字相加实则为两个字符串按”加法规则“计算即可，下面为一个简单的实现方式：\n\n    function result(str1, str2){\n        var arr1 = str1.split('').reverse();\n        var arr2 = str2.split('').reverse();\n        var step = 0, arr3 = [], \n            max = Math.max(arr1.length, arr2.length),\n            min = Math.min(arr1.length, arr2.length);\n\n        for(var i = 0; i < min; i++){\n            var tmp = Number(arr1[i]) + Number(arr2[i]) + step;\n            console.log(tmp,step);\n            if( tmp >= 10){\n                step = 1;\n                arr3.push(tmp -10);\n            } else {\n                step = 0;\n                arr3.push(tmp);\n            }\n        }\n\n        if(arr1.length == arr2.length){\n            if(step > 0){\n                arr3.push(step);\n            }\n        } else {\n            arr3 = arr3.concat(arr1[min] ? arr1.slice(min) : arr2.slice(min));\n        }\n\n        return arr3.reverse().join('');\n    }\n\n    result('11111111111111111111111111111111','2222222222222222222222222222222'); //结果 13333333333333333333333333333333\n\n如果有错误之处，欢迎指正，谢谢！\n\n","slug":"how-to-realize-the-two-numbers-together","published":1,"updated":"2018-05-30T08:12:15.870Z","photos":[],"link":"","_id":"cjhubytko0029yis5qnossl7q","content":"<p>两个超大数字相加的实现</p>\n<p>分析：由于数字类型长度限制，故两个超大数字应为字符串类型。因此两个超大数字相加实则为两个字符串按”加法规则“计算即可，下面为一个简单的实现方式：</p>\n<pre><code>function result(str1, str2){\n    var arr1 = str1.split(&apos;&apos;).reverse();\n    var arr2 = str2.split(&apos;&apos;).reverse();\n    var step = 0, arr3 = [], \n        max = Math.max(arr1.length, arr2.length),\n        min = Math.min(arr1.length, arr2.length);\n\n    for(var i = 0; i &lt; min; i++){\n        var tmp = Number(arr1[i]) + Number(arr2[i]) + step;\n        console.log(tmp,step);\n        if( tmp &gt;= 10){\n            step = 1;\n            arr3.push(tmp -10);\n        } else {\n            step = 0;\n            arr3.push(tmp);\n        }\n    }\n\n    if(arr1.length == arr2.length){\n        if(step &gt; 0){\n            arr3.push(step);\n        }\n    } else {\n        arr3 = arr3.concat(arr1[min] ? arr1.slice(min) : arr2.slice(min));\n    }\n\n    return arr3.reverse().join(&apos;&apos;);\n}\n\nresult(&apos;11111111111111111111111111111111&apos;,&apos;2222222222222222222222222222222&apos;); //结果 13333333333333333333333333333333\n</code></pre><p>如果有错误之处，欢迎指正，谢谢！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>两个超大数字相加的实现</p>\n<p>分析：由于数字类型长度限制，故两个超大数字应为字符串类型。因此两个超大数字相加实则为两个字符串按”加法规则“计算即可，下面为一个简单的实现方式：</p>\n<pre><code>function result(str1, str2){\n    var arr1 = str1.split(&apos;&apos;).reverse();\n    var arr2 = str2.split(&apos;&apos;).reverse();\n    var step = 0, arr3 = [], \n        max = Math.max(arr1.length, arr2.length),\n        min = Math.min(arr1.length, arr2.length);\n\n    for(var i = 0; i &lt; min; i++){\n        var tmp = Number(arr1[i]) + Number(arr2[i]) + step;\n        console.log(tmp,step);\n        if( tmp &gt;= 10){\n            step = 1;\n            arr3.push(tmp -10);\n        } else {\n            step = 0;\n            arr3.push(tmp);\n        }\n    }\n\n    if(arr1.length == arr2.length){\n        if(step &gt; 0){\n            arr3.push(step);\n        }\n    } else {\n        arr3 = arr3.concat(arr1[min] ? arr1.slice(min) : arr2.slice(min));\n    }\n\n    return arr3.reverse().join(&apos;&apos;);\n}\n\nresult(&apos;11111111111111111111111111111111&apos;,&apos;2222222222222222222222222222222&apos;); //结果 13333333333333333333333333333333\n</code></pre><p>如果有错误之处，欢迎指正，谢谢！</p>\n"},{"layout":"post","title":"最近的一些总结","date":"2015-09-09T11:33:00.000Z","comments":1,"_content":"\n已经好久没有静下心来写一篇文章了，可能是由于近期一连串的事情影响到了心情吧，也许这只是一个借口而已。今天难得心静了下来，我想是时候回想一下这大半年以来工作和生活状态，同时也借此重新思考，回归初心。\n\n##一、生活上\n\n这我想从年初和执子闲人一起制订的计划和目标说起，我们在一起也四五年，由于工作时间的差异（大学专业性质的不同），很少能有共同的时间一起吃饭、看电影、逛商场和旅游。因此在年初制订计划的时候优先把工作时间一致性放在第一位（换工作），然后一步一步实现相应的计划，吃西餐、看电影、逛商场、香港旅游、出国旅游等，同时还有一些关于理财与资金管理、学车考驾照、拍婚纱照、锻炼与运动、参加学术讲座等方面的计划。现在想想除了少数几个计划未完成或者正在进行中以外，总体来说还可以，计划完成率通过。\n\n下面我想重点谈论一下其中**理财与资金管理**这一计划，主要原因有以下几方面：\n\n1. 由于工作相对稳定、资金上有一定的积累以及阅历的丰富，在外界因素的影响下开始感觉应该对金融和理财重新认识。\n2. 由于年龄的增长以及相应责任，我们也会开始对婚姻、生活有了重新的认识。希望得到美满的婚姻、高质量的生活。\n3. 由于从事的工作以及朋友圈等环境因素的影响和带动下，有强烈的理财需求。\n\n基于以上所述，年初已开始重点关注金融理财方面的知识和动态，先后对各类宝宝进行研究，同时对比P2P理财等各渠道进行分析，最终也进行了股市浪潮，见证了（呜呜）难得一遇的”牛熊之战“。同时经历了股灾的风风雨雨，割舍了金钱收获了成长。\n\n##二、 工作上\n\n由于对过去的反思和总结，年初重新制订了个人的成长规划 —— 回归初心。本意是想通过回归技术，从心提升专业知识，推动团队和部门更快发展。最终却因以下几件事情有了重大的转变。\n\n####外部因素\n\n1. 投入大量的时间关注金融理财和股市\n2. 对异常火热的移动互联网未来发展的憧憬\n3. 对个人经验以及专业能力的过于自信\n\n####内部因素\n\n1. 部门内部原因\n2. 公司组织结构的大调整\n3. 因结构调整导致大量人员流失\n4. 个人发展与规则\n\n综上所述，由于内部因素与外部因素相结合，工作上整体表现不令人满意。这里不在过多的对内外因素做详细的诉说，过去的已经过去了，把握现在抓住机会，重新思考，再次前行。\n\n##三、重新开始\n\n最近该放下的放下了；该努力争取的争取到了；该留有时间思考的思考了；该静下心来找回自己，找准时机超越自我！\n\n在部门休整的这段时间里，我大部分时间都是自我反思、项目梳理、代码优化、框架搭建、人员招聘等，空闲的时间多了，对更多的事情有了重新的认识。在以后的时间里我将重点对专业知识、项目管理、人员招聘等方面进行内容的产出。\n\n在这里感谢大家一直以来对我的关注，忍受着我混沌的文章思想以及无养料的产出。在以后的日子里我将更会更加的努力（欢迎各位批评和指正，再次感谢）！\n\n","source":"_posts/2015-09-09-some-of-the-recent-summary.md","raw":"---\nlayout: post\ntitle: 最近的一些总结\ndate: 2015-09-09 19:33\ncomments: true\ncategories: [水]\n---\n\n已经好久没有静下心来写一篇文章了，可能是由于近期一连串的事情影响到了心情吧，也许这只是一个借口而已。今天难得心静了下来，我想是时候回想一下这大半年以来工作和生活状态，同时也借此重新思考，回归初心。\n\n##一、生活上\n\n这我想从年初和执子闲人一起制订的计划和目标说起，我们在一起也四五年，由于工作时间的差异（大学专业性质的不同），很少能有共同的时间一起吃饭、看电影、逛商场和旅游。因此在年初制订计划的时候优先把工作时间一致性放在第一位（换工作），然后一步一步实现相应的计划，吃西餐、看电影、逛商场、香港旅游、出国旅游等，同时还有一些关于理财与资金管理、学车考驾照、拍婚纱照、锻炼与运动、参加学术讲座等方面的计划。现在想想除了少数几个计划未完成或者正在进行中以外，总体来说还可以，计划完成率通过。\n\n下面我想重点谈论一下其中**理财与资金管理**这一计划，主要原因有以下几方面：\n\n1. 由于工作相对稳定、资金上有一定的积累以及阅历的丰富，在外界因素的影响下开始感觉应该对金融和理财重新认识。\n2. 由于年龄的增长以及相应责任，我们也会开始对婚姻、生活有了重新的认识。希望得到美满的婚姻、高质量的生活。\n3. 由于从事的工作以及朋友圈等环境因素的影响和带动下，有强烈的理财需求。\n\n基于以上所述，年初已开始重点关注金融理财方面的知识和动态，先后对各类宝宝进行研究，同时对比P2P理财等各渠道进行分析，最终也进行了股市浪潮，见证了（呜呜）难得一遇的”牛熊之战“。同时经历了股灾的风风雨雨，割舍了金钱收获了成长。\n\n##二、 工作上\n\n由于对过去的反思和总结，年初重新制订了个人的成长规划 —— 回归初心。本意是想通过回归技术，从心提升专业知识，推动团队和部门更快发展。最终却因以下几件事情有了重大的转变。\n\n####外部因素\n\n1. 投入大量的时间关注金融理财和股市\n2. 对异常火热的移动互联网未来发展的憧憬\n3. 对个人经验以及专业能力的过于自信\n\n####内部因素\n\n1. 部门内部原因\n2. 公司组织结构的大调整\n3. 因结构调整导致大量人员流失\n4. 个人发展与规则\n\n综上所述，由于内部因素与外部因素相结合，工作上整体表现不令人满意。这里不在过多的对内外因素做详细的诉说，过去的已经过去了，把握现在抓住机会，重新思考，再次前行。\n\n##三、重新开始\n\n最近该放下的放下了；该努力争取的争取到了；该留有时间思考的思考了；该静下心来找回自己，找准时机超越自我！\n\n在部门休整的这段时间里，我大部分时间都是自我反思、项目梳理、代码优化、框架搭建、人员招聘等，空闲的时间多了，对更多的事情有了重新的认识。在以后的时间里我将重点对专业知识、项目管理、人员招聘等方面进行内容的产出。\n\n在这里感谢大家一直以来对我的关注，忍受着我混沌的文章思想以及无养料的产出。在以后的日子里我将更会更加的努力（欢迎各位批评和指正，再次感谢）！\n\n","slug":"some-of-the-recent-summary","published":1,"updated":"2018-05-30T08:12:15.870Z","photos":[],"link":"","_id":"cjhubytkq002byis53x5phupi","content":"<p>已经好久没有静下心来写一篇文章了，可能是由于近期一连串的事情影响到了心情吧，也许这只是一个借口而已。今天难得心静了下来，我想是时候回想一下这大半年以来工作和生活状态，同时也借此重新思考，回归初心。</p>\n<p>##一、生活上</p>\n<p>这我想从年初和执子闲人一起制订的计划和目标说起，我们在一起也四五年，由于工作时间的差异（大学专业性质的不同），很少能有共同的时间一起吃饭、看电影、逛商场和旅游。因此在年初制订计划的时候优先把工作时间一致性放在第一位（换工作），然后一步一步实现相应的计划，吃西餐、看电影、逛商场、香港旅游、出国旅游等，同时还有一些关于理财与资金管理、学车考驾照、拍婚纱照、锻炼与运动、参加学术讲座等方面的计划。现在想想除了少数几个计划未完成或者正在进行中以外，总体来说还可以，计划完成率通过。</p>\n<p>下面我想重点谈论一下其中<strong>理财与资金管理</strong>这一计划，主要原因有以下几方面：</p>\n<ol>\n<li>由于工作相对稳定、资金上有一定的积累以及阅历的丰富，在外界因素的影响下开始感觉应该对金融和理财重新认识。</li>\n<li>由于年龄的增长以及相应责任，我们也会开始对婚姻、生活有了重新的认识。希望得到美满的婚姻、高质量的生活。</li>\n<li>由于从事的工作以及朋友圈等环境因素的影响和带动下，有强烈的理财需求。</li>\n</ol>\n<p>基于以上所述，年初已开始重点关注金融理财方面的知识和动态，先后对各类宝宝进行研究，同时对比P2P理财等各渠道进行分析，最终也进行了股市浪潮，见证了（呜呜）难得一遇的”牛熊之战“。同时经历了股灾的风风雨雨，割舍了金钱收获了成长。</p>\n<p>##二、 工作上</p>\n<p>由于对过去的反思和总结，年初重新制订了个人的成长规划 —— 回归初心。本意是想通过回归技术，从心提升专业知识，推动团队和部门更快发展。最终却因以下几件事情有了重大的转变。</p>\n<p>####外部因素</p>\n<ol>\n<li>投入大量的时间关注金融理财和股市</li>\n<li>对异常火热的移动互联网未来发展的憧憬</li>\n<li>对个人经验以及专业能力的过于自信</li>\n</ol>\n<p>####内部因素</p>\n<ol>\n<li>部门内部原因</li>\n<li>公司组织结构的大调整</li>\n<li>因结构调整导致大量人员流失</li>\n<li>个人发展与规则</li>\n</ol>\n<p>综上所述，由于内部因素与外部因素相结合，工作上整体表现不令人满意。这里不在过多的对内外因素做详细的诉说，过去的已经过去了，把握现在抓住机会，重新思考，再次前行。</p>\n<p>##三、重新开始</p>\n<p>最近该放下的放下了；该努力争取的争取到了；该留有时间思考的思考了；该静下心来找回自己，找准时机超越自我！</p>\n<p>在部门休整的这段时间里，我大部分时间都是自我反思、项目梳理、代码优化、框架搭建、人员招聘等，空闲的时间多了，对更多的事情有了重新的认识。在以后的时间里我将重点对专业知识、项目管理、人员招聘等方面进行内容的产出。</p>\n<p>在这里感谢大家一直以来对我的关注，忍受着我混沌的文章思想以及无养料的产出。在以后的日子里我将更会更加的努力（欢迎各位批评和指正，再次感谢）！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>已经好久没有静下心来写一篇文章了，可能是由于近期一连串的事情影响到了心情吧，也许这只是一个借口而已。今天难得心静了下来，我想是时候回想一下这大半年以来工作和生活状态，同时也借此重新思考，回归初心。</p>\n<p>##一、生活上</p>\n<p>这我想从年初和执子闲人一起制订的计划和目标说起，我们在一起也四五年，由于工作时间的差异（大学专业性质的不同），很少能有共同的时间一起吃饭、看电影、逛商场和旅游。因此在年初制订计划的时候优先把工作时间一致性放在第一位（换工作），然后一步一步实现相应的计划，吃西餐、看电影、逛商场、香港旅游、出国旅游等，同时还有一些关于理财与资金管理、学车考驾照、拍婚纱照、锻炼与运动、参加学术讲座等方面的计划。现在想想除了少数几个计划未完成或者正在进行中以外，总体来说还可以，计划完成率通过。</p>\n<p>下面我想重点谈论一下其中<strong>理财与资金管理</strong>这一计划，主要原因有以下几方面：</p>\n<ol>\n<li>由于工作相对稳定、资金上有一定的积累以及阅历的丰富，在外界因素的影响下开始感觉应该对金融和理财重新认识。</li>\n<li>由于年龄的增长以及相应责任，我们也会开始对婚姻、生活有了重新的认识。希望得到美满的婚姻、高质量的生活。</li>\n<li>由于从事的工作以及朋友圈等环境因素的影响和带动下，有强烈的理财需求。</li>\n</ol>\n<p>基于以上所述，年初已开始重点关注金融理财方面的知识和动态，先后对各类宝宝进行研究，同时对比P2P理财等各渠道进行分析，最终也进行了股市浪潮，见证了（呜呜）难得一遇的”牛熊之战“。同时经历了股灾的风风雨雨，割舍了金钱收获了成长。</p>\n<p>##二、 工作上</p>\n<p>由于对过去的反思和总结，年初重新制订了个人的成长规划 —— 回归初心。本意是想通过回归技术，从心提升专业知识，推动团队和部门更快发展。最终却因以下几件事情有了重大的转变。</p>\n<p>####外部因素</p>\n<ol>\n<li>投入大量的时间关注金融理财和股市</li>\n<li>对异常火热的移动互联网未来发展的憧憬</li>\n<li>对个人经验以及专业能力的过于自信</li>\n</ol>\n<p>####内部因素</p>\n<ol>\n<li>部门内部原因</li>\n<li>公司组织结构的大调整</li>\n<li>因结构调整导致大量人员流失</li>\n<li>个人发展与规则</li>\n</ol>\n<p>综上所述，由于内部因素与外部因素相结合，工作上整体表现不令人满意。这里不在过多的对内外因素做详细的诉说，过去的已经过去了，把握现在抓住机会，重新思考，再次前行。</p>\n<p>##三、重新开始</p>\n<p>最近该放下的放下了；该努力争取的争取到了；该留有时间思考的思考了；该静下心来找回自己，找准时机超越自我！</p>\n<p>在部门休整的这段时间里，我大部分时间都是自我反思、项目梳理、代码优化、框架搭建、人员招聘等，空闲的时间多了，对更多的事情有了重新的认识。在以后的时间里我将重点对专业知识、项目管理、人员招聘等方面进行内容的产出。</p>\n<p>在这里感谢大家一直以来对我的关注，忍受着我混沌的文章思想以及无养料的产出。在以后的日子里我将更会更加的努力（欢迎各位批评和指正，再次感谢）！</p>\n"},{"layout":"post","title":"又一年，又一个岁月，生日快乐","date":"2015-09-15T15:30:00.000Z","comments":1,"_content":"\nToday is my birthday ! Thank you for your blessing ! \n\n—— hankewins\n\n曾几何时，才搞清楚阴历（农历）和阳历以及星座之间的关系，终于纠正了自己的星座从处女座 —— 天秤座，喔耶！^_^。特殊的日子，平凡的一天，故事即将开始。\n\n##在公司\n\n下午与同事一起在公司吃完晚餐，回到坐位听着音乐并继续对smartjs框架进行开发，当时完全忘记了今天是什么日子。记忆里七点应该还有一位面试同学到来（哦，好吧，后来发现是自己日历时间安排错误）。\n\n##在路上\n\n回去的地铁上习惯性的和小兵（同事）聊聊今天的股市行情、中国历史、工作情况以及人个想法等等，每次的聊天都很愉快，时间被消遣的也很快，最重要的是学习到了很多东西。\n\n##在家里\n\n回到家里时被执子闲人问及到手机怎么打不通时，突然想起手机一直没电。刚刚冲了一会儿电，打开手机收到了很多的短信和消息带着祝福和问候！此刻心情异常的激动，顺手记录这特殊的一天。\n\n又一年，又一个岁月，生日快乐！\n\n","source":"_posts/2015-09-15-today-is-my-birthday.md","raw":"---\nlayout: post\ntitle: 又一年，又一个岁月，生日快乐\ndate: 2015-09-15 23:30\ncomments: true\ncategories: [水]\n---\n\nToday is my birthday ! Thank you for your blessing ! \n\n—— hankewins\n\n曾几何时，才搞清楚阴历（农历）和阳历以及星座之间的关系，终于纠正了自己的星座从处女座 —— 天秤座，喔耶！^_^。特殊的日子，平凡的一天，故事即将开始。\n\n##在公司\n\n下午与同事一起在公司吃完晚餐，回到坐位听着音乐并继续对smartjs框架进行开发，当时完全忘记了今天是什么日子。记忆里七点应该还有一位面试同学到来（哦，好吧，后来发现是自己日历时间安排错误）。\n\n##在路上\n\n回去的地铁上习惯性的和小兵（同事）聊聊今天的股市行情、中国历史、工作情况以及人个想法等等，每次的聊天都很愉快，时间被消遣的也很快，最重要的是学习到了很多东西。\n\n##在家里\n\n回到家里时被执子闲人问及到手机怎么打不通时，突然想起手机一直没电。刚刚冲了一会儿电，打开手机收到了很多的短信和消息带着祝福和问候！此刻心情异常的激动，顺手记录这特殊的一天。\n\n又一年，又一个岁月，生日快乐！\n\n","slug":"today-is-my-birthday","published":1,"updated":"2018-05-30T08:12:15.871Z","photos":[],"link":"","_id":"cjhubytkr002dyis5g1q6k9eu","content":"<p>Today is my birthday ! Thank you for your blessing ! </p>\n<p>—— hankewins</p>\n<p>曾几何时，才搞清楚阴历（农历）和阳历以及星座之间的关系，终于纠正了自己的星座从处女座 —— 天秤座，喔耶！^_^。特殊的日子，平凡的一天，故事即将开始。</p>\n<p>##在公司</p>\n<p>下午与同事一起在公司吃完晚餐，回到坐位听着音乐并继续对smartjs框架进行开发，当时完全忘记了今天是什么日子。记忆里七点应该还有一位面试同学到来（哦，好吧，后来发现是自己日历时间安排错误）。</p>\n<p>##在路上</p>\n<p>回去的地铁上习惯性的和小兵（同事）聊聊今天的股市行情、中国历史、工作情况以及人个想法等等，每次的聊天都很愉快，时间被消遣的也很快，最重要的是学习到了很多东西。</p>\n<p>##在家里</p>\n<p>回到家里时被执子闲人问及到手机怎么打不通时，突然想起手机一直没电。刚刚冲了一会儿电，打开手机收到了很多的短信和消息带着祝福和问候！此刻心情异常的激动，顺手记录这特殊的一天。</p>\n<p>又一年，又一个岁月，生日快乐！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Today is my birthday ! Thank you for your blessing ! </p>\n<p>—— hankewins</p>\n<p>曾几何时，才搞清楚阴历（农历）和阳历以及星座之间的关系，终于纠正了自己的星座从处女座 —— 天秤座，喔耶！^_^。特殊的日子，平凡的一天，故事即将开始。</p>\n<p>##在公司</p>\n<p>下午与同事一起在公司吃完晚餐，回到坐位听着音乐并继续对smartjs框架进行开发，当时完全忘记了今天是什么日子。记忆里七点应该还有一位面试同学到来（哦，好吧，后来发现是自己日历时间安排错误）。</p>\n<p>##在路上</p>\n<p>回去的地铁上习惯性的和小兵（同事）聊聊今天的股市行情、中国历史、工作情况以及人个想法等等，每次的聊天都很愉快，时间被消遣的也很快，最重要的是学习到了很多东西。</p>\n<p>##在家里</p>\n<p>回到家里时被执子闲人问及到手机怎么打不通时，突然想起手机一直没电。刚刚冲了一会儿电，打开手机收到了很多的短信和消息带着祝福和问候！此刻心情异常的激动，顺手记录这特殊的一天。</p>\n<p>又一年，又一个岁月，生日快乐！</p>\n"},{"layout":"post","title":"一个Javascript面试题引发的思考","date":"2015-09-16T09:05:00.000Z","comments":1,"_content":"\n最近一直在负责团队内部前端人员的招聘，前前后后估计也面试了二十几号人，由来自知名互联网、外包公司、非计算机专业、高中毕业生等等。本次不再过多的讨论前端人员面试面经，后面如果有时间的话会针对近期前端招聘详细的分析和总结。这里选取一道笔试题在笔试结果后引发的思考。\n\n##Javascript面试题\n\n题目：实现一个URI解析方法，把url里#之后的参数解析成指定的数据结构。\n    \n    function urlParser(s){\n        // 答题部分，写出你的代码...\n    }\n    try{\n        var url1 = \"http://www.abc.com/m/s/#page/2/?type=latest_videos&page_size=20\";\n        var url2 = \"http://www.abc.com/m/s/#type=latest_videos&page_size=20\";\n        var url3 = \"http://www.abc.com/m/s/#page?type=latest_videos&page_size=20\";\n        console.log(urlParser(url1));\n        console.log(urlParser(url2));\n        console.log(urlParser(url3));\n\n        /*----[执行结果]----\n        [\"page\",\"2\",{\"type\":\"latest_videos\",\"page_size\":20}]\n        [{\"type\":\"latest_videos\", \"page_size\":20}]\n        [\"page\",{\"type\":\"latest_videos\",\"page_size\":20}]\n        ------------------*/\n    } catch(e){\n        console.error('执行出错，错误信息：'+e);\n    }\n\n这道笔试题第一眼看上去比较简单，大部分同学的直接反应就是采用字符串分割N次，转换成数组即可。在我的印象中到目前为止，还没有一位同学写出完整的代码。大部分笔试结果如下：\n\n1. 对#,?,&,=,/特殊符号进行分割转换成数组，然后再处理（很少部分能写出来）\n2. 对?进行判断，然后进行分割\n3. 这题是什么，jquery好像写不出来\n4. 工作中没有遇到过，如果真有这需求，百度应该可以\n5. 正则应该可以，不知道怎么写\n6. 工作了这么多年，还要笔试，不干了\n7. ...\n\n这道题目主要是考查对``Javascript基本知识``、``字符串相关操作``、``数组相关操作``、``JSON字符串``、``正则表达式的应用``等知识点的掌握程度。\n\n##引发的思考\n\n通过前面各种笔试的结果分析可以得到以下几大方面的要点：\n\n- 对基础知识的掌握并能灵活的运用的重要性\n- 思维逻辑的提升、代码的优化等需要长期的自我总结和学习\n- 对事物需从本质思考，深入的学习和理解\n- 工作中态度比能力更重要\n\n那么\n\n=> 基础知识重要还是业务能力重要？\n\n本身场景不同可能侧重点也就不一样啦，这里主要是我个人的观点：对于个人发展到一定程度可能侧重的方向不再是业务表层，更多的可能是对业务底层或者架构的思考，那么相对来讲就需要对基础知识或者深层掌握更加的重要。\n\n=> 如何提升自己思维逻辑能力、代码组织能力？\n\n1. 反复阅读基础知识并理解其要领\n2. 反复阅读优化的代码并理解其原理\n3. 勤动手，多思考\n\n\n=> 工作年限和工作能力的关系？\n\n如果工作年限和工作能力是正比，那么你自身的价值会越来越高。否则工作5年和工作2年没有什么区别，需自我反思，认清自己，努力提升自己。\n\n...\n\n在这里我觉得有很多的问题需要自我思考、认清自己、改掉坏习惯、提升自己基础能力。\n\n##附个人答案\n\n以下是我个人对本题给出的答案，若有误之处，望批评指正！同时也欢迎大家讨论并给出更好的答案。\n\n方法一：字符串分割成数组\n\n    function urlParser1(s){\n        // 方法一\n        var arr = [], obj = {}, strl, strr, hash;\n        // 获取#之后的字符串\n        hash = s.substring(s.indexOf('#')+1);\n        // 根据?号进行分割成strl和strr,然后单独处理\n        if(hash.indexOf('?') > -1){\n            strl = hash.split('?')[0];\n            strl = strl.lastIndexOf('/') === strl.length-1 ? strl.substring(0, strl.length-1) : strl;\n            arr = strl.split('/');\n            strr = hash.split('?')[1];\n        } else {\n            strr = hash;\n        }\n\n        for(var i = 0, strq = strr.split('&'); i < strq.length; i++){\n            var tmp = strq[i].split('=');\n            // 对类型进行判断\n            obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n        }\n\n        arr.push(obj);\n        // 转换成字符串JSON数组\n        return JSON.stringify(arr);\n    }\n\n方法二：正则匹配\n\n    function urlParser(s){\n        var arr = [], reg, hash, obj = {}, tmp;\n        // 获取#之后的字符串\n        hash = s.substring(s.indexOf('#')+1);\n        // 正则匹配关键参数\n        reg = /(\\w+(?=\\/|\\?))|(\\w+=\\w+)/g;\n        // 奖 key=value 转换成对象\n        for(var i = 0, rets = hash.match(reg); i < rets.length; i++){\n            if(rets[i].indexOf('=') > -1){\n                tmp = rets[i].split('=');\n                // 对类型判断\n                obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n            } else {\n                arr.push(rets[i]);\n            }\n        }\n\n        arr.push(obj);\n        // 转换成字符串JSON数组\n        return JSON.stringify(arr);\n    }\n\n##推荐学习资料\n\n- [Javascript教程](http://www.w3school.com.cn/js/index.asp)\n- [Javascript高级程序设计第3版](http://book.douban.com/subject/10546125/)\n- [正则表达式速查表](http://www.jb51.net/shouce/jquery1.82/regexp.html)\n    \n\n","source":"_posts/2015-09-16-an-interview-questions-of-javascript.md","raw":"---\nlayout: post\ntitle: 一个Javascript面试题引发的思考\ndate: 2015-09-16 17:05\ncomments: true\ncategories: [javascript]\n---\n\n最近一直在负责团队内部前端人员的招聘，前前后后估计也面试了二十几号人，由来自知名互联网、外包公司、非计算机专业、高中毕业生等等。本次不再过多的讨论前端人员面试面经，后面如果有时间的话会针对近期前端招聘详细的分析和总结。这里选取一道笔试题在笔试结果后引发的思考。\n\n##Javascript面试题\n\n题目：实现一个URI解析方法，把url里#之后的参数解析成指定的数据结构。\n    \n    function urlParser(s){\n        // 答题部分，写出你的代码...\n    }\n    try{\n        var url1 = \"http://www.abc.com/m/s/#page/2/?type=latest_videos&page_size=20\";\n        var url2 = \"http://www.abc.com/m/s/#type=latest_videos&page_size=20\";\n        var url3 = \"http://www.abc.com/m/s/#page?type=latest_videos&page_size=20\";\n        console.log(urlParser(url1));\n        console.log(urlParser(url2));\n        console.log(urlParser(url3));\n\n        /*----[执行结果]----\n        [\"page\",\"2\",{\"type\":\"latest_videos\",\"page_size\":20}]\n        [{\"type\":\"latest_videos\", \"page_size\":20}]\n        [\"page\",{\"type\":\"latest_videos\",\"page_size\":20}]\n        ------------------*/\n    } catch(e){\n        console.error('执行出错，错误信息：'+e);\n    }\n\n这道笔试题第一眼看上去比较简单，大部分同学的直接反应就是采用字符串分割N次，转换成数组即可。在我的印象中到目前为止，还没有一位同学写出完整的代码。大部分笔试结果如下：\n\n1. 对#,?,&,=,/特殊符号进行分割转换成数组，然后再处理（很少部分能写出来）\n2. 对?进行判断，然后进行分割\n3. 这题是什么，jquery好像写不出来\n4. 工作中没有遇到过，如果真有这需求，百度应该可以\n5. 正则应该可以，不知道怎么写\n6. 工作了这么多年，还要笔试，不干了\n7. ...\n\n这道题目主要是考查对``Javascript基本知识``、``字符串相关操作``、``数组相关操作``、``JSON字符串``、``正则表达式的应用``等知识点的掌握程度。\n\n##引发的思考\n\n通过前面各种笔试的结果分析可以得到以下几大方面的要点：\n\n- 对基础知识的掌握并能灵活的运用的重要性\n- 思维逻辑的提升、代码的优化等需要长期的自我总结和学习\n- 对事物需从本质思考，深入的学习和理解\n- 工作中态度比能力更重要\n\n那么\n\n=> 基础知识重要还是业务能力重要？\n\n本身场景不同可能侧重点也就不一样啦，这里主要是我个人的观点：对于个人发展到一定程度可能侧重的方向不再是业务表层，更多的可能是对业务底层或者架构的思考，那么相对来讲就需要对基础知识或者深层掌握更加的重要。\n\n=> 如何提升自己思维逻辑能力、代码组织能力？\n\n1. 反复阅读基础知识并理解其要领\n2. 反复阅读优化的代码并理解其原理\n3. 勤动手，多思考\n\n\n=> 工作年限和工作能力的关系？\n\n如果工作年限和工作能力是正比，那么你自身的价值会越来越高。否则工作5年和工作2年没有什么区别，需自我反思，认清自己，努力提升自己。\n\n...\n\n在这里我觉得有很多的问题需要自我思考、认清自己、改掉坏习惯、提升自己基础能力。\n\n##附个人答案\n\n以下是我个人对本题给出的答案，若有误之处，望批评指正！同时也欢迎大家讨论并给出更好的答案。\n\n方法一：字符串分割成数组\n\n    function urlParser1(s){\n        // 方法一\n        var arr = [], obj = {}, strl, strr, hash;\n        // 获取#之后的字符串\n        hash = s.substring(s.indexOf('#')+1);\n        // 根据?号进行分割成strl和strr,然后单独处理\n        if(hash.indexOf('?') > -1){\n            strl = hash.split('?')[0];\n            strl = strl.lastIndexOf('/') === strl.length-1 ? strl.substring(0, strl.length-1) : strl;\n            arr = strl.split('/');\n            strr = hash.split('?')[1];\n        } else {\n            strr = hash;\n        }\n\n        for(var i = 0, strq = strr.split('&'); i < strq.length; i++){\n            var tmp = strq[i].split('=');\n            // 对类型进行判断\n            obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n        }\n\n        arr.push(obj);\n        // 转换成字符串JSON数组\n        return JSON.stringify(arr);\n    }\n\n方法二：正则匹配\n\n    function urlParser(s){\n        var arr = [], reg, hash, obj = {}, tmp;\n        // 获取#之后的字符串\n        hash = s.substring(s.indexOf('#')+1);\n        // 正则匹配关键参数\n        reg = /(\\w+(?=\\/|\\?))|(\\w+=\\w+)/g;\n        // 奖 key=value 转换成对象\n        for(var i = 0, rets = hash.match(reg); i < rets.length; i++){\n            if(rets[i].indexOf('=') > -1){\n                tmp = rets[i].split('=');\n                // 对类型判断\n                obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n            } else {\n                arr.push(rets[i]);\n            }\n        }\n\n        arr.push(obj);\n        // 转换成字符串JSON数组\n        return JSON.stringify(arr);\n    }\n\n##推荐学习资料\n\n- [Javascript教程](http://www.w3school.com.cn/js/index.asp)\n- [Javascript高级程序设计第3版](http://book.douban.com/subject/10546125/)\n- [正则表达式速查表](http://www.jb51.net/shouce/jquery1.82/regexp.html)\n    \n\n","slug":"an-interview-questions-of-javascript","published":1,"updated":"2018-05-30T08:12:15.873Z","photos":[],"link":"","_id":"cjhubytks002gyis57qls84zf","content":"<p>最近一直在负责团队内部前端人员的招聘，前前后后估计也面试了二十几号人，由来自知名互联网、外包公司、非计算机专业、高中毕业生等等。本次不再过多的讨论前端人员面试面经，后面如果有时间的话会针对近期前端招聘详细的分析和总结。这里选取一道笔试题在笔试结果后引发的思考。</p>\n<p>##Javascript面试题</p>\n<p>题目：实现一个URI解析方法，把url里#之后的参数解析成指定的数据结构。</p>\n<pre><code>function urlParser(s){\n    // 答题部分，写出你的代码...\n}\ntry{\n    var url1 = &quot;http://www.abc.com/m/s/#page/2/?type=latest_videos&amp;page_size=20&quot;;\n    var url2 = &quot;http://www.abc.com/m/s/#type=latest_videos&amp;page_size=20&quot;;\n    var url3 = &quot;http://www.abc.com/m/s/#page?type=latest_videos&amp;page_size=20&quot;;\n    console.log(urlParser(url1));\n    console.log(urlParser(url2));\n    console.log(urlParser(url3));\n\n    /*----[执行结果]----\n    [&quot;page&quot;,&quot;2&quot;,{&quot;type&quot;:&quot;latest_videos&quot;,&quot;page_size&quot;:20}]\n    [{&quot;type&quot;:&quot;latest_videos&quot;, &quot;page_size&quot;:20}]\n    [&quot;page&quot;,{&quot;type&quot;:&quot;latest_videos&quot;,&quot;page_size&quot;:20}]\n    ------------------*/\n} catch(e){\n    console.error(&apos;执行出错，错误信息：&apos;+e);\n}\n</code></pre><p>这道笔试题第一眼看上去比较简单，大部分同学的直接反应就是采用字符串分割N次，转换成数组即可。在我的印象中到目前为止，还没有一位同学写出完整的代码。大部分笔试结果如下：</p>\n<ol>\n<li>对#,?,&amp;,=,/特殊符号进行分割转换成数组，然后再处理（很少部分能写出来）</li>\n<li>对?进行判断，然后进行分割</li>\n<li>这题是什么，jquery好像写不出来</li>\n<li>工作中没有遇到过，如果真有这需求，百度应该可以</li>\n<li>正则应该可以，不知道怎么写</li>\n<li>工作了这么多年，还要笔试，不干了</li>\n<li>…</li>\n</ol>\n<p>这道题目主要是考查对<code>Javascript基本知识</code>、<code>字符串相关操作</code>、<code>数组相关操作</code>、<code>JSON字符串</code>、<code>正则表达式的应用</code>等知识点的掌握程度。</p>\n<p>##引发的思考</p>\n<p>通过前面各种笔试的结果分析可以得到以下几大方面的要点：</p>\n<ul>\n<li>对基础知识的掌握并能灵活的运用的重要性</li>\n<li>思维逻辑的提升、代码的优化等需要长期的自我总结和学习</li>\n<li>对事物需从本质思考，深入的学习和理解</li>\n<li>工作中态度比能力更重要</li>\n</ul>\n<p>那么</p>\n<p>=&gt; 基础知识重要还是业务能力重要？</p>\n<p>本身场景不同可能侧重点也就不一样啦，这里主要是我个人的观点：对于个人发展到一定程度可能侧重的方向不再是业务表层，更多的可能是对业务底层或者架构的思考，那么相对来讲就需要对基础知识或者深层掌握更加的重要。</p>\n<p>=&gt; 如何提升自己思维逻辑能力、代码组织能力？</p>\n<ol>\n<li>反复阅读基础知识并理解其要领</li>\n<li>反复阅读优化的代码并理解其原理</li>\n<li>勤动手，多思考</li>\n</ol>\n<p>=&gt; 工作年限和工作能力的关系？</p>\n<p>如果工作年限和工作能力是正比，那么你自身的价值会越来越高。否则工作5年和工作2年没有什么区别，需自我反思，认清自己，努力提升自己。</p>\n<p>…</p>\n<p>在这里我觉得有很多的问题需要自我思考、认清自己、改掉坏习惯、提升自己基础能力。</p>\n<p>##附个人答案</p>\n<p>以下是我个人对本题给出的答案，若有误之处，望批评指正！同时也欢迎大家讨论并给出更好的答案。</p>\n<p>方法一：字符串分割成数组</p>\n<pre><code>function urlParser1(s){\n    // 方法一\n    var arr = [], obj = {}, strl, strr, hash;\n    // 获取#之后的字符串\n    hash = s.substring(s.indexOf(&apos;#&apos;)+1);\n    // 根据?号进行分割成strl和strr,然后单独处理\n    if(hash.indexOf(&apos;?&apos;) &gt; -1){\n        strl = hash.split(&apos;?&apos;)[0];\n        strl = strl.lastIndexOf(&apos;/&apos;) === strl.length-1 ? strl.substring(0, strl.length-1) : strl;\n        arr = strl.split(&apos;/&apos;);\n        strr = hash.split(&apos;?&apos;)[1];\n    } else {\n        strr = hash;\n    }\n\n    for(var i = 0, strq = strr.split(&apos;&amp;&apos;); i &lt; strq.length; i++){\n        var tmp = strq[i].split(&apos;=&apos;);\n        // 对类型进行判断\n        obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n    }\n\n    arr.push(obj);\n    // 转换成字符串JSON数组\n    return JSON.stringify(arr);\n}\n</code></pre><p>方法二：正则匹配</p>\n<pre><code>function urlParser(s){\n    var arr = [], reg, hash, obj = {}, tmp;\n    // 获取#之后的字符串\n    hash = s.substring(s.indexOf(&apos;#&apos;)+1);\n    // 正则匹配关键参数\n    reg = /(\\w+(?=\\/|\\?))|(\\w+=\\w+)/g;\n    // 奖 key=value 转换成对象\n    for(var i = 0, rets = hash.match(reg); i &lt; rets.length; i++){\n        if(rets[i].indexOf(&apos;=&apos;) &gt; -1){\n            tmp = rets[i].split(&apos;=&apos;);\n            // 对类型判断\n            obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n        } else {\n            arr.push(rets[i]);\n        }\n    }\n\n    arr.push(obj);\n    // 转换成字符串JSON数组\n    return JSON.stringify(arr);\n}\n</code></pre><p>##推荐学习资料</p>\n<ul>\n<li><a href=\"http://www.w3school.com.cn/js/index.asp\" target=\"_blank\" rel=\"noopener\">Javascript教程</a></li>\n<li><a href=\"http://book.douban.com/subject/10546125/\" target=\"_blank\" rel=\"noopener\">Javascript高级程序设计第3版</a></li>\n<li><a href=\"http://www.jb51.net/shouce/jquery1.82/regexp.html\" target=\"_blank\" rel=\"noopener\">正则表达式速查表</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>最近一直在负责团队内部前端人员的招聘，前前后后估计也面试了二十几号人，由来自知名互联网、外包公司、非计算机专业、高中毕业生等等。本次不再过多的讨论前端人员面试面经，后面如果有时间的话会针对近期前端招聘详细的分析和总结。这里选取一道笔试题在笔试结果后引发的思考。</p>\n<p>##Javascript面试题</p>\n<p>题目：实现一个URI解析方法，把url里#之后的参数解析成指定的数据结构。</p>\n<pre><code>function urlParser(s){\n    // 答题部分，写出你的代码...\n}\ntry{\n    var url1 = &quot;http://www.abc.com/m/s/#page/2/?type=latest_videos&amp;page_size=20&quot;;\n    var url2 = &quot;http://www.abc.com/m/s/#type=latest_videos&amp;page_size=20&quot;;\n    var url3 = &quot;http://www.abc.com/m/s/#page?type=latest_videos&amp;page_size=20&quot;;\n    console.log(urlParser(url1));\n    console.log(urlParser(url2));\n    console.log(urlParser(url3));\n\n    /*----[执行结果]----\n    [&quot;page&quot;,&quot;2&quot;,{&quot;type&quot;:&quot;latest_videos&quot;,&quot;page_size&quot;:20}]\n    [{&quot;type&quot;:&quot;latest_videos&quot;, &quot;page_size&quot;:20}]\n    [&quot;page&quot;,{&quot;type&quot;:&quot;latest_videos&quot;,&quot;page_size&quot;:20}]\n    ------------------*/\n} catch(e){\n    console.error(&apos;执行出错，错误信息：&apos;+e);\n}\n</code></pre><p>这道笔试题第一眼看上去比较简单，大部分同学的直接反应就是采用字符串分割N次，转换成数组即可。在我的印象中到目前为止，还没有一位同学写出完整的代码。大部分笔试结果如下：</p>\n<ol>\n<li>对#,?,&amp;,=,/特殊符号进行分割转换成数组，然后再处理（很少部分能写出来）</li>\n<li>对?进行判断，然后进行分割</li>\n<li>这题是什么，jquery好像写不出来</li>\n<li>工作中没有遇到过，如果真有这需求，百度应该可以</li>\n<li>正则应该可以，不知道怎么写</li>\n<li>工作了这么多年，还要笔试，不干了</li>\n<li>…</li>\n</ol>\n<p>这道题目主要是考查对<code>Javascript基本知识</code>、<code>字符串相关操作</code>、<code>数组相关操作</code>、<code>JSON字符串</code>、<code>正则表达式的应用</code>等知识点的掌握程度。</p>\n<p>##引发的思考</p>\n<p>通过前面各种笔试的结果分析可以得到以下几大方面的要点：</p>\n<ul>\n<li>对基础知识的掌握并能灵活的运用的重要性</li>\n<li>思维逻辑的提升、代码的优化等需要长期的自我总结和学习</li>\n<li>对事物需从本质思考，深入的学习和理解</li>\n<li>工作中态度比能力更重要</li>\n</ul>\n<p>那么</p>\n<p>=&gt; 基础知识重要还是业务能力重要？</p>\n<p>本身场景不同可能侧重点也就不一样啦，这里主要是我个人的观点：对于个人发展到一定程度可能侧重的方向不再是业务表层，更多的可能是对业务底层或者架构的思考，那么相对来讲就需要对基础知识或者深层掌握更加的重要。</p>\n<p>=&gt; 如何提升自己思维逻辑能力、代码组织能力？</p>\n<ol>\n<li>反复阅读基础知识并理解其要领</li>\n<li>反复阅读优化的代码并理解其原理</li>\n<li>勤动手，多思考</li>\n</ol>\n<p>=&gt; 工作年限和工作能力的关系？</p>\n<p>如果工作年限和工作能力是正比，那么你自身的价值会越来越高。否则工作5年和工作2年没有什么区别，需自我反思，认清自己，努力提升自己。</p>\n<p>…</p>\n<p>在这里我觉得有很多的问题需要自我思考、认清自己、改掉坏习惯、提升自己基础能力。</p>\n<p>##附个人答案</p>\n<p>以下是我个人对本题给出的答案，若有误之处，望批评指正！同时也欢迎大家讨论并给出更好的答案。</p>\n<p>方法一：字符串分割成数组</p>\n<pre><code>function urlParser1(s){\n    // 方法一\n    var arr = [], obj = {}, strl, strr, hash;\n    // 获取#之后的字符串\n    hash = s.substring(s.indexOf(&apos;#&apos;)+1);\n    // 根据?号进行分割成strl和strr,然后单独处理\n    if(hash.indexOf(&apos;?&apos;) &gt; -1){\n        strl = hash.split(&apos;?&apos;)[0];\n        strl = strl.lastIndexOf(&apos;/&apos;) === strl.length-1 ? strl.substring(0, strl.length-1) : strl;\n        arr = strl.split(&apos;/&apos;);\n        strr = hash.split(&apos;?&apos;)[1];\n    } else {\n        strr = hash;\n    }\n\n    for(var i = 0, strq = strr.split(&apos;&amp;&apos;); i &lt; strq.length; i++){\n        var tmp = strq[i].split(&apos;=&apos;);\n        // 对类型进行判断\n        obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n    }\n\n    arr.push(obj);\n    // 转换成字符串JSON数组\n    return JSON.stringify(arr);\n}\n</code></pre><p>方法二：正则匹配</p>\n<pre><code>function urlParser(s){\n    var arr = [], reg, hash, obj = {}, tmp;\n    // 获取#之后的字符串\n    hash = s.substring(s.indexOf(&apos;#&apos;)+1);\n    // 正则匹配关键参数\n    reg = /(\\w+(?=\\/|\\?))|(\\w+=\\w+)/g;\n    // 奖 key=value 转换成对象\n    for(var i = 0, rets = hash.match(reg); i &lt; rets.length; i++){\n        if(rets[i].indexOf(&apos;=&apos;) &gt; -1){\n            tmp = rets[i].split(&apos;=&apos;);\n            // 对类型判断\n            obj[tmp[0]] = isNaN(tmp[1]) ? tmp[1] : parseInt(tmp[1]);\n        } else {\n            arr.push(rets[i]);\n        }\n    }\n\n    arr.push(obj);\n    // 转换成字符串JSON数组\n    return JSON.stringify(arr);\n}\n</code></pre><p>##推荐学习资料</p>\n<ul>\n<li><a href=\"http://www.w3school.com.cn/js/index.asp\" target=\"_blank\" rel=\"noopener\">Javascript教程</a></li>\n<li><a href=\"http://book.douban.com/subject/10546125/\" target=\"_blank\" rel=\"noopener\">Javascript高级程序设计第3版</a></li>\n<li><a href=\"http://www.jb51.net/shouce/jquery1.82/regexp.html\" target=\"_blank\" rel=\"noopener\">正则表达式速查表</a></li>\n</ul>\n"},{"layout":"post","title":"Java和Javascript相互调用的实例","date":"2015-12-14T07:49:00.000Z","comments":1,"_content":"\n在用HTML5做跨平台应用开发时,尝尝会用到java和js方法互调的问题,对初学者而言,可能会有点难,在这里分享一些自己在实际开发过程中的用法,这里以单点登录的实现方法为例，希望对你有帮助: \n\n首先是java中实现JS方法并实现主动调用JS中方法: \n    \n    // Javascript接口类\n    public class SingleLoginJSInterface {\n\n        private static final String CODE_SUCCESS = \"100\";\n        private static final String CODE_CANCEL = \"101\";\n        private static final String CODE_GET_TOKEN_ERROR = \"102\";\n        private static final String MSG_SUCCESS = \"成功\";\n        private static final String MSG_CANCEL = \"用户取消\";\n        private static final String MSG_GET_TOKEN_ERROR = \"获取token失败\";\n        private static final String CODE = \"code\";\n        private static final String MSG = \"msg\";\n        private static final String UNAME = \"uname\";\n        private static final String UID = \"uid\";\n        private static final String TOKEN = \"token\";\n        \n        // Javascript接口方法\n        @JavascriptInterface\n        public void login() {\n            Log.d(\"singlesignon\", \"login\");\n            final String appId = HttpUtils.getInstance().getAppId();\n            Log.d(\"singlesignon\", \"appId:\" + appId);\n            Context context = BrowserApplication.getInstance();\n            GioneeAccount gioneeAccount = GioneeAccount.getInstance(context);\n            gioneeAccount.login(context, appId, new LoginResultListener() {\n\n                @Override\n                public void onSucess(Object obj) {\n                    Log.d(\"singlesignon\", \"success object:\" + obj);\n                    handlerResult(obj);\n                }\n\n                @Override\n                public void onCancel(Object obj) {\n                    Log.d(\"singlesignon\", \"cancel object:\" + obj);\n                    sendParamsToJS(CODE_CANCEL, MSG_CANCEL);\n                }\n\n                @Override\n                public void onGetTokenError(Object obj) {\n                    Log.d(\"singlesignon\", \"tokenerror object:\" + obj);\n                    sendParamsToJS(CODE_GET_TOKEN_ERROR, MSG_GET_TOKEN_ERROR);\n                }\n\n                private void handlerResult(Object obj) {\n                    LoginInfo loginInfo = (LoginInfo) obj;\n                    String name = loginInfo.getName();\n                    String uid = loginInfo.getUid();\n                    String token = loginInfo.getToken();\n\n                    JSONObject object = new JSONObject();\n                    try {\n                        object.put(CODE, CODE_SUCCESS);\n                        object.put(MSG, MSG_SUCCESS);\n                        object.put(UNAME, name);\n                        object.put(UID, uid);\n                        JSONObject tokenJSON = new JSONObject(token);\n                        object.put(TOKEN, tokenJSON);\n                    } catch (JSONException e) {\n                        Log.d(\"singlesignon\", \"JSONException\");\n                        e.printStackTrace();\n                    }\n                    sendParamsToJS(object);\n                }\n\n                private void sendParamsToJS(String code, String msg) {\n\n                    JSONObject object = new JSONObject();\n                    try {\n                        object.put(CODE, code);\n                        object.put(MSG, msg);\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                    }\n                    sendParamsToJS(object);\n                }\n\n                private void sendParamsToJS(JSONObject object) {\n                    Log.d(\"singlesignon\", \"object:\" + object);\n                    Controller\n                            .getInstance()\n                            .getCurrentTab()\n                            .getWebView()\n                            // java中调用JS的方法\n                            .loadUrl(\n                                    \"javascript:GNBrowser.singleLogin.middleware('\"\n                                            + object + \"')\");\n                }\n            });\n        }\n\n    }\n\n然后就可以在引用的js文件中直接通过window.SingleLoginJSInterface.login()来直接调用上面的login()方法了. \n\nJavascript调用Java中的方法代码封装：\n\n    (function(){\n        var gnLocalBrowser = {\n            singleLogin: {\n                get: null,\n                support: function(){\n                    return gnLocalBrowser.support('singleLogin');\n                },\n                login: function(){\n                    if(this.support().status){\n                       this.support().name.login();\n                    }\n                },\n                callback: function(){\n                    var that = this;\n                    var param = this.getData().token;\n                    \n                    if(window.singleLoginJumpUrl){\n                        if(window.$ === Zepto || window.$ === jQuery){\n                            $.ajax({\n                                url: window.singleLoginJumpUrl,\n                                type: 'get',\n                                data: {h:param.h,n:param.n,t:param.t,v:param.v},\n                                dataType: 'json',\n                                beforeSend: function(){},\n                                success: function(data){\n                                    alert(JSON.stringify(data));\n                                    if(data.success){\n                                        window.location.reload();\n                                    }\n                                },\n                                error: function(){\n                                    alert('登陆失败，请重新登陆');\n                                }\n                            });\n                        }\n                    } else {\n                        alert('登陆成功，未检测到请求成功的URL！');\n                    }\n                },\n                middleware: function(data){ // JAVA调用JS的方法\n                    try{\n                        //alert('JSON string is :-------' + data);\n                        data = gnLocalBrowser.json2obj(data);\n                        //alert('json parse is success.');\n                    } catch(e){\n                        //alert('json format is error.')\n                        data = null;\n                    }\n\n                    if(data && data.code === '100'){\n                        this.setData(data);\n                        this.callback();\n                    } else {\n                        this.loginFail(data);\n                    }\n                },\n                loginFail: function(data){\n                    //alert('登录异常，请重新登录！');\n                    document.title = 'hello world';\n                },\n                loginSuccess: function(){\n                    alert('登录成功！');\n                },\n                getData: function(){\n                    return this.userData;\n                },\n                setData: function(data){\n                    this.userData = data;\n                },\n            },\n            json2obj: function(json){\n                return JSON.parse(json);\n            },\n            support: function(name){\n                var classMaps = {\n                    'singleLogin': 'SingleLoginJSInterface',\n                };\n                var status = window[classMaps[name]] !== undefined ? true : false;\n                return {'status': status, 'name': window[classMaps[name]]};\n            }\n        };\n\n        window.GNBrowser = gnLocalBrowser;\n\n    })();","source":"_posts/2015-12-14-java-and-javascript-calls-each-other.md","raw":"---\nlayout: post\ntitle: Java和Javascript相互调用的实例\ndate: 2015-12-14 15:49\ncomments: true\ncategories: [javascript]\n---\n\n在用HTML5做跨平台应用开发时,尝尝会用到java和js方法互调的问题,对初学者而言,可能会有点难,在这里分享一些自己在实际开发过程中的用法,这里以单点登录的实现方法为例，希望对你有帮助: \n\n首先是java中实现JS方法并实现主动调用JS中方法: \n    \n    // Javascript接口类\n    public class SingleLoginJSInterface {\n\n        private static final String CODE_SUCCESS = \"100\";\n        private static final String CODE_CANCEL = \"101\";\n        private static final String CODE_GET_TOKEN_ERROR = \"102\";\n        private static final String MSG_SUCCESS = \"成功\";\n        private static final String MSG_CANCEL = \"用户取消\";\n        private static final String MSG_GET_TOKEN_ERROR = \"获取token失败\";\n        private static final String CODE = \"code\";\n        private static final String MSG = \"msg\";\n        private static final String UNAME = \"uname\";\n        private static final String UID = \"uid\";\n        private static final String TOKEN = \"token\";\n        \n        // Javascript接口方法\n        @JavascriptInterface\n        public void login() {\n            Log.d(\"singlesignon\", \"login\");\n            final String appId = HttpUtils.getInstance().getAppId();\n            Log.d(\"singlesignon\", \"appId:\" + appId);\n            Context context = BrowserApplication.getInstance();\n            GioneeAccount gioneeAccount = GioneeAccount.getInstance(context);\n            gioneeAccount.login(context, appId, new LoginResultListener() {\n\n                @Override\n                public void onSucess(Object obj) {\n                    Log.d(\"singlesignon\", \"success object:\" + obj);\n                    handlerResult(obj);\n                }\n\n                @Override\n                public void onCancel(Object obj) {\n                    Log.d(\"singlesignon\", \"cancel object:\" + obj);\n                    sendParamsToJS(CODE_CANCEL, MSG_CANCEL);\n                }\n\n                @Override\n                public void onGetTokenError(Object obj) {\n                    Log.d(\"singlesignon\", \"tokenerror object:\" + obj);\n                    sendParamsToJS(CODE_GET_TOKEN_ERROR, MSG_GET_TOKEN_ERROR);\n                }\n\n                private void handlerResult(Object obj) {\n                    LoginInfo loginInfo = (LoginInfo) obj;\n                    String name = loginInfo.getName();\n                    String uid = loginInfo.getUid();\n                    String token = loginInfo.getToken();\n\n                    JSONObject object = new JSONObject();\n                    try {\n                        object.put(CODE, CODE_SUCCESS);\n                        object.put(MSG, MSG_SUCCESS);\n                        object.put(UNAME, name);\n                        object.put(UID, uid);\n                        JSONObject tokenJSON = new JSONObject(token);\n                        object.put(TOKEN, tokenJSON);\n                    } catch (JSONException e) {\n                        Log.d(\"singlesignon\", \"JSONException\");\n                        e.printStackTrace();\n                    }\n                    sendParamsToJS(object);\n                }\n\n                private void sendParamsToJS(String code, String msg) {\n\n                    JSONObject object = new JSONObject();\n                    try {\n                        object.put(CODE, code);\n                        object.put(MSG, msg);\n                    } catch (JSONException e) {\n                        e.printStackTrace();\n                    }\n                    sendParamsToJS(object);\n                }\n\n                private void sendParamsToJS(JSONObject object) {\n                    Log.d(\"singlesignon\", \"object:\" + object);\n                    Controller\n                            .getInstance()\n                            .getCurrentTab()\n                            .getWebView()\n                            // java中调用JS的方法\n                            .loadUrl(\n                                    \"javascript:GNBrowser.singleLogin.middleware('\"\n                                            + object + \"')\");\n                }\n            });\n        }\n\n    }\n\n然后就可以在引用的js文件中直接通过window.SingleLoginJSInterface.login()来直接调用上面的login()方法了. \n\nJavascript调用Java中的方法代码封装：\n\n    (function(){\n        var gnLocalBrowser = {\n            singleLogin: {\n                get: null,\n                support: function(){\n                    return gnLocalBrowser.support('singleLogin');\n                },\n                login: function(){\n                    if(this.support().status){\n                       this.support().name.login();\n                    }\n                },\n                callback: function(){\n                    var that = this;\n                    var param = this.getData().token;\n                    \n                    if(window.singleLoginJumpUrl){\n                        if(window.$ === Zepto || window.$ === jQuery){\n                            $.ajax({\n                                url: window.singleLoginJumpUrl,\n                                type: 'get',\n                                data: {h:param.h,n:param.n,t:param.t,v:param.v},\n                                dataType: 'json',\n                                beforeSend: function(){},\n                                success: function(data){\n                                    alert(JSON.stringify(data));\n                                    if(data.success){\n                                        window.location.reload();\n                                    }\n                                },\n                                error: function(){\n                                    alert('登陆失败，请重新登陆');\n                                }\n                            });\n                        }\n                    } else {\n                        alert('登陆成功，未检测到请求成功的URL！');\n                    }\n                },\n                middleware: function(data){ // JAVA调用JS的方法\n                    try{\n                        //alert('JSON string is :-------' + data);\n                        data = gnLocalBrowser.json2obj(data);\n                        //alert('json parse is success.');\n                    } catch(e){\n                        //alert('json format is error.')\n                        data = null;\n                    }\n\n                    if(data && data.code === '100'){\n                        this.setData(data);\n                        this.callback();\n                    } else {\n                        this.loginFail(data);\n                    }\n                },\n                loginFail: function(data){\n                    //alert('登录异常，请重新登录！');\n                    document.title = 'hello world';\n                },\n                loginSuccess: function(){\n                    alert('登录成功！');\n                },\n                getData: function(){\n                    return this.userData;\n                },\n                setData: function(data){\n                    this.userData = data;\n                },\n            },\n            json2obj: function(json){\n                return JSON.parse(json);\n            },\n            support: function(name){\n                var classMaps = {\n                    'singleLogin': 'SingleLoginJSInterface',\n                };\n                var status = window[classMaps[name]] !== undefined ? true : false;\n                return {'status': status, 'name': window[classMaps[name]]};\n            }\n        };\n\n        window.GNBrowser = gnLocalBrowser;\n\n    })();","slug":"java-and-javascript-calls-each-other","published":1,"updated":"2018-05-30T08:12:15.875Z","photos":[],"link":"","_id":"cjhubytkv002iyis5p5j6roxg","content":"<p>在用HTML5做跨平台应用开发时,尝尝会用到java和js方法互调的问题,对初学者而言,可能会有点难,在这里分享一些自己在实际开发过程中的用法,这里以单点登录的实现方法为例，希望对你有帮助: </p>\n<p>首先是java中实现JS方法并实现主动调用JS中方法: </p>\n<pre><code>// Javascript接口类\npublic class SingleLoginJSInterface {\n\n    private static final String CODE_SUCCESS = &quot;100&quot;;\n    private static final String CODE_CANCEL = &quot;101&quot;;\n    private static final String CODE_GET_TOKEN_ERROR = &quot;102&quot;;\n    private static final String MSG_SUCCESS = &quot;成功&quot;;\n    private static final String MSG_CANCEL = &quot;用户取消&quot;;\n    private static final String MSG_GET_TOKEN_ERROR = &quot;获取token失败&quot;;\n    private static final String CODE = &quot;code&quot;;\n    private static final String MSG = &quot;msg&quot;;\n    private static final String UNAME = &quot;uname&quot;;\n    private static final String UID = &quot;uid&quot;;\n    private static final String TOKEN = &quot;token&quot;;\n\n    // Javascript接口方法\n    @JavascriptInterface\n    public void login() {\n        Log.d(&quot;singlesignon&quot;, &quot;login&quot;);\n        final String appId = HttpUtils.getInstance().getAppId();\n        Log.d(&quot;singlesignon&quot;, &quot;appId:&quot; + appId);\n        Context context = BrowserApplication.getInstance();\n        GioneeAccount gioneeAccount = GioneeAccount.getInstance(context);\n        gioneeAccount.login(context, appId, new LoginResultListener() {\n\n            @Override\n            public void onSucess(Object obj) {\n                Log.d(&quot;singlesignon&quot;, &quot;success object:&quot; + obj);\n                handlerResult(obj);\n            }\n\n            @Override\n            public void onCancel(Object obj) {\n                Log.d(&quot;singlesignon&quot;, &quot;cancel object:&quot; + obj);\n                sendParamsToJS(CODE_CANCEL, MSG_CANCEL);\n            }\n\n            @Override\n            public void onGetTokenError(Object obj) {\n                Log.d(&quot;singlesignon&quot;, &quot;tokenerror object:&quot; + obj);\n                sendParamsToJS(CODE_GET_TOKEN_ERROR, MSG_GET_TOKEN_ERROR);\n            }\n\n            private void handlerResult(Object obj) {\n                LoginInfo loginInfo = (LoginInfo) obj;\n                String name = loginInfo.getName();\n                String uid = loginInfo.getUid();\n                String token = loginInfo.getToken();\n\n                JSONObject object = new JSONObject();\n                try {\n                    object.put(CODE, CODE_SUCCESS);\n                    object.put(MSG, MSG_SUCCESS);\n                    object.put(UNAME, name);\n                    object.put(UID, uid);\n                    JSONObject tokenJSON = new JSONObject(token);\n                    object.put(TOKEN, tokenJSON);\n                } catch (JSONException e) {\n                    Log.d(&quot;singlesignon&quot;, &quot;JSONException&quot;);\n                    e.printStackTrace();\n                }\n                sendParamsToJS(object);\n            }\n\n            private void sendParamsToJS(String code, String msg) {\n\n                JSONObject object = new JSONObject();\n                try {\n                    object.put(CODE, code);\n                    object.put(MSG, msg);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n                sendParamsToJS(object);\n            }\n\n            private void sendParamsToJS(JSONObject object) {\n                Log.d(&quot;singlesignon&quot;, &quot;object:&quot; + object);\n                Controller\n                        .getInstance()\n                        .getCurrentTab()\n                        .getWebView()\n                        // java中调用JS的方法\n                        .loadUrl(\n                                &quot;javascript:GNBrowser.singleLogin.middleware(&apos;&quot;\n                                        + object + &quot;&apos;)&quot;);\n            }\n        });\n    }\n\n}\n</code></pre><p>然后就可以在引用的js文件中直接通过window.SingleLoginJSInterface.login()来直接调用上面的login()方法了. </p>\n<p>Javascript调用Java中的方法代码封装：</p>\n<pre><code>(function(){\n    var gnLocalBrowser = {\n        singleLogin: {\n            get: null,\n            support: function(){\n                return gnLocalBrowser.support(&apos;singleLogin&apos;);\n            },\n            login: function(){\n                if(this.support().status){\n                   this.support().name.login();\n                }\n            },\n            callback: function(){\n                var that = this;\n                var param = this.getData().token;\n\n                if(window.singleLoginJumpUrl){\n                    if(window.$ === Zepto || window.$ === jQuery){\n                        $.ajax({\n                            url: window.singleLoginJumpUrl,\n                            type: &apos;get&apos;,\n                            data: {h:param.h,n:param.n,t:param.t,v:param.v},\n                            dataType: &apos;json&apos;,\n                            beforeSend: function(){},\n                            success: function(data){\n                                alert(JSON.stringify(data));\n                                if(data.success){\n                                    window.location.reload();\n                                }\n                            },\n                            error: function(){\n                                alert(&apos;登陆失败，请重新登陆&apos;);\n                            }\n                        });\n                    }\n                } else {\n                    alert(&apos;登陆成功，未检测到请求成功的URL！&apos;);\n                }\n            },\n            middleware: function(data){ // JAVA调用JS的方法\n                try{\n                    //alert(&apos;JSON string is :-------&apos; + data);\n                    data = gnLocalBrowser.json2obj(data);\n                    //alert(&apos;json parse is success.&apos;);\n                } catch(e){\n                    //alert(&apos;json format is error.&apos;)\n                    data = null;\n                }\n\n                if(data &amp;&amp; data.code === &apos;100&apos;){\n                    this.setData(data);\n                    this.callback();\n                } else {\n                    this.loginFail(data);\n                }\n            },\n            loginFail: function(data){\n                //alert(&apos;登录异常，请重新登录！&apos;);\n                document.title = &apos;hello world&apos;;\n            },\n            loginSuccess: function(){\n                alert(&apos;登录成功！&apos;);\n            },\n            getData: function(){\n                return this.userData;\n            },\n            setData: function(data){\n                this.userData = data;\n            },\n        },\n        json2obj: function(json){\n            return JSON.parse(json);\n        },\n        support: function(name){\n            var classMaps = {\n                &apos;singleLogin&apos;: &apos;SingleLoginJSInterface&apos;,\n            };\n            var status = window[classMaps[name]] !== undefined ? true : false;\n            return {&apos;status&apos;: status, &apos;name&apos;: window[classMaps[name]]};\n        }\n    };\n\n    window.GNBrowser = gnLocalBrowser;\n\n})();\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>在用HTML5做跨平台应用开发时,尝尝会用到java和js方法互调的问题,对初学者而言,可能会有点难,在这里分享一些自己在实际开发过程中的用法,这里以单点登录的实现方法为例，希望对你有帮助: </p>\n<p>首先是java中实现JS方法并实现主动调用JS中方法: </p>\n<pre><code>// Javascript接口类\npublic class SingleLoginJSInterface {\n\n    private static final String CODE_SUCCESS = &quot;100&quot;;\n    private static final String CODE_CANCEL = &quot;101&quot;;\n    private static final String CODE_GET_TOKEN_ERROR = &quot;102&quot;;\n    private static final String MSG_SUCCESS = &quot;成功&quot;;\n    private static final String MSG_CANCEL = &quot;用户取消&quot;;\n    private static final String MSG_GET_TOKEN_ERROR = &quot;获取token失败&quot;;\n    private static final String CODE = &quot;code&quot;;\n    private static final String MSG = &quot;msg&quot;;\n    private static final String UNAME = &quot;uname&quot;;\n    private static final String UID = &quot;uid&quot;;\n    private static final String TOKEN = &quot;token&quot;;\n\n    // Javascript接口方法\n    @JavascriptInterface\n    public void login() {\n        Log.d(&quot;singlesignon&quot;, &quot;login&quot;);\n        final String appId = HttpUtils.getInstance().getAppId();\n        Log.d(&quot;singlesignon&quot;, &quot;appId:&quot; + appId);\n        Context context = BrowserApplication.getInstance();\n        GioneeAccount gioneeAccount = GioneeAccount.getInstance(context);\n        gioneeAccount.login(context, appId, new LoginResultListener() {\n\n            @Override\n            public void onSucess(Object obj) {\n                Log.d(&quot;singlesignon&quot;, &quot;success object:&quot; + obj);\n                handlerResult(obj);\n            }\n\n            @Override\n            public void onCancel(Object obj) {\n                Log.d(&quot;singlesignon&quot;, &quot;cancel object:&quot; + obj);\n                sendParamsToJS(CODE_CANCEL, MSG_CANCEL);\n            }\n\n            @Override\n            public void onGetTokenError(Object obj) {\n                Log.d(&quot;singlesignon&quot;, &quot;tokenerror object:&quot; + obj);\n                sendParamsToJS(CODE_GET_TOKEN_ERROR, MSG_GET_TOKEN_ERROR);\n            }\n\n            private void handlerResult(Object obj) {\n                LoginInfo loginInfo = (LoginInfo) obj;\n                String name = loginInfo.getName();\n                String uid = loginInfo.getUid();\n                String token = loginInfo.getToken();\n\n                JSONObject object = new JSONObject();\n                try {\n                    object.put(CODE, CODE_SUCCESS);\n                    object.put(MSG, MSG_SUCCESS);\n                    object.put(UNAME, name);\n                    object.put(UID, uid);\n                    JSONObject tokenJSON = new JSONObject(token);\n                    object.put(TOKEN, tokenJSON);\n                } catch (JSONException e) {\n                    Log.d(&quot;singlesignon&quot;, &quot;JSONException&quot;);\n                    e.printStackTrace();\n                }\n                sendParamsToJS(object);\n            }\n\n            private void sendParamsToJS(String code, String msg) {\n\n                JSONObject object = new JSONObject();\n                try {\n                    object.put(CODE, code);\n                    object.put(MSG, msg);\n                } catch (JSONException e) {\n                    e.printStackTrace();\n                }\n                sendParamsToJS(object);\n            }\n\n            private void sendParamsToJS(JSONObject object) {\n                Log.d(&quot;singlesignon&quot;, &quot;object:&quot; + object);\n                Controller\n                        .getInstance()\n                        .getCurrentTab()\n                        .getWebView()\n                        // java中调用JS的方法\n                        .loadUrl(\n                                &quot;javascript:GNBrowser.singleLogin.middleware(&apos;&quot;\n                                        + object + &quot;&apos;)&quot;);\n            }\n        });\n    }\n\n}\n</code></pre><p>然后就可以在引用的js文件中直接通过window.SingleLoginJSInterface.login()来直接调用上面的login()方法了. </p>\n<p>Javascript调用Java中的方法代码封装：</p>\n<pre><code>(function(){\n    var gnLocalBrowser = {\n        singleLogin: {\n            get: null,\n            support: function(){\n                return gnLocalBrowser.support(&apos;singleLogin&apos;);\n            },\n            login: function(){\n                if(this.support().status){\n                   this.support().name.login();\n                }\n            },\n            callback: function(){\n                var that = this;\n                var param = this.getData().token;\n\n                if(window.singleLoginJumpUrl){\n                    if(window.$ === Zepto || window.$ === jQuery){\n                        $.ajax({\n                            url: window.singleLoginJumpUrl,\n                            type: &apos;get&apos;,\n                            data: {h:param.h,n:param.n,t:param.t,v:param.v},\n                            dataType: &apos;json&apos;,\n                            beforeSend: function(){},\n                            success: function(data){\n                                alert(JSON.stringify(data));\n                                if(data.success){\n                                    window.location.reload();\n                                }\n                            },\n                            error: function(){\n                                alert(&apos;登陆失败，请重新登陆&apos;);\n                            }\n                        });\n                    }\n                } else {\n                    alert(&apos;登陆成功，未检测到请求成功的URL！&apos;);\n                }\n            },\n            middleware: function(data){ // JAVA调用JS的方法\n                try{\n                    //alert(&apos;JSON string is :-------&apos; + data);\n                    data = gnLocalBrowser.json2obj(data);\n                    //alert(&apos;json parse is success.&apos;);\n                } catch(e){\n                    //alert(&apos;json format is error.&apos;)\n                    data = null;\n                }\n\n                if(data &amp;&amp; data.code === &apos;100&apos;){\n                    this.setData(data);\n                    this.callback();\n                } else {\n                    this.loginFail(data);\n                }\n            },\n            loginFail: function(data){\n                //alert(&apos;登录异常，请重新登录！&apos;);\n                document.title = &apos;hello world&apos;;\n            },\n            loginSuccess: function(){\n                alert(&apos;登录成功！&apos;);\n            },\n            getData: function(){\n                return this.userData;\n            },\n            setData: function(data){\n                this.userData = data;\n            },\n        },\n        json2obj: function(json){\n            return JSON.parse(json);\n        },\n        support: function(name){\n            var classMaps = {\n                &apos;singleLogin&apos;: &apos;SingleLoginJSInterface&apos;,\n            };\n            var status = window[classMaps[name]] !== undefined ? true : false;\n            return {&apos;status&apos;: status, &apos;name&apos;: window[classMaps[name]]};\n        }\n    };\n\n    window.GNBrowser = gnLocalBrowser;\n\n})();\n</code></pre>"},{"layout":"post","title":"Javascript给window.onscroll事件不执行","date":"2016-01-20T09:10:00.000Z","comments":1,"_content":"\n今天突然收到测试反馈线上网页滚动加载不成功。当时还有点奇怪，之前测试的时候是可以正常加载数据呢！因此决定好好排查一下原因，点击这里查看[demo](/demo/window-onscroll-nothing-to-run.html)，排查步骤如下：\n    \n    // window.onscroll不能正常执行\n    window.onscroll = function(){\n        console.log('running');\n    }\n\n1. chrome开发者调试工具下进行断点检测，发现在window.onscroll方法不执行\n\n2. 去除页面上所有脚本，直接执行window.onscroll方法，结果没有输出log\n\n3. 去除页面上所有脚本（js）和样式表（css），直接执行window.onscroll方法，结果可以正确输出log\n\n4. 通过以上排查可以确认样式表对window.onscroll方法执行有影响\n\n最终对样式表进行排查发现当页面最外层元素采用(``position:absolute; left:0; right:0; top:0; bottom:0; width:100%;``)时且设置样式(``overflow:hidden; overflow-x:hidden;``)，chrome浏览器window.onscroll会失效，safari浏览器下却可以正常执行。\n\n测试浏览器UA信息如下：\n\n    // chrome 48.0.2564.97 window.onscroll失效\n    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36\n\n    // safari 9.0.2 window.onscroll可以正常执行\n    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9\n\n此现象暂时不清楚具体原因，后续补充....\n\n","source":"_posts/2016-01-20-window-onscroll-nothing-to-run.md","raw":"---\nlayout: post\ntitle: Javascript给window.onscroll事件不执行\ndate: 2016-01-20 17:10\ncomments: true\ncategories: [javascript]\n---\n\n今天突然收到测试反馈线上网页滚动加载不成功。当时还有点奇怪，之前测试的时候是可以正常加载数据呢！因此决定好好排查一下原因，点击这里查看[demo](/demo/window-onscroll-nothing-to-run.html)，排查步骤如下：\n    \n    // window.onscroll不能正常执行\n    window.onscroll = function(){\n        console.log('running');\n    }\n\n1. chrome开发者调试工具下进行断点检测，发现在window.onscroll方法不执行\n\n2. 去除页面上所有脚本，直接执行window.onscroll方法，结果没有输出log\n\n3. 去除页面上所有脚本（js）和样式表（css），直接执行window.onscroll方法，结果可以正确输出log\n\n4. 通过以上排查可以确认样式表对window.onscroll方法执行有影响\n\n最终对样式表进行排查发现当页面最外层元素采用(``position:absolute; left:0; right:0; top:0; bottom:0; width:100%;``)时且设置样式(``overflow:hidden; overflow-x:hidden;``)，chrome浏览器window.onscroll会失效，safari浏览器下却可以正常执行。\n\n测试浏览器UA信息如下：\n\n    // chrome 48.0.2564.97 window.onscroll失效\n    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36\n\n    // safari 9.0.2 window.onscroll可以正常执行\n    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9\n\n此现象暂时不清楚具体原因，后续补充....\n\n","slug":"window-onscroll-nothing-to-run","published":1,"updated":"2018-05-30T08:12:15.876Z","photos":[],"link":"","_id":"cjhubytky002lyis5m6svm7l1","content":"<p>今天突然收到测试反馈线上网页滚动加载不成功。当时还有点奇怪，之前测试的时候是可以正常加载数据呢！因此决定好好排查一下原因，点击这里查看<a href=\"/demo/window-onscroll-nothing-to-run.html\">demo</a>，排查步骤如下：</p>\n<pre><code>// window.onscroll不能正常执行\nwindow.onscroll = function(){\n    console.log(&apos;running&apos;);\n}\n</code></pre><ol>\n<li><p>chrome开发者调试工具下进行断点检测，发现在window.onscroll方法不执行</p>\n</li>\n<li><p>去除页面上所有脚本，直接执行window.onscroll方法，结果没有输出log</p>\n</li>\n<li><p>去除页面上所有脚本（js）和样式表（css），直接执行window.onscroll方法，结果可以正确输出log</p>\n</li>\n<li><p>通过以上排查可以确认样式表对window.onscroll方法执行有影响</p>\n</li>\n</ol>\n<p>最终对样式表进行排查发现当页面最外层元素采用(<code>position:absolute; left:0; right:0; top:0; bottom:0; width:100%;</code>)时且设置样式(<code>overflow:hidden; overflow-x:hidden;</code>)，chrome浏览器window.onscroll会失效，safari浏览器下却可以正常执行。</p>\n<p>测试浏览器UA信息如下：</p>\n<pre><code>// chrome 48.0.2564.97 window.onscroll失效\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36\n\n// safari 9.0.2 window.onscroll可以正常执行\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9\n</code></pre><p>此现象暂时不清楚具体原因，后续补充….</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天突然收到测试反馈线上网页滚动加载不成功。当时还有点奇怪，之前测试的时候是可以正常加载数据呢！因此决定好好排查一下原因，点击这里查看<a href=\"/demo/window-onscroll-nothing-to-run.html\">demo</a>，排查步骤如下：</p>\n<pre><code>// window.onscroll不能正常执行\nwindow.onscroll = function(){\n    console.log(&apos;running&apos;);\n}\n</code></pre><ol>\n<li><p>chrome开发者调试工具下进行断点检测，发现在window.onscroll方法不执行</p>\n</li>\n<li><p>去除页面上所有脚本，直接执行window.onscroll方法，结果没有输出log</p>\n</li>\n<li><p>去除页面上所有脚本（js）和样式表（css），直接执行window.onscroll方法，结果可以正确输出log</p>\n</li>\n<li><p>通过以上排查可以确认样式表对window.onscroll方法执行有影响</p>\n</li>\n</ol>\n<p>最终对样式表进行排查发现当页面最外层元素采用(<code>position:absolute; left:0; right:0; top:0; bottom:0; width:100%;</code>)时且设置样式(<code>overflow:hidden; overflow-x:hidden;</code>)，chrome浏览器window.onscroll会失效，safari浏览器下却可以正常执行。</p>\n<p>测试浏览器UA信息如下：</p>\n<pre><code>// chrome 48.0.2564.97 window.onscroll失效\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.97 Safari/537.36\n\n// safari 9.0.2 window.onscroll可以正常执行\nMozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/601.3.9 (KHTML, like Gecko) Version/9.0.2 Safari/601.3.9\n</code></pre><p>此现象暂时不清楚具体原因，后续补充….</p>\n"},{"layout":"post","title":"解决node app.js关闭后显示端口占用","date":"2016-03-08T09:20:00.000Z","comments":1,"_content":"\n在学习Node开发过程中，经常运行程序（node app.js）时提示端口被占用，信息如下：\n\n    node app.js\n    events.js:141\n          throw er; // Unhandled 'error' event\n          ^\n    Error: listen EADDRINUSE :::3000\n        at Object.exports._errnoException (util.js:870:11)\n        at exports._exceptionWithHostPort (util.js:893:20)\n        at Server._listen2 (net.js:1236:14)\n        at listen (net.js:1272:10)\n        at Server.listen (net.js:1368:5)\n        at EventEmitter.listen (/Users/hankewins/www/node_pro/node-test/node_modules/express/lib/application.js:617:24)\n        at Object.<anonymous> (/Users/hankewins/www/node_pro/node-test/app.js:15:5)\n        at Module._compile (module.js:409:26)\n        at Object.Module._extensions..js (module.js:416:10)\n        at Module.load (module.js:343:32)\n\n此类情况在主要出现在*unix系统下，程序退出时对应的进程未结束，请注意以下几种操作下：\n\n- mac OS X系统下应该是control + c 而不是 control + z\n- Linux系统下应该是ctrl + c\n\n通过以下命令查看端口被占用的使用：\n\n    lsof -i:3000\n\n解决端口被占用可以通过以下几种方式：\n\n- 调用系统自带的进行管理窗口，结束node进程\n- sudo kill pid 通过lsof -i:3000查看\n- sudo pkill -9 node 结束所有node进程\n- sudo npm install -g funckyou，执行funck node可以结束node进程\n\n针对node app.js单一进程管理，重复操作比较繁琐，这里推荐几个node进程管理器：\n\n- [StrongLoop Process Manager](http://strong-pm.io/)\n- [PM2](https://github.com/Unitech/pm2)\n- [Forever](https://github.com/foreverjs/forever)\n- [Supervisor](https://github.com/petruisfan/node-supervisor)\n\n参考资料：\n\n- [cnode上node运行时端口被占用问题的讨论](https://cnodejs.org/topic/560a5fdb148959375f34ffda)\n- [Express官方推荐的进程管理器](http://expressjs.com/en/advanced/pm.html)\n\n\n","source":"_posts/2016-03-08-node-error-listen-eaddrinuse.md","raw":"---\nlayout: post\ntitle: 解决node app.js关闭后显示端口占用\ndate: 2016-03-08 17:20\ncomments: true\ncategories: [Node开发]\n---\n\n在学习Node开发过程中，经常运行程序（node app.js）时提示端口被占用，信息如下：\n\n    node app.js\n    events.js:141\n          throw er; // Unhandled 'error' event\n          ^\n    Error: listen EADDRINUSE :::3000\n        at Object.exports._errnoException (util.js:870:11)\n        at exports._exceptionWithHostPort (util.js:893:20)\n        at Server._listen2 (net.js:1236:14)\n        at listen (net.js:1272:10)\n        at Server.listen (net.js:1368:5)\n        at EventEmitter.listen (/Users/hankewins/www/node_pro/node-test/node_modules/express/lib/application.js:617:24)\n        at Object.<anonymous> (/Users/hankewins/www/node_pro/node-test/app.js:15:5)\n        at Module._compile (module.js:409:26)\n        at Object.Module._extensions..js (module.js:416:10)\n        at Module.load (module.js:343:32)\n\n此类情况在主要出现在*unix系统下，程序退出时对应的进程未结束，请注意以下几种操作下：\n\n- mac OS X系统下应该是control + c 而不是 control + z\n- Linux系统下应该是ctrl + c\n\n通过以下命令查看端口被占用的使用：\n\n    lsof -i:3000\n\n解决端口被占用可以通过以下几种方式：\n\n- 调用系统自带的进行管理窗口，结束node进程\n- sudo kill pid 通过lsof -i:3000查看\n- sudo pkill -9 node 结束所有node进程\n- sudo npm install -g funckyou，执行funck node可以结束node进程\n\n针对node app.js单一进程管理，重复操作比较繁琐，这里推荐几个node进程管理器：\n\n- [StrongLoop Process Manager](http://strong-pm.io/)\n- [PM2](https://github.com/Unitech/pm2)\n- [Forever](https://github.com/foreverjs/forever)\n- [Supervisor](https://github.com/petruisfan/node-supervisor)\n\n参考资料：\n\n- [cnode上node运行时端口被占用问题的讨论](https://cnodejs.org/topic/560a5fdb148959375f34ffda)\n- [Express官方推荐的进程管理器](http://expressjs.com/en/advanced/pm.html)\n\n\n","slug":"node-error-listen-eaddrinuse","published":1,"updated":"2018-05-30T08:12:15.877Z","photos":[],"link":"","_id":"cjhubytl1002nyis5ljcv98kh","content":"<p>在学习Node开发过程中，经常运行程序（node app.js）时提示端口被占用，信息如下：</p>\n<pre><code>node app.js\nevents.js:141\n      throw er; // Unhandled &apos;error&apos; event\n      ^\nError: listen EADDRINUSE :::3000\n    at Object.exports._errnoException (util.js:870:11)\n    at exports._exceptionWithHostPort (util.js:893:20)\n    at Server._listen2 (net.js:1236:14)\n    at listen (net.js:1272:10)\n    at Server.listen (net.js:1368:5)\n    at EventEmitter.listen (/Users/hankewins/www/node_pro/node-test/node_modules/express/lib/application.js:617:24)\n    at Object.&lt;anonymous&gt; (/Users/hankewins/www/node_pro/node-test/app.js:15:5)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n</code></pre><p>此类情况在主要出现在*unix系统下，程序退出时对应的进程未结束，请注意以下几种操作下：</p>\n<ul>\n<li>mac OS X系统下应该是control + c 而不是 control + z</li>\n<li>Linux系统下应该是ctrl + c</li>\n</ul>\n<p>通过以下命令查看端口被占用的使用：</p>\n<pre><code>lsof -i:3000\n</code></pre><p>解决端口被占用可以通过以下几种方式：</p>\n<ul>\n<li>调用系统自带的进行管理窗口，结束node进程</li>\n<li>sudo kill pid 通过lsof -i:3000查看</li>\n<li>sudo pkill -9 node 结束所有node进程</li>\n<li>sudo npm install -g funckyou，执行funck node可以结束node进程</li>\n</ul>\n<p>针对node app.js单一进程管理，重复操作比较繁琐，这里推荐几个node进程管理器：</p>\n<ul>\n<li><a href=\"http://strong-pm.io/\" target=\"_blank\" rel=\"noopener\">StrongLoop Process Manager</a></li>\n<li><a href=\"https://github.com/Unitech/pm2\" target=\"_blank\" rel=\"noopener\">PM2</a></li>\n<li><a href=\"https://github.com/foreverjs/forever\" target=\"_blank\" rel=\"noopener\">Forever</a></li>\n<li><a href=\"https://github.com/petruisfan/node-supervisor\" target=\"_blank\" rel=\"noopener\">Supervisor</a></li>\n</ul>\n<p>参考资料：</p>\n<ul>\n<li><a href=\"https://cnodejs.org/topic/560a5fdb148959375f34ffda\" target=\"_blank\" rel=\"noopener\">cnode上node运行时端口被占用问题的讨论</a></li>\n<li><a href=\"http://expressjs.com/en/advanced/pm.html\" target=\"_blank\" rel=\"noopener\">Express官方推荐的进程管理器</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>在学习Node开发过程中，经常运行程序（node app.js）时提示端口被占用，信息如下：</p>\n<pre><code>node app.js\nevents.js:141\n      throw er; // Unhandled &apos;error&apos; event\n      ^\nError: listen EADDRINUSE :::3000\n    at Object.exports._errnoException (util.js:870:11)\n    at exports._exceptionWithHostPort (util.js:893:20)\n    at Server._listen2 (net.js:1236:14)\n    at listen (net.js:1272:10)\n    at Server.listen (net.js:1368:5)\n    at EventEmitter.listen (/Users/hankewins/www/node_pro/node-test/node_modules/express/lib/application.js:617:24)\n    at Object.&lt;anonymous&gt; (/Users/hankewins/www/node_pro/node-test/app.js:15:5)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n</code></pre><p>此类情况在主要出现在*unix系统下，程序退出时对应的进程未结束，请注意以下几种操作下：</p>\n<ul>\n<li>mac OS X系统下应该是control + c 而不是 control + z</li>\n<li>Linux系统下应该是ctrl + c</li>\n</ul>\n<p>通过以下命令查看端口被占用的使用：</p>\n<pre><code>lsof -i:3000\n</code></pre><p>解决端口被占用可以通过以下几种方式：</p>\n<ul>\n<li>调用系统自带的进行管理窗口，结束node进程</li>\n<li>sudo kill pid 通过lsof -i:3000查看</li>\n<li>sudo pkill -9 node 结束所有node进程</li>\n<li>sudo npm install -g funckyou，执行funck node可以结束node进程</li>\n</ul>\n<p>针对node app.js单一进程管理，重复操作比较繁琐，这里推荐几个node进程管理器：</p>\n<ul>\n<li><a href=\"http://strong-pm.io/\" target=\"_blank\" rel=\"noopener\">StrongLoop Process Manager</a></li>\n<li><a href=\"https://github.com/Unitech/pm2\" target=\"_blank\" rel=\"noopener\">PM2</a></li>\n<li><a href=\"https://github.com/foreverjs/forever\" target=\"_blank\" rel=\"noopener\">Forever</a></li>\n<li><a href=\"https://github.com/petruisfan/node-supervisor\" target=\"_blank\" rel=\"noopener\">Supervisor</a></li>\n</ul>\n<p>参考资料：</p>\n<ul>\n<li><a href=\"https://cnodejs.org/topic/560a5fdb148959375f34ffda\" target=\"_blank\" rel=\"noopener\">cnode上node运行时端口被占用问题的讨论</a></li>\n<li><a href=\"http://expressjs.com/en/advanced/pm.html\" target=\"_blank\" rel=\"noopener\">Express官方推荐的进程管理器</a></li>\n</ul>\n"},{"layout":"post","title":"前端开发工具之Sublime Text的常用插件","date":"2016-04-20T12:10:00.000Z","comments":1,"_content":"\nsublime text 常用插件\n\n- Better CoffeeScript\n- CoffeeComplie\n- DocBlockr\n- EditorConfig\n- EditorConfigSnippets\n- Emmet\n- FileHeader\n- FileSystem Autocmpletion\n- HTML Snippets\n- HTML-CSS-JS Prettify\n- HTML5\n- JsFormat\n- JSX\n- LESS\n- Markdown Preview\n- Mongoose CoffeeScript\n- React Templates\n- ReacJs\n- Sass\n- SideBarEnhancements\n- SublimeCodeIntel\n- SublimeLiner\n- SublimeTmpl\n- YUI Compressor\n- VUE Formatter\n- VUE Syntax Highlight","source":"_posts/2016-04-20-frontend-sublime-text3-plugins.md","raw":"---\nlayout: post\ntitle: 前端开发工具之Sublime Text的常用插件\ndate: 2016-04-20 20:10\ncomments: true\ncategories: [前端开发]\n---\n\nsublime text 常用插件\n\n- Better CoffeeScript\n- CoffeeComplie\n- DocBlockr\n- EditorConfig\n- EditorConfigSnippets\n- Emmet\n- FileHeader\n- FileSystem Autocmpletion\n- HTML Snippets\n- HTML-CSS-JS Prettify\n- HTML5\n- JsFormat\n- JSX\n- LESS\n- Markdown Preview\n- Mongoose CoffeeScript\n- React Templates\n- ReacJs\n- Sass\n- SideBarEnhancements\n- SublimeCodeIntel\n- SublimeLiner\n- SublimeTmpl\n- YUI Compressor\n- VUE Formatter\n- VUE Syntax Highlight","slug":"frontend-sublime-text3-plugins","published":1,"updated":"2018-05-30T08:12:15.879Z","photos":[],"link":"","_id":"cjhubytl3002qyis5129218pj","content":"<p>sublime text 常用插件</p>\n<ul>\n<li>Better CoffeeScript</li>\n<li>CoffeeComplie</li>\n<li>DocBlockr</li>\n<li>EditorConfig</li>\n<li>EditorConfigSnippets</li>\n<li>Emmet</li>\n<li>FileHeader</li>\n<li>FileSystem Autocmpletion</li>\n<li>HTML Snippets</li>\n<li>HTML-CSS-JS Prettify</li>\n<li>HTML5</li>\n<li>JsFormat</li>\n<li>JSX</li>\n<li>LESS</li>\n<li>Markdown Preview</li>\n<li>Mongoose CoffeeScript</li>\n<li>React Templates</li>\n<li>ReacJs</li>\n<li>Sass</li>\n<li>SideBarEnhancements</li>\n<li>SublimeCodeIntel</li>\n<li>SublimeLiner</li>\n<li>SublimeTmpl</li>\n<li>YUI Compressor</li>\n<li>VUE Formatter</li>\n<li>VUE Syntax Highlight</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>sublime text 常用插件</p>\n<ul>\n<li>Better CoffeeScript</li>\n<li>CoffeeComplie</li>\n<li>DocBlockr</li>\n<li>EditorConfig</li>\n<li>EditorConfigSnippets</li>\n<li>Emmet</li>\n<li>FileHeader</li>\n<li>FileSystem Autocmpletion</li>\n<li>HTML Snippets</li>\n<li>HTML-CSS-JS Prettify</li>\n<li>HTML5</li>\n<li>JsFormat</li>\n<li>JSX</li>\n<li>LESS</li>\n<li>Markdown Preview</li>\n<li>Mongoose CoffeeScript</li>\n<li>React Templates</li>\n<li>ReacJs</li>\n<li>Sass</li>\n<li>SideBarEnhancements</li>\n<li>SublimeCodeIntel</li>\n<li>SublimeLiner</li>\n<li>SublimeTmpl</li>\n<li>YUI Compressor</li>\n<li>VUE Formatter</li>\n<li>VUE Syntax Highlight</li>\n</ul>\n"},{"layout":"post","title":"CentOS7下安装Jekyll及配置","date":"2016-08-20T07:05:00.000Z","comments":0,"_content":"\n这两天购买了[linode](https://www.linode.com/)的vps,通过各种设置后成功安装了```CentOS7```操作系统，现尝试在```CentOS7```下安装并使用```Jekyll```，记录步骤和安装过程中产生的问题和解决方法。\n\n### 查看系统版本\n\n方式一：\n\n```\n$ rpm -q rpm -q centos-release // centos-release-7-2.1511.el7.centos.2.10.x86_64\n```\n\n方式二：\n\n```\n$ cat /etc/redhat-release // CentOS Linux release 7.2.1511 (Core)\n```\n\n或\n\n```\n$ cat /etc/centos-release // CentOS Linux release 7.2.1511 (Core)\n```\n\n### 安装Ruby\n\n```\n$ yum install ruby\n$ ruby -v // ruby 2.0.0p598 (2014-11-13) [x86_64-linux]\n$ gem -v // 2.0.14\n```\n\n### 安装Jekyll\n\n通过gem安装Jekyll。因为网络问题需要将国外的镜像替换为国内的镜像（同Windows下的操作相同）\n\n```\n$ gem sources --remove https://rubygems.org/\n$ gem sources --add https://ruby.taobao.org/\n$ gem sources -l // 查看源列表\n```\n\n执行命令\n\n```\n$ gem install jekyll\n```\n\n如果出现如下错误\n\n```\nmkmf.rb can't find header files for ruby at /usr/share/include/ruby.h\n```\n\n安装ruby-devel即可解决\n\n```\n$ yum install ruby-devel\n```\n\n如果仍出现编译错误，安装以下依赖\n\n```\n$ yum install libtool automake autoconf gcc-c++ openssl-devel\n```\n\n至此安装成功\n\n### Jekyll创建博客\n\n```\n$ jekyll new weblog\n$ cd weblog\n$ jekyll serve\n```\n\n### 参考资料\n\n+ [jekyllrb](http://jekyllrb.com/docs/home/)\n+ [Jekyll中文](http://jekyll.com.cn/)\n+ [RubyGems 镜像](https://ruby.taobao.org/)\n\n\n\n\n","source":"_posts/2016-08-20-install-jekyll-on-centos7.md","raw":"---\nlayout: post\ntitle: CentOS7下安装Jekyll及配置\ndate: 2016-08-20 15:05\ncomments: false\ncategories: [服务器]\n---\n\n这两天购买了[linode](https://www.linode.com/)的vps,通过各种设置后成功安装了```CentOS7```操作系统，现尝试在```CentOS7```下安装并使用```Jekyll```，记录步骤和安装过程中产生的问题和解决方法。\n\n### 查看系统版本\n\n方式一：\n\n```\n$ rpm -q rpm -q centos-release // centos-release-7-2.1511.el7.centos.2.10.x86_64\n```\n\n方式二：\n\n```\n$ cat /etc/redhat-release // CentOS Linux release 7.2.1511 (Core)\n```\n\n或\n\n```\n$ cat /etc/centos-release // CentOS Linux release 7.2.1511 (Core)\n```\n\n### 安装Ruby\n\n```\n$ yum install ruby\n$ ruby -v // ruby 2.0.0p598 (2014-11-13) [x86_64-linux]\n$ gem -v // 2.0.14\n```\n\n### 安装Jekyll\n\n通过gem安装Jekyll。因为网络问题需要将国外的镜像替换为国内的镜像（同Windows下的操作相同）\n\n```\n$ gem sources --remove https://rubygems.org/\n$ gem sources --add https://ruby.taobao.org/\n$ gem sources -l // 查看源列表\n```\n\n执行命令\n\n```\n$ gem install jekyll\n```\n\n如果出现如下错误\n\n```\nmkmf.rb can't find header files for ruby at /usr/share/include/ruby.h\n```\n\n安装ruby-devel即可解决\n\n```\n$ yum install ruby-devel\n```\n\n如果仍出现编译错误，安装以下依赖\n\n```\n$ yum install libtool automake autoconf gcc-c++ openssl-devel\n```\n\n至此安装成功\n\n### Jekyll创建博客\n\n```\n$ jekyll new weblog\n$ cd weblog\n$ jekyll serve\n```\n\n### 参考资料\n\n+ [jekyllrb](http://jekyllrb.com/docs/home/)\n+ [Jekyll中文](http://jekyll.com.cn/)\n+ [RubyGems 镜像](https://ruby.taobao.org/)\n\n\n\n\n","slug":"install-jekyll-on-centos7","published":1,"updated":"2018-05-30T08:12:15.881Z","photos":[],"link":"","_id":"cjhubytl5002syis538todx5b","content":"<p>这两天购买了<a href=\"https://www.linode.com/\" target=\"_blank\" rel=\"noopener\">linode</a>的vps,通过各种设置后成功安装了<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 查看系统版本</span><br><span class=\"line\"></span><br><span class=\"line\">方式一：</span><br></pre></td></tr></table></figure></p>\n<p>$ rpm -q rpm -q centos-release // centos-release-7-2.1511.el7.centos.2.10.x86_64<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">方式二：</span><br></pre></td></tr></table></figure></p>\n<p>$ cat /etc/redhat-release // CentOS Linux release 7.2.1511 (Core)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">或</span><br></pre></td></tr></table></figure></p>\n<p>$ cat /etc/centos-release // CentOS Linux release 7.2.1511 (Core)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 安装Ruby</span><br></pre></td></tr></table></figure></p>\n<p>$ yum install ruby<br>$ ruby -v // ruby 2.0.0p598 (2014-11-13) [x86_64-linux]<br>$ gem -v // 2.0.14<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 安装Jekyll</span><br><span class=\"line\"></span><br><span class=\"line\">通过gem安装Jekyll。因为网络问题需要将国外的镜像替换为国内的镜像（同Windows下的操作相同）</span><br></pre></td></tr></table></figure></p>\n<p>$ gem sources –remove <a href=\"https://rubygems.org/\" target=\"_blank\" rel=\"noopener\">https://rubygems.org/</a><br>$ gem sources –add <a href=\"https://ruby.taobao.org/\" target=\"_blank\" rel=\"noopener\">https://ruby.taobao.org/</a><br>$ gem sources -l // 查看源列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行命令</span><br></pre></td></tr></table></figure></p>\n<p>$ gem install jekyll<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">如果出现如下错误</span><br></pre></td></tr></table></figure></p>\n<p>mkmf.rb can’t find header files for ruby at /usr/share/include/ruby.h<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">安装ruby-devel即可解决</span><br></pre></td></tr></table></figure></p>\n<p>$ yum install ruby-devel<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">如果仍出现编译错误，安装以下依赖</span><br></pre></td></tr></table></figure></p>\n<p>$ yum install libtool automake autoconf gcc-c++ openssl-devel<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">至此安装成功</span><br><span class=\"line\"></span><br><span class=\"line\">### Jekyll创建博客</span><br></pre></td></tr></table></figure></p>\n<p>$ jekyll new weblog<br>$ cd weblog<br>$ jekyll serve<br><code>`</code></p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"http://jekyllrb.com/docs/home/\" target=\"_blank\" rel=\"noopener\">jekyllrb</a></li>\n<li><a href=\"http://jekyll.com.cn/\" target=\"_blank\" rel=\"noopener\">Jekyll中文</a></li>\n<li><a href=\"https://ruby.taobao.org/\" target=\"_blank\" rel=\"noopener\">RubyGems 镜像</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>这两天购买了<a href=\"https://www.linode.com/\" target=\"_blank\" rel=\"noopener\">linode</a>的vps,通过各种设置后成功安装了<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 查看系统版本</span><br><span class=\"line\"></span><br><span class=\"line\">方式一：</span><br></pre></td></tr></table></figure></p>\n<p>$ rpm -q rpm -q centos-release // centos-release-7-2.1511.el7.centos.2.10.x86_64<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">方式二：</span><br></pre></td></tr></table></figure></p>\n<p>$ cat /etc/redhat-release // CentOS Linux release 7.2.1511 (Core)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">或</span><br></pre></td></tr></table></figure></p>\n<p>$ cat /etc/centos-release // CentOS Linux release 7.2.1511 (Core)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 安装Ruby</span><br></pre></td></tr></table></figure></p>\n<p>$ yum install ruby<br>$ ruby -v // ruby 2.0.0p598 (2014-11-13) [x86_64-linux]<br>$ gem -v // 2.0.14<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 安装Jekyll</span><br><span class=\"line\"></span><br><span class=\"line\">通过gem安装Jekyll。因为网络问题需要将国外的镜像替换为国内的镜像（同Windows下的操作相同）</span><br></pre></td></tr></table></figure></p>\n<p>$ gem sources –remove <a href=\"https://rubygems.org/\" target=\"_blank\" rel=\"noopener\">https://rubygems.org/</a><br>$ gem sources –add <a href=\"https://ruby.taobao.org/\" target=\"_blank\" rel=\"noopener\">https://ruby.taobao.org/</a><br>$ gem sources -l // 查看源列表<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行命令</span><br></pre></td></tr></table></figure></p>\n<p>$ gem install jekyll<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">如果出现如下错误</span><br></pre></td></tr></table></figure></p>\n<p>mkmf.rb can’t find header files for ruby at /usr/share/include/ruby.h<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">安装ruby-devel即可解决</span><br></pre></td></tr></table></figure></p>\n<p>$ yum install ruby-devel<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">如果仍出现编译错误，安装以下依赖</span><br></pre></td></tr></table></figure></p>\n<p>$ yum install libtool automake autoconf gcc-c++ openssl-devel<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">至此安装成功</span><br><span class=\"line\"></span><br><span class=\"line\">### Jekyll创建博客</span><br></pre></td></tr></table></figure></p>\n<p>$ jekyll new weblog<br>$ cd weblog<br>$ jekyll serve<br><code>`</code></p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><ul>\n<li><a href=\"http://jekyllrb.com/docs/home/\" target=\"_blank\" rel=\"noopener\">jekyllrb</a></li>\n<li><a href=\"http://jekyll.com.cn/\" target=\"_blank\" rel=\"noopener\">Jekyll中文</a></li>\n<li><a href=\"https://ruby.taobao.org/\" target=\"_blank\" rel=\"noopener\">RubyGems 镜像</a></li>\n</ul>\n"},{"layout":"post","title":"如何实现HTML标签的转义和反转义","date":"2016-09-12T07:20:00.000Z","comments":0,"_content":"\n## 背景\n\n在进行web项目开发过程中可能都使用过js的转义和反转义的方法,在此就不再讨论，不清楚的朋友可以查看`参考资料`中的链接地址。今天主要是讨论如何实现HTML标签的转义和反转义。\n\n还记得很早以前使用Dreamweaver开发网页时可以很容易对HTML标签进行转义，自带提示功能和可视化转义功能。常见的HTML字符转义有：`\" \"转义后&nbsp;`、`\"<\"转义后\"&lt;\"`、`\">\"转义后\"&gt;\"`等，对于已经习惯了纯代码编写的前端朋友来说，在不查询HTML字符转义对照表以及第三方工具时，有没有其他办法实现HTML字符的转义呢？\n\n## 需求（场景）\n\n1. 前端开发某些特定的功能时需要对用户的输入进行安全检测并对特殊字符进行转义\n\n2. 多端（PC端、client端、移动端）数据来源统一接口时，需要对特殊数据进行字符转义\n\n3. 对多端用户输入的内容进行前端检搜时需对特殊字符进行转义\n\n## 实现\n\n利用innerHTML和innerText对于内容获取和赋值的差异进行操作。innerHTML可以获取和赋值带有HTML标签的内容，而innerText仅能获取纯文本内容，忽略HTML节点标签。所以我们可以先将需要转义的内容赋值给innerText，然后再通过innerHTML获取其内容，这时获取的内容就是转义后的文本。代码如下：\n\nHTML标签转义成特殊字符\n\n```js\n<script type=\"text/javascript\">\n\t// HTML标签转义成特殊字符\n\tfunction encodeHTML(html){\n\t\tvar output, elem = document.createElement('div');\n\t\telem.textContent != null ? (elem.textContent = html) : (elem.innerText = html);\n\t\toutput = elem.innerHTML;\n\t\telem = null;\n\t\treturn output;\n\t}\n\n\tvar str1 = '<p>这里是一段有趣的内容，标签被转义了！</p>';\n\t// &lt;p&gt;这里是一段有趣的内容，标签被转义了！&lt;/p&gt;\n\tconsole.log(encodeHTML(str1));\n</script>\n```\n\n特殊字符转义成HTML标签\n\n```js\n<script type=\"text/javascript\"></script>\n\t// 特殊字符转义成HTML标签\n\tfunction decodeHTML(html){\n\t\tvar output, elem = document.createElement('div');\n\t\telem.innerHTML = html;\n\t\toutput = elem.innerText || elem.textContent;\n\t\telem = null;\n\t\treturn output;\n\t}\n\n\tvar str2 = '&lt;p&gt;这里是一段有趣的内容，标签还原了！&lt;/p&gt;';\n\t// <p>这里是一段有趣的内容，标签还原了！</p>\n\tconsole.log(decodeHTML(str2));\n\n</script>\n```\n\n`注：火狐不支持innerText，需要使用textContent属性，而IE早期版本不支持此属性，为了同时兼容IE及火狐，需要进行判断操作，现主流浏览器支持innerText也支持textContent。`\n\n## 参考资料：\n\n- [innerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML)\n- [innerText&textContent](http://deuka54.blogspot.jp/2009/05/javascript-innertext-textcontent.html)\n- [escape](http://www.w3school.com.cn/jsref/jsref_escape.asp)\n- [unescape](http://www.w3school.com.cn/jsref/jsref_unescape.asp)\n- [encodeURI](http://www.w3school.com.cn/jsref/jsref_encodeuri.asp)\n- [decodeURI](http://www.w3school.com.cn/jsref/jsref_decodeuri.asp)\n- [encodeURIComponent](http://www.w3school.com.cn/jsref/jsref_encodeURIComponent.asp)\n- [decodeURIComponent](http://www.w3school.com.cn/jsref/jsref_decodeURIComponent.asp)\n","source":"_posts/2016-09-12-how-to-implement-the-HTML-tags-to-escape-and-escape.md","raw":"---\nlayout: post\ntitle: 如何实现HTML标签的转义和反转义\ndate: 2016-09-12 15:20\ncomments: false\ncategories: [javascript]\n---\n\n## 背景\n\n在进行web项目开发过程中可能都使用过js的转义和反转义的方法,在此就不再讨论，不清楚的朋友可以查看`参考资料`中的链接地址。今天主要是讨论如何实现HTML标签的转义和反转义。\n\n还记得很早以前使用Dreamweaver开发网页时可以很容易对HTML标签进行转义，自带提示功能和可视化转义功能。常见的HTML字符转义有：`\" \"转义后&nbsp;`、`\"<\"转义后\"&lt;\"`、`\">\"转义后\"&gt;\"`等，对于已经习惯了纯代码编写的前端朋友来说，在不查询HTML字符转义对照表以及第三方工具时，有没有其他办法实现HTML字符的转义呢？\n\n## 需求（场景）\n\n1. 前端开发某些特定的功能时需要对用户的输入进行安全检测并对特殊字符进行转义\n\n2. 多端（PC端、client端、移动端）数据来源统一接口时，需要对特殊数据进行字符转义\n\n3. 对多端用户输入的内容进行前端检搜时需对特殊字符进行转义\n\n## 实现\n\n利用innerHTML和innerText对于内容获取和赋值的差异进行操作。innerHTML可以获取和赋值带有HTML标签的内容，而innerText仅能获取纯文本内容，忽略HTML节点标签。所以我们可以先将需要转义的内容赋值给innerText，然后再通过innerHTML获取其内容，这时获取的内容就是转义后的文本。代码如下：\n\nHTML标签转义成特殊字符\n\n```js\n<script type=\"text/javascript\">\n\t// HTML标签转义成特殊字符\n\tfunction encodeHTML(html){\n\t\tvar output, elem = document.createElement('div');\n\t\telem.textContent != null ? (elem.textContent = html) : (elem.innerText = html);\n\t\toutput = elem.innerHTML;\n\t\telem = null;\n\t\treturn output;\n\t}\n\n\tvar str1 = '<p>这里是一段有趣的内容，标签被转义了！</p>';\n\t// &lt;p&gt;这里是一段有趣的内容，标签被转义了！&lt;/p&gt;\n\tconsole.log(encodeHTML(str1));\n</script>\n```\n\n特殊字符转义成HTML标签\n\n```js\n<script type=\"text/javascript\"></script>\n\t// 特殊字符转义成HTML标签\n\tfunction decodeHTML(html){\n\t\tvar output, elem = document.createElement('div');\n\t\telem.innerHTML = html;\n\t\toutput = elem.innerText || elem.textContent;\n\t\telem = null;\n\t\treturn output;\n\t}\n\n\tvar str2 = '&lt;p&gt;这里是一段有趣的内容，标签还原了！&lt;/p&gt;';\n\t// <p>这里是一段有趣的内容，标签还原了！</p>\n\tconsole.log(decodeHTML(str2));\n\n</script>\n```\n\n`注：火狐不支持innerText，需要使用textContent属性，而IE早期版本不支持此属性，为了同时兼容IE及火狐，需要进行判断操作，现主流浏览器支持innerText也支持textContent。`\n\n## 参考资料：\n\n- [innerHTML](https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML)\n- [innerText&textContent](http://deuka54.blogspot.jp/2009/05/javascript-innertext-textcontent.html)\n- [escape](http://www.w3school.com.cn/jsref/jsref_escape.asp)\n- [unescape](http://www.w3school.com.cn/jsref/jsref_unescape.asp)\n- [encodeURI](http://www.w3school.com.cn/jsref/jsref_encodeuri.asp)\n- [decodeURI](http://www.w3school.com.cn/jsref/jsref_decodeuri.asp)\n- [encodeURIComponent](http://www.w3school.com.cn/jsref/jsref_encodeURIComponent.asp)\n- [decodeURIComponent](http://www.w3school.com.cn/jsref/jsref_decodeURIComponent.asp)\n","slug":"how-to-implement-the-HTML-tags-to-escape-and-escape","published":1,"updated":"2018-05-30T08:12:15.882Z","photos":[],"link":"","_id":"cjhubytl7002vyis52o1wb3nl","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在进行web项目开发过程中可能都使用过js的转义和反转义的方法,在此就不再讨论，不清楚的朋友可以查看<code>参考资料</code>中的链接地址。今天主要是讨论如何实现HTML标签的转义和反转义。</p>\n<p>还记得很早以前使用Dreamweaver开发网页时可以很容易对HTML标签进行转义，自带提示功能和可视化转义功能。常见的HTML字符转义有：<code>&quot; &quot;转义后&amp;nbsp;</code>、<code>&quot;&lt;&quot;转义后&quot;&amp;lt;&quot;</code>、<code>&quot;&gt;&quot;转义后&quot;&amp;gt;&quot;</code>等，对于已经习惯了纯代码编写的前端朋友来说，在不查询HTML字符转义对照表以及第三方工具时，有没有其他办法实现HTML字符的转义呢？</p>\n<h2 id=\"需求（场景）\"><a href=\"#需求（场景）\" class=\"headerlink\" title=\"需求（场景）\"></a>需求（场景）</h2><ol>\n<li><p>前端开发某些特定的功能时需要对用户的输入进行安全检测并对特殊字符进行转义</p>\n</li>\n<li><p>多端（PC端、client端、移动端）数据来源统一接口时，需要对特殊数据进行字符转义</p>\n</li>\n<li><p>对多端用户输入的内容进行前端检搜时需对特殊字符进行转义</p>\n</li>\n</ol>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>利用innerHTML和innerText对于内容获取和赋值的差异进行操作。innerHTML可以获取和赋值带有HTML标签的内容，而innerText仅能获取纯文本内容，忽略HTML节点标签。所以我们可以先将需要转义的内容赋值给innerText，然后再通过innerHTML获取其内容，这时获取的内容就是转义后的文本。代码如下：</p>\n<p>HTML标签转义成特殊字符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">\t<span class=\"comment\">// HTML标签转义成特殊字符</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encodeHTML</span>(<span class=\"params\">html</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> output, elem = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">\t\telem.textContent != <span class=\"literal\">null</span> ? (elem.textContent = html) : (elem.innerText = html);</span><br><span class=\"line\">\t\toutput = elem.innerHTML;</span><br><span class=\"line\">\t\telem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> output;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> str1 = <span class=\"string\">'&lt;p&gt;这里是一段有趣的内容，标签被转义了！&lt;/p&gt;'</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// &amp;lt;p&amp;gt;这里是一段有趣的内容，标签被转义了！&amp;lt;/p&amp;gt;</span></span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(encodeHTML(str1));</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>特殊字符转义成HTML标签</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">\t<span class=\"comment\">// 特殊字符转义成HTML标签</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decodeHTML</span>(<span class=\"params\">html</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> output, elem = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">\t\telem.innerHTML = html;</span><br><span class=\"line\">\t\toutput = elem.innerText || elem.textContent;</span><br><span class=\"line\">\t\telem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> output;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> str2 = <span class=\"string\">'&amp;lt;p&amp;gt;这里是一段有趣的内容，标签还原了！&amp;lt;/p&amp;gt;'</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// &lt;p&gt;这里是一段有趣的内容，标签还原了！&lt;/p&gt;</span></span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(decodeHTML(str2));</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>注：火狐不支持innerText，需要使用textContent属性，而IE早期版本不支持此属性，为了同时兼容IE及火狐，需要进行判断操作，现主流浏览器支持innerText也支持textContent。</code></p>\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML\" target=\"_blank\" rel=\"noopener\">innerHTML</a></li>\n<li><a href=\"http://deuka54.blogspot.jp/2009/05/javascript-innertext-textcontent.html\" target=\"_blank\" rel=\"noopener\">innerText&amp;textContent</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_escape.asp\" target=\"_blank\" rel=\"noopener\">escape</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_unescape.asp\" target=\"_blank\" rel=\"noopener\">unescape</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_encodeuri.asp\" target=\"_blank\" rel=\"noopener\">encodeURI</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_decodeuri.asp\" target=\"_blank\" rel=\"noopener\">decodeURI</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_encodeURIComponent.asp\" target=\"_blank\" rel=\"noopener\">encodeURIComponent</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_decodeURIComponent.asp\" target=\"_blank\" rel=\"noopener\">decodeURIComponent</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在进行web项目开发过程中可能都使用过js的转义和反转义的方法,在此就不再讨论，不清楚的朋友可以查看<code>参考资料</code>中的链接地址。今天主要是讨论如何实现HTML标签的转义和反转义。</p>\n<p>还记得很早以前使用Dreamweaver开发网页时可以很容易对HTML标签进行转义，自带提示功能和可视化转义功能。常见的HTML字符转义有：<code>&quot; &quot;转义后&amp;nbsp;</code>、<code>&quot;&lt;&quot;转义后&quot;&amp;lt;&quot;</code>、<code>&quot;&gt;&quot;转义后&quot;&amp;gt;&quot;</code>等，对于已经习惯了纯代码编写的前端朋友来说，在不查询HTML字符转义对照表以及第三方工具时，有没有其他办法实现HTML字符的转义呢？</p>\n<h2 id=\"需求（场景）\"><a href=\"#需求（场景）\" class=\"headerlink\" title=\"需求（场景）\"></a>需求（场景）</h2><ol>\n<li><p>前端开发某些特定的功能时需要对用户的输入进行安全检测并对特殊字符进行转义</p>\n</li>\n<li><p>多端（PC端、client端、移动端）数据来源统一接口时，需要对特殊数据进行字符转义</p>\n</li>\n<li><p>对多端用户输入的内容进行前端检搜时需对特殊字符进行转义</p>\n</li>\n</ol>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>利用innerHTML和innerText对于内容获取和赋值的差异进行操作。innerHTML可以获取和赋值带有HTML标签的内容，而innerText仅能获取纯文本内容，忽略HTML节点标签。所以我们可以先将需要转义的内容赋值给innerText，然后再通过innerHTML获取其内容，这时获取的内容就是转义后的文本。代码如下：</p>\n<p>HTML标签转义成特殊字符</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">\t<span class=\"comment\">// HTML标签转义成特殊字符</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">encodeHTML</span>(<span class=\"params\">html</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> output, elem = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">\t\telem.textContent != <span class=\"literal\">null</span> ? (elem.textContent = html) : (elem.innerText = html);</span><br><span class=\"line\">\t\toutput = elem.innerHTML;</span><br><span class=\"line\">\t\telem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> output;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> str1 = <span class=\"string\">'&lt;p&gt;这里是一段有趣的内容，标签被转义了！&lt;/p&gt;'</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// &amp;lt;p&amp;gt;这里是一段有趣的内容，标签被转义了！&amp;lt;/p&amp;gt;</span></span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(encodeHTML(str1));</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p>特殊字符转义成HTML标签</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">\t<span class=\"comment\">// 特殊字符转义成HTML标签</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">decodeHTML</span>(<span class=\"params\">html</span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> output, elem = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">\t\telem.innerHTML = html;</span><br><span class=\"line\">\t\toutput = elem.innerText || elem.textContent;</span><br><span class=\"line\">\t\telem = <span class=\"literal\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> output;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> str2 = <span class=\"string\">'&amp;lt;p&amp;gt;这里是一段有趣的内容，标签还原了！&amp;lt;/p&amp;gt;'</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// &lt;p&gt;这里是一段有趣的内容，标签还原了！&lt;/p&gt;</span></span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(decodeHTML(str2));</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>注：火狐不支持innerText，需要使用textContent属性，而IE早期版本不支持此属性，为了同时兼容IE及火狐，需要进行判断操作，现主流浏览器支持innerText也支持textContent。</code></p>\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML\" target=\"_blank\" rel=\"noopener\">innerHTML</a></li>\n<li><a href=\"http://deuka54.blogspot.jp/2009/05/javascript-innertext-textcontent.html\" target=\"_blank\" rel=\"noopener\">innerText&amp;textContent</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_escape.asp\" target=\"_blank\" rel=\"noopener\">escape</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_unescape.asp\" target=\"_blank\" rel=\"noopener\">unescape</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_encodeuri.asp\" target=\"_blank\" rel=\"noopener\">encodeURI</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_decodeuri.asp\" target=\"_blank\" rel=\"noopener\">decodeURI</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_encodeURIComponent.asp\" target=\"_blank\" rel=\"noopener\">encodeURIComponent</a></li>\n<li><a href=\"http://www.w3school.com.cn/jsref/jsref_decodeURIComponent.asp\" target=\"_blank\" rel=\"noopener\">decodeURIComponent</a></li>\n</ul>\n"},{"layout":"post","title":"git常用操作命令","date":"2016-09-13T13:45:00.000Z","comments":0,"_content":"\n### 一、基本命令\n\n查看版本号\n\n```\n$ git version\n```\n\n查看帮助\n\n```\n$ git help // git or git --help 都可以查看git用法\n```\n\n### 二、新建本地仓库或clone远程仓库\n\n初始化操作\n\n```\n$ mkdir <new project> // 创建空项目文件夹\n$ cd new-project\n$ git init\n```\n\n从远程主机克隆一个版本库\n\n```\n$ git clone <版本库的网址> // clone下来的，默认是master分支\n```\n\n设置提交者和邮箱\n\n```\n$ git config user.name \"提交者\"\n$ git config user.email \"test@admin.com\"\n```\n\n注：如果需要全局设置git相关用户配置信息可以使用git config --global user.xxx\n\n### 三、更新至仓库\n\n拉取最新代码\n\n```\n$ git pull <版本库的分支> // git pull origin master\n```\n\n添加修改的内容到本地缓存\n\n```\n$ git add . // 也可以指定文件或目录\n```\n\n提交修改的内容到本地仓库\n\n```\n$ git commit -m '提交内容日志'\n```\n\n更新修改的内容至远程仓库\n\n```\n$ git push <版本库的分支> // git push origin master\n```\n\n### 四、管理仓库分支\n\n新建本地分支\n\n```\n$ git branch <new branch>\n```\n\n在指定分支下新建本地分支\n\n```\n$ git checkout -b <new branch> <specified branch>\n```\n\n删除本地分支\n\n```\n$ git branch -d <branch>\n```\n\n删除本地分支的引用\n\n```\n$ git fetch -p\n```\n\n注：一个远程分支被删除了，可是本地还存在其对应的分支引用，可以通过git fetch -p 删除\n\n删除远程分支\n\n```\n$ git branch -r -d <branch>\n```\n\n删除远程分支\n\n```\n$ git push origin :branch-name\n```\n\n注意：冒号前面的空格不能少，原理是把一个空分支push到server上，相当于删除该分支。\n\n合并分支\n\n```\n$ git merge <branch> // 当前分支合并指定分支\n```\n\n撤消添加操作\n\n```\n// 撤消添加的指定文件\n$ git reset filename\n// 撤消所有添加的操作\n$ git reset HEAD .\n```\n\n取消本地commit的文件\n\n```\n$ git log // 查看日志，并获取需回滚的节点ID:commit_id\n$ git reset --hard commit_id\n```\n\n注：commit_id为需要回滚到的日志ID\n\n当前分支获取另一个分支提交的记录\n\n```\n// 获取分支branch1的提交记录Id\n$ git checkout branch1\n// commit 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f\n$ git log\n\n// 在分支branch2中重新提交分支branch1中获取的commitId\n$ git checkout branch2\n$ git cherry-pick 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f \n```\n\n注意：如果提示获取失败（冲突），请按正常处理流程安排。\n\n\n\n","source":"_posts/2016-09-13-git-opreation-question.md","raw":"---\nlayout: post\ntitle: git常用操作命令\ndate: 2016-09-13 21:45\ncomments: false\ncategories: [版本管理]\n---\n\n### 一、基本命令\n\n查看版本号\n\n```\n$ git version\n```\n\n查看帮助\n\n```\n$ git help // git or git --help 都可以查看git用法\n```\n\n### 二、新建本地仓库或clone远程仓库\n\n初始化操作\n\n```\n$ mkdir <new project> // 创建空项目文件夹\n$ cd new-project\n$ git init\n```\n\n从远程主机克隆一个版本库\n\n```\n$ git clone <版本库的网址> // clone下来的，默认是master分支\n```\n\n设置提交者和邮箱\n\n```\n$ git config user.name \"提交者\"\n$ git config user.email \"test@admin.com\"\n```\n\n注：如果需要全局设置git相关用户配置信息可以使用git config --global user.xxx\n\n### 三、更新至仓库\n\n拉取最新代码\n\n```\n$ git pull <版本库的分支> // git pull origin master\n```\n\n添加修改的内容到本地缓存\n\n```\n$ git add . // 也可以指定文件或目录\n```\n\n提交修改的内容到本地仓库\n\n```\n$ git commit -m '提交内容日志'\n```\n\n更新修改的内容至远程仓库\n\n```\n$ git push <版本库的分支> // git push origin master\n```\n\n### 四、管理仓库分支\n\n新建本地分支\n\n```\n$ git branch <new branch>\n```\n\n在指定分支下新建本地分支\n\n```\n$ git checkout -b <new branch> <specified branch>\n```\n\n删除本地分支\n\n```\n$ git branch -d <branch>\n```\n\n删除本地分支的引用\n\n```\n$ git fetch -p\n```\n\n注：一个远程分支被删除了，可是本地还存在其对应的分支引用，可以通过git fetch -p 删除\n\n删除远程分支\n\n```\n$ git branch -r -d <branch>\n```\n\n删除远程分支\n\n```\n$ git push origin :branch-name\n```\n\n注意：冒号前面的空格不能少，原理是把一个空分支push到server上，相当于删除该分支。\n\n合并分支\n\n```\n$ git merge <branch> // 当前分支合并指定分支\n```\n\n撤消添加操作\n\n```\n// 撤消添加的指定文件\n$ git reset filename\n// 撤消所有添加的操作\n$ git reset HEAD .\n```\n\n取消本地commit的文件\n\n```\n$ git log // 查看日志，并获取需回滚的节点ID:commit_id\n$ git reset --hard commit_id\n```\n\n注：commit_id为需要回滚到的日志ID\n\n当前分支获取另一个分支提交的记录\n\n```\n// 获取分支branch1的提交记录Id\n$ git checkout branch1\n// commit 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f\n$ git log\n\n// 在分支branch2中重新提交分支branch1中获取的commitId\n$ git checkout branch2\n$ git cherry-pick 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f \n```\n\n注意：如果提示获取失败（冲突），请按正常处理流程安排。\n\n\n\n","slug":"git-opreation-question","published":1,"updated":"2018-05-30T08:12:15.884Z","photos":[],"link":"","_id":"cjhubytl8002xyis526qxxmw5","content":"<h3 id=\"一、基本命令\"><a href=\"#一、基本命令\" class=\"headerlink\" title=\"一、基本命令\"></a>一、基本命令</h3><p>查看版本号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git version</span><br></pre></td></tr></table></figure>\n<p>查看帮助</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git help // git or git --help 都可以查看git用法</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、新建本地仓库或clone远程仓库\"><a href=\"#二、新建本地仓库或clone远程仓库\" class=\"headerlink\" title=\"二、新建本地仓库或clone远程仓库\"></a>二、新建本地仓库或clone远程仓库</h3><p>初始化操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir &lt;new project&gt; // 创建空项目文件夹</span><br><span class=\"line\">$ cd new-project</span><br><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n<p>从远程主机克隆一个版本库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone &lt;版本库的网址&gt; // clone下来的，默认是master分支</span><br></pre></td></tr></table></figure>\n<p>设置提交者和邮箱</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config user.name &quot;提交者&quot;</span><br><span class=\"line\">$ git config user.email &quot;test@admin.com&quot;</span><br></pre></td></tr></table></figure>\n<p>注：如果需要全局设置git相关用户配置信息可以使用git config –global user.xxx</p>\n<h3 id=\"三、更新至仓库\"><a href=\"#三、更新至仓库\" class=\"headerlink\" title=\"三、更新至仓库\"></a>三、更新至仓库</h3><p>拉取最新代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull &lt;版本库的分支&gt; // git pull origin master</span><br></pre></td></tr></table></figure>\n<p>添加修改的内容到本地缓存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add . // 也可以指定文件或目录</span><br></pre></td></tr></table></figure>\n<p>提交修改的内容到本地仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &apos;提交内容日志&apos;</span><br></pre></td></tr></table></figure>\n<p>更新修改的内容至远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push &lt;版本库的分支&gt; // git push origin master</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、管理仓库分支\"><a href=\"#四、管理仓库分支\" class=\"headerlink\" title=\"四、管理仓库分支\"></a>四、管理仓库分支</h3><p>新建本地分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch &lt;new branch&gt;</span><br></pre></td></tr></table></figure>\n<p>在指定分支下新建本地分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b &lt;new branch&gt; &lt;specified branch&gt;</span><br></pre></td></tr></table></figure>\n<p>删除本地分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<p>删除本地分支的引用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch -p</span><br></pre></td></tr></table></figure>\n<p>注：一个远程分支被删除了，可是本地还存在其对应的分支引用，可以通过git fetch -p 删除</p>\n<p>删除远程分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -r -d &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<p>删除远程分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :branch-name</span><br></pre></td></tr></table></figure>\n<p>注意：冒号前面的空格不能少，原理是把一个空分支push到server上，相当于删除该分支。</p>\n<p>合并分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge &lt;branch&gt; // 当前分支合并指定分支</span><br></pre></td></tr></table></figure>\n<p>撤消添加操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 撤消添加的指定文件</span><br><span class=\"line\">$ git reset filename</span><br><span class=\"line\">// 撤消所有添加的操作</span><br><span class=\"line\">$ git reset HEAD .</span><br></pre></td></tr></table></figure>\n<p>取消本地commit的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log // 查看日志，并获取需回滚的节点ID:commit_id</span><br><span class=\"line\">$ git reset --hard commit_id</span><br></pre></td></tr></table></figure>\n<p>注：commit_id为需要回滚到的日志ID</p>\n<p>当前分支获取另一个分支提交的记录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 获取分支branch1的提交记录Id</span><br><span class=\"line\">$ git checkout branch1</span><br><span class=\"line\">// commit 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f</span><br><span class=\"line\">$ git log</span><br><span class=\"line\"></span><br><span class=\"line\">// 在分支branch2中重新提交分支branch1中获取的commitId</span><br><span class=\"line\">$ git checkout branch2</span><br><span class=\"line\">$ git cherry-pick 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f</span><br></pre></td></tr></table></figure>\n<p>注意：如果提示获取失败（冲突），请按正常处理流程安排。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、基本命令\"><a href=\"#一、基本命令\" class=\"headerlink\" title=\"一、基本命令\"></a>一、基本命令</h3><p>查看版本号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git version</span><br></pre></td></tr></table></figure>\n<p>查看帮助</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git help // git or git --help 都可以查看git用法</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、新建本地仓库或clone远程仓库\"><a href=\"#二、新建本地仓库或clone远程仓库\" class=\"headerlink\" title=\"二、新建本地仓库或clone远程仓库\"></a>二、新建本地仓库或clone远程仓库</h3><p>初始化操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir &lt;new project&gt; // 创建空项目文件夹</span><br><span class=\"line\">$ cd new-project</span><br><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n<p>从远程主机克隆一个版本库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone &lt;版本库的网址&gt; // clone下来的，默认是master分支</span><br></pre></td></tr></table></figure>\n<p>设置提交者和邮箱</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config user.name &quot;提交者&quot;</span><br><span class=\"line\">$ git config user.email &quot;test@admin.com&quot;</span><br></pre></td></tr></table></figure>\n<p>注：如果需要全局设置git相关用户配置信息可以使用git config –global user.xxx</p>\n<h3 id=\"三、更新至仓库\"><a href=\"#三、更新至仓库\" class=\"headerlink\" title=\"三、更新至仓库\"></a>三、更新至仓库</h3><p>拉取最新代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git pull &lt;版本库的分支&gt; // git pull origin master</span><br></pre></td></tr></table></figure>\n<p>添加修改的内容到本地缓存</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add . // 也可以指定文件或目录</span><br></pre></td></tr></table></figure>\n<p>提交修改的内容到本地仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m &apos;提交内容日志&apos;</span><br></pre></td></tr></table></figure>\n<p>更新修改的内容至远程仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push &lt;版本库的分支&gt; // git push origin master</span><br></pre></td></tr></table></figure>\n<h3 id=\"四、管理仓库分支\"><a href=\"#四、管理仓库分支\" class=\"headerlink\" title=\"四、管理仓库分支\"></a>四、管理仓库分支</h3><p>新建本地分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch &lt;new branch&gt;</span><br></pre></td></tr></table></figure>\n<p>在指定分支下新建本地分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b &lt;new branch&gt; &lt;specified branch&gt;</span><br></pre></td></tr></table></figure>\n<p>删除本地分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -d &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<p>删除本地分支的引用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch -p</span><br></pre></td></tr></table></figure>\n<p>注：一个远程分支被删除了，可是本地还存在其对应的分支引用，可以通过git fetch -p 删除</p>\n<p>删除远程分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git branch -r -d &lt;branch&gt;</span><br></pre></td></tr></table></figure>\n<p>删除远程分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin :branch-name</span><br></pre></td></tr></table></figure>\n<p>注意：冒号前面的空格不能少，原理是把一个空分支push到server上，相当于删除该分支。</p>\n<p>合并分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git merge &lt;branch&gt; // 当前分支合并指定分支</span><br></pre></td></tr></table></figure>\n<p>撤消添加操作</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 撤消添加的指定文件</span><br><span class=\"line\">$ git reset filename</span><br><span class=\"line\">// 撤消所有添加的操作</span><br><span class=\"line\">$ git reset HEAD .</span><br></pre></td></tr></table></figure>\n<p>取消本地commit的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git log // 查看日志，并获取需回滚的节点ID:commit_id</span><br><span class=\"line\">$ git reset --hard commit_id</span><br></pre></td></tr></table></figure>\n<p>注：commit_id为需要回滚到的日志ID</p>\n<p>当前分支获取另一个分支提交的记录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 获取分支branch1的提交记录Id</span><br><span class=\"line\">$ git checkout branch1</span><br><span class=\"line\">// commit 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f</span><br><span class=\"line\">$ git log</span><br><span class=\"line\"></span><br><span class=\"line\">// 在分支branch2中重新提交分支branch1中获取的commitId</span><br><span class=\"line\">$ git checkout branch2</span><br><span class=\"line\">$ git cherry-pick 809d95ea1c3d17ed6ba8e25ae2abe15b0f3e737f</span><br></pre></td></tr></table></figure>\n<p>注意：如果提示获取失败（冲突），请按正常处理流程安排。</p>\n"},{"layout":"post","title":".gitignore设置无效，不能过滤指定文件","date":"2016-10-11T15:50:00.000Z","comments":0,"_content":"\n通常我们都会利用.gitignore过滤一些特定的文件，例如：系统产生的文件、编译过程中产生的中间文件以及特定的脚本文件（```.idea```、```.DS_store```、```node_modules```、```xx.sh```）等等，这些文件不需要被追踪管理。\n\n### 遇到的问题：\n\n在```.gitignore```中添加```xx.sh```文件，以过滤该文件，但是通过```git status```查看仍显示```xx.sh```文件的状态。\n\n### 产生的原因：\n\n在```git```库中已存在了这个文件，之前push提交过该文件。\n\n注：```.gitignore```文件只对还没有加入版本管理的文件起作用，如果之前已经用```git```把这些文件纳入了版本库，就不起作用了\n\n### 解决的办法：\n\n在```git```库中删除该文件，并更新。再次用```git status```命令查看状态，```xx.sh```文件不再显示状态。\n\n注：若该删除的文件为特殊文件，请注意备份。\n\n\n\n","source":"_posts/2016-10-11-how-to-use-gitignore.md","raw":"---\nlayout: post\ntitle: .gitignore设置无效，不能过滤指定文件\ndate: 2016-10-11 23:50\ncomments: false\ncategories: [版本管理]\n---\n\n通常我们都会利用.gitignore过滤一些特定的文件，例如：系统产生的文件、编译过程中产生的中间文件以及特定的脚本文件（```.idea```、```.DS_store```、```node_modules```、```xx.sh```）等等，这些文件不需要被追踪管理。\n\n### 遇到的问题：\n\n在```.gitignore```中添加```xx.sh```文件，以过滤该文件，但是通过```git status```查看仍显示```xx.sh```文件的状态。\n\n### 产生的原因：\n\n在```git```库中已存在了这个文件，之前push提交过该文件。\n\n注：```.gitignore```文件只对还没有加入版本管理的文件起作用，如果之前已经用```git```把这些文件纳入了版本库，就不起作用了\n\n### 解决的办法：\n\n在```git```库中删除该文件，并更新。再次用```git status```命令查看状态，```xx.sh```文件不再显示状态。\n\n注：若该删除的文件为特殊文件，请注意备份。\n\n\n\n","slug":"how-to-use-gitignore","published":1,"updated":"2018-05-30T08:12:15.885Z","photos":[],"link":"","_id":"cjhubytl90030yis5s208foat","content":"<p>通常我们都会利用.gitignore过滤一些特定的文件，例如：系统产生的文件、编译过程中产生的中间文件以及特定的脚本文件（<code>.idea</code>、<code>.DS_store</code>、<code>node_modules</code>、<code>xx.sh</code>）等等，这些文件不需要被追踪管理。</p>\n<h3 id=\"遇到的问题：\"><a href=\"#遇到的问题：\" class=\"headerlink\" title=\"遇到的问题：\"></a>遇到的问题：</h3><p>在<code>.gitignore</code>中添加<code>xx.sh</code>文件，以过滤该文件，但是通过<code>git status</code>查看仍显示<code>xx.sh</code>文件的状态。</p>\n<h3 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h3><p>在<code>git</code>库中已存在了这个文件，之前push提交过该文件。</p>\n<p>注：<code>.gitignore</code>文件只对还没有加入版本管理的文件起作用，如果之前已经用<code>git</code>把这些文件纳入了版本库，就不起作用了</p>\n<h3 id=\"解决的办法：\"><a href=\"#解决的办法：\" class=\"headerlink\" title=\"解决的办法：\"></a>解决的办法：</h3><p>在<code>git</code>库中删除该文件，并更新。再次用<code>git status</code>命令查看状态，<code>xx.sh</code>文件不再显示状态。</p>\n<p>注：若该删除的文件为特殊文件，请注意备份。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>通常我们都会利用.gitignore过滤一些特定的文件，例如：系统产生的文件、编译过程中产生的中间文件以及特定的脚本文件（<code>.idea</code>、<code>.DS_store</code>、<code>node_modules</code>、<code>xx.sh</code>）等等，这些文件不需要被追踪管理。</p>\n<h3 id=\"遇到的问题：\"><a href=\"#遇到的问题：\" class=\"headerlink\" title=\"遇到的问题：\"></a>遇到的问题：</h3><p>在<code>.gitignore</code>中添加<code>xx.sh</code>文件，以过滤该文件，但是通过<code>git status</code>查看仍显示<code>xx.sh</code>文件的状态。</p>\n<h3 id=\"产生的原因：\"><a href=\"#产生的原因：\" class=\"headerlink\" title=\"产生的原因：\"></a>产生的原因：</h3><p>在<code>git</code>库中已存在了这个文件，之前push提交过该文件。</p>\n<p>注：<code>.gitignore</code>文件只对还没有加入版本管理的文件起作用，如果之前已经用<code>git</code>把这些文件纳入了版本库，就不起作用了</p>\n<h3 id=\"解决的办法：\"><a href=\"#解决的办法：\" class=\"headerlink\" title=\"解决的办法：\"></a>解决的办法：</h3><p>在<code>git</code>库中删除该文件，并更新。再次用<code>git status</code>命令查看状态，<code>xx.sh</code>文件不再显示状态。</p>\n<p>注：若该删除的文件为特殊文件，请注意备份。</p>\n"},{"layout":"post","title":"又一年，又一个岁月，生日快乐","date":"2016-10-14T16:00:00.000Z","comments":1,"_content":"\nToday is my birthday ! Thank you for your blessing ! \n\n—— hankewins\n\n今年特别有意思（幸福）农历和阳历整整相差一个月，刚刚休完国庆假期就陆陆续续迎来了爸爸、我和姐姐的生日。在此一一送上我最美好的祝福。\n\n祝：『老爸平平安安，健康长寿！』\n\n祝：『老姐越活越年青，永远十八岁，全家幸福，事事顺心，平平安安！』\n\n祝：『自己开开心心，越来越有担当，收获人生幸福』\n\n### 致枕边的女神\n\n又一年，又一个岁月！越是成长越是觉得时间的短暂！转眼间已到男当娶女当嫁的年龄，在此非常感谢『执子闲人』这些年来一直的陪伴，因你让我的人生变的更精彩。亲爱的『I Love You !』\n\n### 致尊敬的老爸\n\n又一年，又一个岁月！国庆在家待的那几天看到您那黝黑的皮肤、粗糙的老手、干瘦的身躯以及满嘴的假牙，我内心是无比的心痛。不知何时起父亲又多了一丝白发，不知何时父亲的背不在那样挺拔，我不怪岁月带走了您的青春年华，但只求您一生平平安安，健康长寿！\n\n### 致亲爱的老姐\n\n又一年，又一个岁月！国庆在武汉的短暂相聚是那么的仓促，偷偷的多看了你几眼（^__^），『老姐你也变了』———— 变的没那么有精神了，记得你说你们上班时间长也不区分周末，真的很真辛苦。有时间的时候多出去运动走走，适当的注意养生，希望又一年，又一个岁月能看到不一样的你。\n\n### 致犹豫的自己\n\n又一年，又一个岁月！越是成长越是不那么自信！是时候了，勇敢面对，你一定行的。\n\n最后\n\n生日快乐！\n\n\n\n","source":"_posts/2016-10-15-happy-birthday-to-27.md","raw":"---\nlayout: post\ntitle: 又一年，又一个岁月，生日快乐\ndate: 2016-10-15 00:00\ncomments: true\ncategories: [水]\n---\n\nToday is my birthday ! Thank you for your blessing ! \n\n—— hankewins\n\n今年特别有意思（幸福）农历和阳历整整相差一个月，刚刚休完国庆假期就陆陆续续迎来了爸爸、我和姐姐的生日。在此一一送上我最美好的祝福。\n\n祝：『老爸平平安安，健康长寿！』\n\n祝：『老姐越活越年青，永远十八岁，全家幸福，事事顺心，平平安安！』\n\n祝：『自己开开心心，越来越有担当，收获人生幸福』\n\n### 致枕边的女神\n\n又一年，又一个岁月！越是成长越是觉得时间的短暂！转眼间已到男当娶女当嫁的年龄，在此非常感谢『执子闲人』这些年来一直的陪伴，因你让我的人生变的更精彩。亲爱的『I Love You !』\n\n### 致尊敬的老爸\n\n又一年，又一个岁月！国庆在家待的那几天看到您那黝黑的皮肤、粗糙的老手、干瘦的身躯以及满嘴的假牙，我内心是无比的心痛。不知何时起父亲又多了一丝白发，不知何时父亲的背不在那样挺拔，我不怪岁月带走了您的青春年华，但只求您一生平平安安，健康长寿！\n\n### 致亲爱的老姐\n\n又一年，又一个岁月！国庆在武汉的短暂相聚是那么的仓促，偷偷的多看了你几眼（^__^），『老姐你也变了』———— 变的没那么有精神了，记得你说你们上班时间长也不区分周末，真的很真辛苦。有时间的时候多出去运动走走，适当的注意养生，希望又一年，又一个岁月能看到不一样的你。\n\n### 致犹豫的自己\n\n又一年，又一个岁月！越是成长越是不那么自信！是时候了，勇敢面对，你一定行的。\n\n最后\n\n生日快乐！\n\n\n\n","slug":"happy-birthday-to-27","published":1,"updated":"2018-05-30T08:12:15.887Z","photos":[],"link":"","_id":"cjhubytlb0032yis5mzy66f9q","content":"<p>Today is my birthday ! Thank you for your blessing ! </p>\n<p>—— hankewins</p>\n<p>今年特别有意思（幸福）农历和阳历整整相差一个月，刚刚休完国庆假期就陆陆续续迎来了爸爸、我和姐姐的生日。在此一一送上我最美好的祝福。</p>\n<p>祝：『老爸平平安安，健康长寿！』</p>\n<p>祝：『老姐越活越年青，永远十八岁，全家幸福，事事顺心，平平安安！』</p>\n<p>祝：『自己开开心心，越来越有担当，收获人生幸福』</p>\n<h3 id=\"致枕边的女神\"><a href=\"#致枕边的女神\" class=\"headerlink\" title=\"致枕边的女神\"></a>致枕边的女神</h3><p>又一年，又一个岁月！越是成长越是觉得时间的短暂！转眼间已到男当娶女当嫁的年龄，在此非常感谢『执子闲人』这些年来一直的陪伴，因你让我的人生变的更精彩。亲爱的『I Love You !』</p>\n<h3 id=\"致尊敬的老爸\"><a href=\"#致尊敬的老爸\" class=\"headerlink\" title=\"致尊敬的老爸\"></a>致尊敬的老爸</h3><p>又一年，又一个岁月！国庆在家待的那几天看到您那黝黑的皮肤、粗糙的老手、干瘦的身躯以及满嘴的假牙，我内心是无比的心痛。不知何时起父亲又多了一丝白发，不知何时父亲的背不在那样挺拔，我不怪岁月带走了您的青春年华，但只求您一生平平安安，健康长寿！</p>\n<h3 id=\"致亲爱的老姐\"><a href=\"#致亲爱的老姐\" class=\"headerlink\" title=\"致亲爱的老姐\"></a>致亲爱的老姐</h3><p>又一年，又一个岁月！国庆在武汉的短暂相聚是那么的仓促，偷偷的多看了你几眼（^__^），『老姐你也变了』———— 变的没那么有精神了，记得你说你们上班时间长也不区分周末，真的很真辛苦。有时间的时候多出去运动走走，适当的注意养生，希望又一年，又一个岁月能看到不一样的你。</p>\n<h3 id=\"致犹豫的自己\"><a href=\"#致犹豫的自己\" class=\"headerlink\" title=\"致犹豫的自己\"></a>致犹豫的自己</h3><p>又一年，又一个岁月！越是成长越是不那么自信！是时候了，勇敢面对，你一定行的。</p>\n<p>最后</p>\n<p>生日快乐！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Today is my birthday ! Thank you for your blessing ! </p>\n<p>—— hankewins</p>\n<p>今年特别有意思（幸福）农历和阳历整整相差一个月，刚刚休完国庆假期就陆陆续续迎来了爸爸、我和姐姐的生日。在此一一送上我最美好的祝福。</p>\n<p>祝：『老爸平平安安，健康长寿！』</p>\n<p>祝：『老姐越活越年青，永远十八岁，全家幸福，事事顺心，平平安安！』</p>\n<p>祝：『自己开开心心，越来越有担当，收获人生幸福』</p>\n<h3 id=\"致枕边的女神\"><a href=\"#致枕边的女神\" class=\"headerlink\" title=\"致枕边的女神\"></a>致枕边的女神</h3><p>又一年，又一个岁月！越是成长越是觉得时间的短暂！转眼间已到男当娶女当嫁的年龄，在此非常感谢『执子闲人』这些年来一直的陪伴，因你让我的人生变的更精彩。亲爱的『I Love You !』</p>\n<h3 id=\"致尊敬的老爸\"><a href=\"#致尊敬的老爸\" class=\"headerlink\" title=\"致尊敬的老爸\"></a>致尊敬的老爸</h3><p>又一年，又一个岁月！国庆在家待的那几天看到您那黝黑的皮肤、粗糙的老手、干瘦的身躯以及满嘴的假牙，我内心是无比的心痛。不知何时起父亲又多了一丝白发，不知何时父亲的背不在那样挺拔，我不怪岁月带走了您的青春年华，但只求您一生平平安安，健康长寿！</p>\n<h3 id=\"致亲爱的老姐\"><a href=\"#致亲爱的老姐\" class=\"headerlink\" title=\"致亲爱的老姐\"></a>致亲爱的老姐</h3><p>又一年，又一个岁月！国庆在武汉的短暂相聚是那么的仓促，偷偷的多看了你几眼（^__^），『老姐你也变了』———— 变的没那么有精神了，记得你说你们上班时间长也不区分周末，真的很真辛苦。有时间的时候多出去运动走走，适当的注意养生，希望又一年，又一个岁月能看到不一样的你。</p>\n<h3 id=\"致犹豫的自己\"><a href=\"#致犹豫的自己\" class=\"headerlink\" title=\"致犹豫的自己\"></a>致犹豫的自己</h3><p>又一年，又一个岁月！越是成长越是不那么自信！是时候了，勇敢面对，你一定行的。</p>\n<p>最后</p>\n<p>生日快乐！</p>\n"},{"layout":"post","title":"记录一次出差全过程和出差过程中的一些感觉","date":"2016-10-23T08:59:00.000Z","comments":1,"_content":"\n这次出差来的比较突然，当天上午接到出差任务，中午收拾一下行李后就准备赶赴机场，下面主要记录和分享出差过程中的些节点和产生的感觉。\n\n### 去往机场\n\n由于本次出差待的时间还比较久（两个星期左右）所以需要带的东西比较多，收拾完毕后准备出发。机场距离市区一般都比较远，一般都首选出租车（带发票）、地铁等出行方式。\n\n注：**机场候机预留时间最好在一两个小时之间。**\n\n### 到达机场\n\n到达机场后主要办理以下业务：\n\n- 找到对应航空公司办理业务区域\n- 打印登机牌(机票）\n- 打印个人明细（报销）\n- 办理托运（可选）\n- 安检值机\n\n注：火机、易燃易爆物、大于1000ml的冲电宝以及大于100ml的液体和胶状物都不能携带上飞机。但部分物品可以通过托运携带，具体要求以机场规定为准。\n\n### 候机等待\n\n通过安检后就可以安静的**等待登机**，期间可以听听音乐、看看新闻、电脑办公、机场转转也可以购物或享受美食等。\n\n注：**大部分机场都有wifi覆盖。**\n\n### 飞行途中\n\n飞机起飞和下落过程中禁止打开手机、电脑以及其他电子设备，飞机正常飞行过程中正常可以使用手机、照相机、电脑等。\n\n注：**以上仅做参考，具体要求以航空公司规定为准。**\n\n### 安全抵达\n\n飞机安全抵达后大概需要30分钟到1小时左右才可以运送旅客到达机场大厅，请合理的安排接机以及工作行程。\n\n注：**飞机抵达后需要一定的时间滑行和运送旅客到达机场大厅以及运送托运行李的时间，请合理安排行程。**\n\n### 园区生活\n\n已经在园区生活了几天，整体上感觉园区环境优美、道路干净整洁、生活配套设施齐全、出入安全管理等等，简单的总结为：园林式的办公区域、花园式的生活区域、公园式的活动区域等，给我最深的印象是园区的餐厅————美食繁多，品类齐全，味道可口。因此个人认为园区的活比较还是比较滋润和安逸，生活节奏较慢，下面看看工作日的全天安排：\n\n- 07:30起床\n- 08:00早餐\n- 08:30打卡（餐厅到办公区域大概5-10分钟的路程）\n- 11:00午餐（不同部门午餐时间有差异）\n- 13:30上班（午餐后可以选择回员工公寓休息一会儿）\n- 17:00下班（项目忙时也会经常加班）\n- 参与各种活动（蓝球、足球、羽毛球等等）\n\n以上是工作日的时间安排表，看着是不是有一种大学生活的节奏（很是羡慕啊有木有），可是出差的这些天还没有享受过这么规律的作息时间安排，由于项目开发任务的需要基本上也是996的生活节奏，但是在环境和生活的影响下，感觉节奏还是挺好的，压力没有那么大（可能是出差的原因吧）。\n\n在非工作时间期间看了几部经典电影《白银帝国》、《黑海夺金》、《中国合伙人》、《泰山归来：险战丛林》等，各种场景的精彩表现，让我们对人性仁义、管理用人、信任与信念、友情与爱情、做人与做事等方面深入思考。\n\n### 写在最后\n\n本文主要还是记录出差的全过程以及在园区的个人感受，同时也通过这段经历和思考让自己在工作和生活上能够做出更做合理的分配以及起到一个的个人推动作用。\n\n\n","source":"_posts/2016-10-23-about-something-of-in-the-yonyou-industrial-park.md","raw":"---\nlayout: post\ntitle: 记录一次出差全过程和出差过程中的一些感觉\ndate: 2016-10-23 16:59\ncomments: true\ncategories: [工作与生活]\n---\n\n这次出差来的比较突然，当天上午接到出差任务，中午收拾一下行李后就准备赶赴机场，下面主要记录和分享出差过程中的些节点和产生的感觉。\n\n### 去往机场\n\n由于本次出差待的时间还比较久（两个星期左右）所以需要带的东西比较多，收拾完毕后准备出发。机场距离市区一般都比较远，一般都首选出租车（带发票）、地铁等出行方式。\n\n注：**机场候机预留时间最好在一两个小时之间。**\n\n### 到达机场\n\n到达机场后主要办理以下业务：\n\n- 找到对应航空公司办理业务区域\n- 打印登机牌(机票）\n- 打印个人明细（报销）\n- 办理托运（可选）\n- 安检值机\n\n注：火机、易燃易爆物、大于1000ml的冲电宝以及大于100ml的液体和胶状物都不能携带上飞机。但部分物品可以通过托运携带，具体要求以机场规定为准。\n\n### 候机等待\n\n通过安检后就可以安静的**等待登机**，期间可以听听音乐、看看新闻、电脑办公、机场转转也可以购物或享受美食等。\n\n注：**大部分机场都有wifi覆盖。**\n\n### 飞行途中\n\n飞机起飞和下落过程中禁止打开手机、电脑以及其他电子设备，飞机正常飞行过程中正常可以使用手机、照相机、电脑等。\n\n注：**以上仅做参考，具体要求以航空公司规定为准。**\n\n### 安全抵达\n\n飞机安全抵达后大概需要30分钟到1小时左右才可以运送旅客到达机场大厅，请合理的安排接机以及工作行程。\n\n注：**飞机抵达后需要一定的时间滑行和运送旅客到达机场大厅以及运送托运行李的时间，请合理安排行程。**\n\n### 园区生活\n\n已经在园区生活了几天，整体上感觉园区环境优美、道路干净整洁、生活配套设施齐全、出入安全管理等等，简单的总结为：园林式的办公区域、花园式的生活区域、公园式的活动区域等，给我最深的印象是园区的餐厅————美食繁多，品类齐全，味道可口。因此个人认为园区的活比较还是比较滋润和安逸，生活节奏较慢，下面看看工作日的全天安排：\n\n- 07:30起床\n- 08:00早餐\n- 08:30打卡（餐厅到办公区域大概5-10分钟的路程）\n- 11:00午餐（不同部门午餐时间有差异）\n- 13:30上班（午餐后可以选择回员工公寓休息一会儿）\n- 17:00下班（项目忙时也会经常加班）\n- 参与各种活动（蓝球、足球、羽毛球等等）\n\n以上是工作日的时间安排表，看着是不是有一种大学生活的节奏（很是羡慕啊有木有），可是出差的这些天还没有享受过这么规律的作息时间安排，由于项目开发任务的需要基本上也是996的生活节奏，但是在环境和生活的影响下，感觉节奏还是挺好的，压力没有那么大（可能是出差的原因吧）。\n\n在非工作时间期间看了几部经典电影《白银帝国》、《黑海夺金》、《中国合伙人》、《泰山归来：险战丛林》等，各种场景的精彩表现，让我们对人性仁义、管理用人、信任与信念、友情与爱情、做人与做事等方面深入思考。\n\n### 写在最后\n\n本文主要还是记录出差的全过程以及在园区的个人感受，同时也通过这段经历和思考让自己在工作和生活上能够做出更做合理的分配以及起到一个的个人推动作用。\n\n\n","slug":"about-something-of-in-the-yonyou-industrial-park","published":1,"updated":"2018-05-30T08:12:15.888Z","photos":[],"link":"","_id":"cjhubytlc0035yis5rhqe5j2v","content":"<p>这次出差来的比较突然，当天上午接到出差任务，中午收拾一下行李后就准备赶赴机场，下面主要记录和分享出差过程中的些节点和产生的感觉。</p>\n<h3 id=\"去往机场\"><a href=\"#去往机场\" class=\"headerlink\" title=\"去往机场\"></a>去往机场</h3><p>由于本次出差待的时间还比较久（两个星期左右）所以需要带的东西比较多，收拾完毕后准备出发。机场距离市区一般都比较远，一般都首选出租车（带发票）、地铁等出行方式。</p>\n<p>注：<strong>机场候机预留时间最好在一两个小时之间。</strong></p>\n<h3 id=\"到达机场\"><a href=\"#到达机场\" class=\"headerlink\" title=\"到达机场\"></a>到达机场</h3><p>到达机场后主要办理以下业务：</p>\n<ul>\n<li>找到对应航空公司办理业务区域</li>\n<li>打印登机牌(机票）</li>\n<li>打印个人明细（报销）</li>\n<li>办理托运（可选）</li>\n<li>安检值机</li>\n</ul>\n<p>注：火机、易燃易爆物、大于1000ml的冲电宝以及大于100ml的液体和胶状物都不能携带上飞机。但部分物品可以通过托运携带，具体要求以机场规定为准。</p>\n<h3 id=\"候机等待\"><a href=\"#候机等待\" class=\"headerlink\" title=\"候机等待\"></a>候机等待</h3><p>通过安检后就可以安静的<strong>等待登机</strong>，期间可以听听音乐、看看新闻、电脑办公、机场转转也可以购物或享受美食等。</p>\n<p>注：<strong>大部分机场都有wifi覆盖。</strong></p>\n<h3 id=\"飞行途中\"><a href=\"#飞行途中\" class=\"headerlink\" title=\"飞行途中\"></a>飞行途中</h3><p>飞机起飞和下落过程中禁止打开手机、电脑以及其他电子设备，飞机正常飞行过程中正常可以使用手机、照相机、电脑等。</p>\n<p>注：<strong>以上仅做参考，具体要求以航空公司规定为准。</strong></p>\n<h3 id=\"安全抵达\"><a href=\"#安全抵达\" class=\"headerlink\" title=\"安全抵达\"></a>安全抵达</h3><p>飞机安全抵达后大概需要30分钟到1小时左右才可以运送旅客到达机场大厅，请合理的安排接机以及工作行程。</p>\n<p>注：<strong>飞机抵达后需要一定的时间滑行和运送旅客到达机场大厅以及运送托运行李的时间，请合理安排行程。</strong></p>\n<h3 id=\"园区生活\"><a href=\"#园区生活\" class=\"headerlink\" title=\"园区生活\"></a>园区生活</h3><p>已经在园区生活了几天，整体上感觉园区环境优美、道路干净整洁、生活配套设施齐全、出入安全管理等等，简单的总结为：园林式的办公区域、花园式的生活区域、公园式的活动区域等，给我最深的印象是园区的餐厅————美食繁多，品类齐全，味道可口。因此个人认为园区的活比较还是比较滋润和安逸，生活节奏较慢，下面看看工作日的全天安排：</p>\n<ul>\n<li>07:30起床</li>\n<li>08:00早餐</li>\n<li>08:30打卡（餐厅到办公区域大概5-10分钟的路程）</li>\n<li>11:00午餐（不同部门午餐时间有差异）</li>\n<li>13:30上班（午餐后可以选择回员工公寓休息一会儿）</li>\n<li>17:00下班（项目忙时也会经常加班）</li>\n<li>参与各种活动（蓝球、足球、羽毛球等等）</li>\n</ul>\n<p>以上是工作日的时间安排表，看着是不是有一种大学生活的节奏（很是羡慕啊有木有），可是出差的这些天还没有享受过这么规律的作息时间安排，由于项目开发任务的需要基本上也是996的生活节奏，但是在环境和生活的影响下，感觉节奏还是挺好的，压力没有那么大（可能是出差的原因吧）。</p>\n<p>在非工作时间期间看了几部经典电影《白银帝国》、《黑海夺金》、《中国合伙人》、《泰山归来：险战丛林》等，各种场景的精彩表现，让我们对人性仁义、管理用人、信任与信念、友情与爱情、做人与做事等方面深入思考。</p>\n<h3 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h3><p>本文主要还是记录出差的全过程以及在园区的个人感受，同时也通过这段经历和思考让自己在工作和生活上能够做出更做合理的分配以及起到一个的个人推动作用。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这次出差来的比较突然，当天上午接到出差任务，中午收拾一下行李后就准备赶赴机场，下面主要记录和分享出差过程中的些节点和产生的感觉。</p>\n<h3 id=\"去往机场\"><a href=\"#去往机场\" class=\"headerlink\" title=\"去往机场\"></a>去往机场</h3><p>由于本次出差待的时间还比较久（两个星期左右）所以需要带的东西比较多，收拾完毕后准备出发。机场距离市区一般都比较远，一般都首选出租车（带发票）、地铁等出行方式。</p>\n<p>注：<strong>机场候机预留时间最好在一两个小时之间。</strong></p>\n<h3 id=\"到达机场\"><a href=\"#到达机场\" class=\"headerlink\" title=\"到达机场\"></a>到达机场</h3><p>到达机场后主要办理以下业务：</p>\n<ul>\n<li>找到对应航空公司办理业务区域</li>\n<li>打印登机牌(机票）</li>\n<li>打印个人明细（报销）</li>\n<li>办理托运（可选）</li>\n<li>安检值机</li>\n</ul>\n<p>注：火机、易燃易爆物、大于1000ml的冲电宝以及大于100ml的液体和胶状物都不能携带上飞机。但部分物品可以通过托运携带，具体要求以机场规定为准。</p>\n<h3 id=\"候机等待\"><a href=\"#候机等待\" class=\"headerlink\" title=\"候机等待\"></a>候机等待</h3><p>通过安检后就可以安静的<strong>等待登机</strong>，期间可以听听音乐、看看新闻、电脑办公、机场转转也可以购物或享受美食等。</p>\n<p>注：<strong>大部分机场都有wifi覆盖。</strong></p>\n<h3 id=\"飞行途中\"><a href=\"#飞行途中\" class=\"headerlink\" title=\"飞行途中\"></a>飞行途中</h3><p>飞机起飞和下落过程中禁止打开手机、电脑以及其他电子设备，飞机正常飞行过程中正常可以使用手机、照相机、电脑等。</p>\n<p>注：<strong>以上仅做参考，具体要求以航空公司规定为准。</strong></p>\n<h3 id=\"安全抵达\"><a href=\"#安全抵达\" class=\"headerlink\" title=\"安全抵达\"></a>安全抵达</h3><p>飞机安全抵达后大概需要30分钟到1小时左右才可以运送旅客到达机场大厅，请合理的安排接机以及工作行程。</p>\n<p>注：<strong>飞机抵达后需要一定的时间滑行和运送旅客到达机场大厅以及运送托运行李的时间，请合理安排行程。</strong></p>\n<h3 id=\"园区生活\"><a href=\"#园区生活\" class=\"headerlink\" title=\"园区生活\"></a>园区生活</h3><p>已经在园区生活了几天，整体上感觉园区环境优美、道路干净整洁、生活配套设施齐全、出入安全管理等等，简单的总结为：园林式的办公区域、花园式的生活区域、公园式的活动区域等，给我最深的印象是园区的餐厅————美食繁多，品类齐全，味道可口。因此个人认为园区的活比较还是比较滋润和安逸，生活节奏较慢，下面看看工作日的全天安排：</p>\n<ul>\n<li>07:30起床</li>\n<li>08:00早餐</li>\n<li>08:30打卡（餐厅到办公区域大概5-10分钟的路程）</li>\n<li>11:00午餐（不同部门午餐时间有差异）</li>\n<li>13:30上班（午餐后可以选择回员工公寓休息一会儿）</li>\n<li>17:00下班（项目忙时也会经常加班）</li>\n<li>参与各种活动（蓝球、足球、羽毛球等等）</li>\n</ul>\n<p>以上是工作日的时间安排表，看着是不是有一种大学生活的节奏（很是羡慕啊有木有），可是出差的这些天还没有享受过这么规律的作息时间安排，由于项目开发任务的需要基本上也是996的生活节奏，但是在环境和生活的影响下，感觉节奏还是挺好的，压力没有那么大（可能是出差的原因吧）。</p>\n<p>在非工作时间期间看了几部经典电影《白银帝国》、《黑海夺金》、《中国合伙人》、《泰山归来：险战丛林》等，各种场景的精彩表现，让我们对人性仁义、管理用人、信任与信念、友情与爱情、做人与做事等方面深入思考。</p>\n<h3 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h3><p>本文主要还是记录出差的全过程以及在园区的个人感受，同时也通过这段经历和思考让自己在工作和生活上能够做出更做合理的分配以及起到一个的个人推动作用。</p>\n"},{"layout":"post","title":"antd本地部署iconfont正确步骤","date":"2017-03-24T14:48:00.000Z","comments":1,"_content":"\n[Ant Design of React](https://ant.design/index-cn)由蚂蚁金服体验技术部出品，是基于React+Redux实现，开发和服务于企业级后台产品。\n\nAnt Design 默认的 iconfont 文件托管在 [iconfont.cn](http://iconfont.cn/) 并默认使用平台提供的 alicdn 地址，公网可访问使用。\n\n由于 alicdn 对部分域名有[访问限制](https://github.com/ant-design/ant-design/issues/1070)，或者需要内网环境使用，因此我们可能需要将iconfont文件部署到本地环境。\n\n操作步骤如下：\n\n一、下载iconfont文件\n\n1、官网[在线下载](https://ant.design/docs/resource/download)\n\n2、字体图标库[iconfont](http://iconfont.cn)中下载\n\n二、部署iconfont服务\n\n通过搭建本地服务器提供iconfont访问地址，例如：http://localhost/iconfont\n\n三、配置@icon-url地址\n\n1、通过package.json中自定义主题参数theme中配置@icon-font为'\"iconfont字体本地访问地址\"'\n\n2、通过引用theme.js的方式自定义主题，配置方式同1\n\n\n```\n// 注意：@icon-font地址为字符串，且后面一个iconfont为字体文件名（不需要后缀），地址字符串需要在双引号内\n'@icon-url': '\"http://localhost/iconfont/iconfont\"' \n```\n\n### 参数资料\n\n- [本地部署iconfont](https://github.com/ant-design/antd-init/tree/master/examples/local-iconfont)\n- [解决@icon-url无效](https://github.com/ant-design/antd-init/issues/136)\n","source":"_posts/2017-03-24-antd-local-hosted-iconfont.md","raw":"---\nlayout: post\ntitle: antd本地部署iconfont正确步骤\ndate: 2017-03-24 22:48\ncomments: true\ncategories: [前端开发]\n---\n\n[Ant Design of React](https://ant.design/index-cn)由蚂蚁金服体验技术部出品，是基于React+Redux实现，开发和服务于企业级后台产品。\n\nAnt Design 默认的 iconfont 文件托管在 [iconfont.cn](http://iconfont.cn/) 并默认使用平台提供的 alicdn 地址，公网可访问使用。\n\n由于 alicdn 对部分域名有[访问限制](https://github.com/ant-design/ant-design/issues/1070)，或者需要内网环境使用，因此我们可能需要将iconfont文件部署到本地环境。\n\n操作步骤如下：\n\n一、下载iconfont文件\n\n1、官网[在线下载](https://ant.design/docs/resource/download)\n\n2、字体图标库[iconfont](http://iconfont.cn)中下载\n\n二、部署iconfont服务\n\n通过搭建本地服务器提供iconfont访问地址，例如：http://localhost/iconfont\n\n三、配置@icon-url地址\n\n1、通过package.json中自定义主题参数theme中配置@icon-font为'\"iconfont字体本地访问地址\"'\n\n2、通过引用theme.js的方式自定义主题，配置方式同1\n\n\n```\n// 注意：@icon-font地址为字符串，且后面一个iconfont为字体文件名（不需要后缀），地址字符串需要在双引号内\n'@icon-url': '\"http://localhost/iconfont/iconfont\"' \n```\n\n### 参数资料\n\n- [本地部署iconfont](https://github.com/ant-design/antd-init/tree/master/examples/local-iconfont)\n- [解决@icon-url无效](https://github.com/ant-design/antd-init/issues/136)\n","slug":"antd-local-hosted-iconfont","published":1,"updated":"2018-05-30T08:12:15.889Z","photos":[],"link":"","_id":"cjhubytld0037yis561n78fj1","content":"<p><a href=\"https://ant.design/index-cn\" target=\"_blank\" rel=\"noopener\">Ant Design of React</a>由蚂蚁金服体验技术部出品，是基于React+Redux实现，开发和服务于企业级后台产品。</p>\n<p>Ant Design 默认的 iconfont 文件托管在 <a href=\"http://iconfont.cn/\" target=\"_blank\" rel=\"noopener\">iconfont.cn</a> 并默认使用平台提供的 alicdn 地址，公网可访问使用。</p>\n<p>由于 alicdn 对部分域名有<a href=\"https://github.com/ant-design/ant-design/issues/1070\" target=\"_blank\" rel=\"noopener\">访问限制</a>，或者需要内网环境使用，因此我们可能需要将iconfont文件部署到本地环境。</p>\n<p>操作步骤如下：</p>\n<p>一、下载iconfont文件</p>\n<p>1、官网<a href=\"https://ant.design/docs/resource/download\" target=\"_blank\" rel=\"noopener\">在线下载</a></p>\n<p>2、字体图标库<a href=\"http://iconfont.cn\" target=\"_blank\" rel=\"noopener\">iconfont</a>中下载</p>\n<p>二、部署iconfont服务</p>\n<p>通过搭建本地服务器提供iconfont访问地址，例如：<a href=\"http://localhost/iconfont\" target=\"_blank\" rel=\"noopener\">http://localhost/iconfont</a></p>\n<p>三、配置@icon-url地址</p>\n<p>1、通过package.json中自定义主题参数theme中配置@icon-font为’”iconfont字体本地访问地址”‘</p>\n<p>2、通过引用theme.js的方式自定义主题，配置方式同1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 注意：@icon-font地址为字符串，且后面一个iconfont为字体文件名（不需要后缀），地址字符串需要在双引号内</span><br><span class=\"line\">&apos;@icon-url&apos;: &apos;&quot;http://localhost/iconfont/iconfont&quot;&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参数资料\"><a href=\"#参数资料\" class=\"headerlink\" title=\"参数资料\"></a>参数资料</h3><ul>\n<li><a href=\"https://github.com/ant-design/antd-init/tree/master/examples/local-iconfont\" target=\"_blank\" rel=\"noopener\">本地部署iconfont</a></li>\n<li><a href=\"https://github.com/ant-design/antd-init/issues/136\" target=\"_blank\" rel=\"noopener\">解决@icon-url无效</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://ant.design/index-cn\" target=\"_blank\" rel=\"noopener\">Ant Design of React</a>由蚂蚁金服体验技术部出品，是基于React+Redux实现，开发和服务于企业级后台产品。</p>\n<p>Ant Design 默认的 iconfont 文件托管在 <a href=\"http://iconfont.cn/\" target=\"_blank\" rel=\"noopener\">iconfont.cn</a> 并默认使用平台提供的 alicdn 地址，公网可访问使用。</p>\n<p>由于 alicdn 对部分域名有<a href=\"https://github.com/ant-design/ant-design/issues/1070\" target=\"_blank\" rel=\"noopener\">访问限制</a>，或者需要内网环境使用，因此我们可能需要将iconfont文件部署到本地环境。</p>\n<p>操作步骤如下：</p>\n<p>一、下载iconfont文件</p>\n<p>1、官网<a href=\"https://ant.design/docs/resource/download\" target=\"_blank\" rel=\"noopener\">在线下载</a></p>\n<p>2、字体图标库<a href=\"http://iconfont.cn\" target=\"_blank\" rel=\"noopener\">iconfont</a>中下载</p>\n<p>二、部署iconfont服务</p>\n<p>通过搭建本地服务器提供iconfont访问地址，例如：<a href=\"http://localhost/iconfont\" target=\"_blank\" rel=\"noopener\">http://localhost/iconfont</a></p>\n<p>三、配置@icon-url地址</p>\n<p>1、通过package.json中自定义主题参数theme中配置@icon-font为’”iconfont字体本地访问地址”‘</p>\n<p>2、通过引用theme.js的方式自定义主题，配置方式同1</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 注意：@icon-font地址为字符串，且后面一个iconfont为字体文件名（不需要后缀），地址字符串需要在双引号内</span><br><span class=\"line\">&apos;@icon-url&apos;: &apos;&quot;http://localhost/iconfont/iconfont&quot;&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"参数资料\"><a href=\"#参数资料\" class=\"headerlink\" title=\"参数资料\"></a>参数资料</h3><ul>\n<li><a href=\"https://github.com/ant-design/antd-init/tree/master/examples/local-iconfont\" target=\"_blank\" rel=\"noopener\">本地部署iconfont</a></li>\n<li><a href=\"https://github.com/ant-design/antd-init/issues/136\" target=\"_blank\" rel=\"noopener\">解决@icon-url无效</a></li>\n</ul>\n"},{"layout":"post","title":"注意亚马逊的AWS提供免费一年的套餐到期后扣款","date":"2017-06-05T04:00:00.000Z","comments":1,"_content":"\n\n亚马逊应该是目前实际上云服务商中最最知名的，早就听闻了它的云服务器业务，和阿里云的差不多，就是可以自己搭建自己的云服务器。\n\n亚马逊的AWS提供了拥有免费一年的套餐，当时也是为了体验一下AWS，所以就注册并开通了AWS中的EC2，从体验过程中感觉AWS操作相对复杂，不是很适合个体用户，最终还是选择了linode。\n\n今天主要是分享一下亚马逊云服务器取消操作以及在此过程中的一些体会。\n\n### 背景\n\n无意中发现本人信用卡消费记录中有一条Amazon web services扣款$12.19的记录，通过排查发现一年前开通的AWS服务已到期，正常思维是没有使用，不应该产生费用。\n\n### 调查收集\n\n- 通过信用卡帐单查询发现AWS服务到期后每月都有不固定的扣款记录\n- 通过登陆AWS官网点击进入帐单与成本管理界面可查询详情消费记录\n- 研究AWS收款规则\n\n### 关闭服务\n\n打开页面: https://console.aws.amazon.com/billing/home#/account (这个页面最下面有提供关闭服务，不会再被收取任何费用，正常情况下直接关闭服务即可) \n\n```注：如果开通的不是基础服务则需要先取消相关服务，点击“Cancel Services,” 下面的“Click Here”，点击“Change Plan”，选择“Basic Support” 然后点击“Change Plan”，保存后关闭服务即可```\n\n\n","source":"_posts/2017-06-05-how-to-close-amazon-web-services.md","raw":"---\nlayout: post\ntitle: 注意亚马逊的AWS提供免费一年的套餐到期后扣款\ndate: 2017-06-05 12:00\ncomments: true\ncategories: [其他]\n---\n\n\n亚马逊应该是目前实际上云服务商中最最知名的，早就听闻了它的云服务器业务，和阿里云的差不多，就是可以自己搭建自己的云服务器。\n\n亚马逊的AWS提供了拥有免费一年的套餐，当时也是为了体验一下AWS，所以就注册并开通了AWS中的EC2，从体验过程中感觉AWS操作相对复杂，不是很适合个体用户，最终还是选择了linode。\n\n今天主要是分享一下亚马逊云服务器取消操作以及在此过程中的一些体会。\n\n### 背景\n\n无意中发现本人信用卡消费记录中有一条Amazon web services扣款$12.19的记录，通过排查发现一年前开通的AWS服务已到期，正常思维是没有使用，不应该产生费用。\n\n### 调查收集\n\n- 通过信用卡帐单查询发现AWS服务到期后每月都有不固定的扣款记录\n- 通过登陆AWS官网点击进入帐单与成本管理界面可查询详情消费记录\n- 研究AWS收款规则\n\n### 关闭服务\n\n打开页面: https://console.aws.amazon.com/billing/home#/account (这个页面最下面有提供关闭服务，不会再被收取任何费用，正常情况下直接关闭服务即可) \n\n```注：如果开通的不是基础服务则需要先取消相关服务，点击“Cancel Services,” 下面的“Click Here”，点击“Change Plan”，选择“Basic Support” 然后点击“Change Plan”，保存后关闭服务即可```\n\n\n","slug":"how-to-close-amazon-web-services","published":1,"updated":"2018-05-30T08:12:15.890Z","photos":[],"link":"","_id":"cjhubytlf0039yis5p773stea","content":"<p>亚马逊应该是目前实际上云服务商中最最知名的，早就听闻了它的云服务器业务，和阿里云的差不多，就是可以自己搭建自己的云服务器。</p>\n<p>亚马逊的AWS提供了拥有免费一年的套餐，当时也是为了体验一下AWS，所以就注册并开通了AWS中的EC2，从体验过程中感觉AWS操作相对复杂，不是很适合个体用户，最终还是选择了linode。</p>\n<p>今天主要是分享一下亚马逊云服务器取消操作以及在此过程中的一些体会。</p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>无意中发现本人信用卡消费记录中有一条Amazon web services扣款$12.19的记录，通过排查发现一年前开通的AWS服务已到期，正常思维是没有使用，不应该产生费用。</p>\n<h3 id=\"调查收集\"><a href=\"#调查收集\" class=\"headerlink\" title=\"调查收集\"></a>调查收集</h3><ul>\n<li>通过信用卡帐单查询发现AWS服务到期后每月都有不固定的扣款记录</li>\n<li>通过登陆AWS官网点击进入帐单与成本管理界面可查询详情消费记录</li>\n<li>研究AWS收款规则</li>\n</ul>\n<h3 id=\"关闭服务\"><a href=\"#关闭服务\" class=\"headerlink\" title=\"关闭服务\"></a>关闭服务</h3><p>打开页面: <a href=\"https://console.aws.amazon.com/billing/home#/account\" target=\"_blank\" rel=\"noopener\">https://console.aws.amazon.com/billing/home#/account</a> (这个页面最下面有提供关闭服务，不会再被收取任何费用，正常情况下直接关闭服务即可) </p>\n<p><code>注：如果开通的不是基础服务则需要先取消相关服务，点击“Cancel Services,” 下面的“Click Here”，点击“Change Plan”，选择“Basic Support” 然后点击“Change Plan”，保存后关闭服务即可</code></p>\n","site":{"data":{}},"excerpt":"","more":"<p>亚马逊应该是目前实际上云服务商中最最知名的，早就听闻了它的云服务器业务，和阿里云的差不多，就是可以自己搭建自己的云服务器。</p>\n<p>亚马逊的AWS提供了拥有免费一年的套餐，当时也是为了体验一下AWS，所以就注册并开通了AWS中的EC2，从体验过程中感觉AWS操作相对复杂，不是很适合个体用户，最终还是选择了linode。</p>\n<p>今天主要是分享一下亚马逊云服务器取消操作以及在此过程中的一些体会。</p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>无意中发现本人信用卡消费记录中有一条Amazon web services扣款$12.19的记录，通过排查发现一年前开通的AWS服务已到期，正常思维是没有使用，不应该产生费用。</p>\n<h3 id=\"调查收集\"><a href=\"#调查收集\" class=\"headerlink\" title=\"调查收集\"></a>调查收集</h3><ul>\n<li>通过信用卡帐单查询发现AWS服务到期后每月都有不固定的扣款记录</li>\n<li>通过登陆AWS官网点击进入帐单与成本管理界面可查询详情消费记录</li>\n<li>研究AWS收款规则</li>\n</ul>\n<h3 id=\"关闭服务\"><a href=\"#关闭服务\" class=\"headerlink\" title=\"关闭服务\"></a>关闭服务</h3><p>打开页面: <a href=\"https://console.aws.amazon.com/billing/home#/account\" target=\"_blank\" rel=\"noopener\">https://console.aws.amazon.com/billing/home#/account</a> (这个页面最下面有提供关闭服务，不会再被收取任何费用，正常情况下直接关闭服务即可) </p>\n<p><code>注：如果开通的不是基础服务则需要先取消相关服务，点击“Cancel Services,” 下面的“Click Here”，点击“Change Plan”，选择“Basic Support” 然后点击“Change Plan”，保存后关闭服务即可</code></p>\n"},{"layout":"post","title":"chartjs在项目应用中的一些总结","date":"2017-06-12T14:30:00.000Z","comments":1,"_content":"\n[Chart.js](http://www.chartjs.org/)是一款流行的javascript图表库，基于HTML5 Canvas开发，具有简单、灵活、兼容主流浏览器等特性。\n\n本文主要是对新版[Chart.js](http://www.chartjs.org/)(v2.0+)在项目应用中的一些小总结，请特别注意目前国内翻译的Chart.js中文版本相对比较旧，大家在使用过程中请注意，在此推荐查看[Chart.js](http://www.chartjs.org/)官网。\n\n官方版本\n\n- [Chart.js](http://www.chartjs.org/)\n\n中文版本（仅供参考）\n\n- [bootcss chart.js](http://www.bootcss.com/p/chart.js/)\n- [chart.js 中文版](http://chartjs.cn/)\n\n下面主要记录[Chart.js](http://www.chartjs.org/)在实际项目应用场景中的一些设置，主要以问答方式体现如下：\n\n1、 如何设置线条大小、颜色？\n\n```javascript\ndata: {\n\tlabels: labels,\n\tdatasets: [{\n\t\tlabel:'',\n\t\tdata,\n\t\tborderWidth: 2, // 线条宽度\n\t\tborderColor:'rgba(255,255,255,.6)', // 线条颜色\n\t\tbackgroundColor:'rgba(255,255,255,.2)', // 线条到坐标区域背景色\n\t}]\n}\n```\n\n2、 如何隐藏线条的Tag（标签）？\n\n在Chart配置参数options中设置legend的dispay的值为false\n\n```javascript\noptions: {\n\tlegend: {\n\t\tdisplay: false // 隐藏线条的说明（Tag）\n\t}\n}\n```\n\n3、 如何隐藏对应坐标线以及设置对应坐标线为虚线？\n\n在Chart配置参数options中对坐标进行相关设置\n\n```javascript\noptions: {\n\tscales: {\n    \txAxes: [{\n            gridLines:{\n                display: false, // 隐藏x坐标网格\n                drawBorder: false, // 不渲染坐标线\n            }\n        }],\n        yAxes: [{\n            gridLines:{\n                display: true,\n                drawBorder: false,\n                drawOnChartArea: true, \n                drawTicks: false,\n                borderDash: [7, 5], // 网络虚线间的空隙\n                color: 'rgba(255,255,255,.4)', // 网络线颜色\n                zeroLineBorderDash: [7,5], // 坐标轴上的网络虚线间的空隙\n                zeroLineColor: 'rgba(255,255,255,.4)' // 线条颜色\n            }\n        }]\n\t}\n}\n```\n\n4、 如何隐藏y坐标的对应值？\n\n```javascript\noptions: {\n\tresponsive: false,\n\tlegend: {display: false},\n\tscales: {\n\t    yAxes: [{\n\t        ticks: {\n\t            display: false, // 隐藏对应坐标的值\n\t            min: 0,\n\t        },\n\t    }]\n\t}\t\n}\n```\n\n5、 如何设置y坐标的最小值？\n\n默认不设置坐标轴最小值则坐标轴动态显示，可为正数、负数或对等的正负坐标轴，当设置最小值后则按最小值显示对应坐标轴\n\n```javascript\noptions: {\n\tresponsive: false,\n\tlegend: {display: false},\n\tscales: {\n\t    yAxes: [{\n\t        ticks: {\n\t            min: 100, // 设置Y坐标轴最小值为100\n\t        },\n\t    }]\n\t}\t\n}\n```\n\n以下为完整的实例代码：\n\n```javascript\nChart.defaults.global.defaultFontColor = '#fff';\n\tvar myChart = new Chart(ctx, {\n\t\ttype: 'line',\n\t\tdata: {\n\t    \tlabels: labels,\n\t    \tdatasets: [{\n\t        \tlabel:'',\n\t        \tdata,\n\t        \tpointColor : \"#fff\",\n\t\t\t\tpointStrokeColor : \"#fff\",\n\t\t\t\tpointBackgroundColor: '#fff',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tborderColor:'rgba(255,255,255,.6)',\n\t\t\t\tbackgroundColor:'rgba(255,255,255,.2)',\n\t    \t}]\n\t\t},\n\t   \toptions: {\n\t       \tresponsive: false,\n\t       \tlegend: {display: false},\n\t       \tscales: {\n\t        \txAxes: [{\n\t                gridLines:{\n\t                    display: false,\n\t                    drawBorder: false,\n\t                }\n\t            }],\n\t            yAxes: [{\n\t                ticks: {\n\t                    display: false,\n\t                    min: 0,\n\t                },\n\t                gridLines:{\n\t                    display: true,\n\t                    drawBorder: false,\n\t                    drawOnChartArea: true,\n\t                    drawTicks: false,\n\t                    borderDash: [7, 5],\n\t                    color: 'rgba(255,255,255,.4)',\n\t                    zeroLineBorderDash: [7,5],\n\t                    zeroLineColor: 'rgba(255,255,255,.4)'\n\t                }\n\t            }]\n\t    \t}\n\t\t}\n\t});\n```\n\n\n\n\n\n","source":"_posts/2017-06-12-about-use-someing-of-chart.md","raw":"---\nlayout: post\ntitle: chartjs在项目应用中的一些总结\ndate: 2017-06-12 22:30\ncomments: true\ncategories: [前端开发]\n---\n\n[Chart.js](http://www.chartjs.org/)是一款流行的javascript图表库，基于HTML5 Canvas开发，具有简单、灵活、兼容主流浏览器等特性。\n\n本文主要是对新版[Chart.js](http://www.chartjs.org/)(v2.0+)在项目应用中的一些小总结，请特别注意目前国内翻译的Chart.js中文版本相对比较旧，大家在使用过程中请注意，在此推荐查看[Chart.js](http://www.chartjs.org/)官网。\n\n官方版本\n\n- [Chart.js](http://www.chartjs.org/)\n\n中文版本（仅供参考）\n\n- [bootcss chart.js](http://www.bootcss.com/p/chart.js/)\n- [chart.js 中文版](http://chartjs.cn/)\n\n下面主要记录[Chart.js](http://www.chartjs.org/)在实际项目应用场景中的一些设置，主要以问答方式体现如下：\n\n1、 如何设置线条大小、颜色？\n\n```javascript\ndata: {\n\tlabels: labels,\n\tdatasets: [{\n\t\tlabel:'',\n\t\tdata,\n\t\tborderWidth: 2, // 线条宽度\n\t\tborderColor:'rgba(255,255,255,.6)', // 线条颜色\n\t\tbackgroundColor:'rgba(255,255,255,.2)', // 线条到坐标区域背景色\n\t}]\n}\n```\n\n2、 如何隐藏线条的Tag（标签）？\n\n在Chart配置参数options中设置legend的dispay的值为false\n\n```javascript\noptions: {\n\tlegend: {\n\t\tdisplay: false // 隐藏线条的说明（Tag）\n\t}\n}\n```\n\n3、 如何隐藏对应坐标线以及设置对应坐标线为虚线？\n\n在Chart配置参数options中对坐标进行相关设置\n\n```javascript\noptions: {\n\tscales: {\n    \txAxes: [{\n            gridLines:{\n                display: false, // 隐藏x坐标网格\n                drawBorder: false, // 不渲染坐标线\n            }\n        }],\n        yAxes: [{\n            gridLines:{\n                display: true,\n                drawBorder: false,\n                drawOnChartArea: true, \n                drawTicks: false,\n                borderDash: [7, 5], // 网络虚线间的空隙\n                color: 'rgba(255,255,255,.4)', // 网络线颜色\n                zeroLineBorderDash: [7,5], // 坐标轴上的网络虚线间的空隙\n                zeroLineColor: 'rgba(255,255,255,.4)' // 线条颜色\n            }\n        }]\n\t}\n}\n```\n\n4、 如何隐藏y坐标的对应值？\n\n```javascript\noptions: {\n\tresponsive: false,\n\tlegend: {display: false},\n\tscales: {\n\t    yAxes: [{\n\t        ticks: {\n\t            display: false, // 隐藏对应坐标的值\n\t            min: 0,\n\t        },\n\t    }]\n\t}\t\n}\n```\n\n5、 如何设置y坐标的最小值？\n\n默认不设置坐标轴最小值则坐标轴动态显示，可为正数、负数或对等的正负坐标轴，当设置最小值后则按最小值显示对应坐标轴\n\n```javascript\noptions: {\n\tresponsive: false,\n\tlegend: {display: false},\n\tscales: {\n\t    yAxes: [{\n\t        ticks: {\n\t            min: 100, // 设置Y坐标轴最小值为100\n\t        },\n\t    }]\n\t}\t\n}\n```\n\n以下为完整的实例代码：\n\n```javascript\nChart.defaults.global.defaultFontColor = '#fff';\n\tvar myChart = new Chart(ctx, {\n\t\ttype: 'line',\n\t\tdata: {\n\t    \tlabels: labels,\n\t    \tdatasets: [{\n\t        \tlabel:'',\n\t        \tdata,\n\t        \tpointColor : \"#fff\",\n\t\t\t\tpointStrokeColor : \"#fff\",\n\t\t\t\tpointBackgroundColor: '#fff',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tborderColor:'rgba(255,255,255,.6)',\n\t\t\t\tbackgroundColor:'rgba(255,255,255,.2)',\n\t    \t}]\n\t\t},\n\t   \toptions: {\n\t       \tresponsive: false,\n\t       \tlegend: {display: false},\n\t       \tscales: {\n\t        \txAxes: [{\n\t                gridLines:{\n\t                    display: false,\n\t                    drawBorder: false,\n\t                }\n\t            }],\n\t            yAxes: [{\n\t                ticks: {\n\t                    display: false,\n\t                    min: 0,\n\t                },\n\t                gridLines:{\n\t                    display: true,\n\t                    drawBorder: false,\n\t                    drawOnChartArea: true,\n\t                    drawTicks: false,\n\t                    borderDash: [7, 5],\n\t                    color: 'rgba(255,255,255,.4)',\n\t                    zeroLineBorderDash: [7,5],\n\t                    zeroLineColor: 'rgba(255,255,255,.4)'\n\t                }\n\t            }]\n\t    \t}\n\t\t}\n\t});\n```\n\n\n\n\n\n","slug":"about-use-someing-of-chart","published":1,"updated":"2018-05-30T08:12:15.892Z","photos":[],"link":"","_id":"cjhubytlh003cyis59u7g3s7d","content":"<p><a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>是一款流行的javascript图表库，基于HTML5 Canvas开发，具有简单、灵活、兼容主流浏览器等特性。</p>\n<p>本文主要是对新版<a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>(v2.0+)在项目应用中的一些小总结，请特别注意目前国内翻译的Chart.js中文版本相对比较旧，大家在使用过程中请注意，在此推荐查看<a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>官网。</p>\n<p>官方版本</p>\n<ul>\n<li><a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a></li>\n</ul>\n<p>中文版本（仅供参考）</p>\n<ul>\n<li><a href=\"http://www.bootcss.com/p/chart.js/\" target=\"_blank\" rel=\"noopener\">bootcss chart.js</a></li>\n<li><a href=\"http://chartjs.cn/\" target=\"_blank\" rel=\"noopener\">chart.js 中文版</a></li>\n</ul>\n<p>下面主要记录<a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>在实际项目应用场景中的一些设置，主要以问答方式体现如下：</p>\n<p>1、 如何设置线条大小、颜色？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">\tlabels: labels,</span><br><span class=\"line\">\tdatasets: [&#123;</span><br><span class=\"line\">\t\tlabel:<span class=\"string\">''</span>,</span><br><span class=\"line\">\t\tdata,</span><br><span class=\"line\">\t\tborderWidth: <span class=\"number\">2</span>, <span class=\"comment\">// 线条宽度</span></span><br><span class=\"line\">\t\tborderColor:<span class=\"string\">'rgba(255,255,255,.6)'</span>, <span class=\"comment\">// 线条颜色</span></span><br><span class=\"line\">\t\tbackgroundColor:<span class=\"string\">'rgba(255,255,255,.2)'</span>, <span class=\"comment\">// 线条到坐标区域背景色</span></span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、 如何隐藏线条的Tag（标签）？</p>\n<p>在Chart配置参数options中设置legend的dispay的值为false</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tlegend: &#123;</span><br><span class=\"line\">\t\tdisplay: <span class=\"literal\">false</span> <span class=\"comment\">// 隐藏线条的说明（Tag）</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、 如何隐藏对应坐标线以及设置对应坐标线为虚线？</p>\n<p>在Chart配置参数options中对坐标进行相关设置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tscales: &#123;</span><br><span class=\"line\">    \txAxes: [&#123;</span><br><span class=\"line\">            gridLines:&#123;</span><br><span class=\"line\">                display: <span class=\"literal\">false</span>, <span class=\"comment\">// 隐藏x坐标网格</span></span><br><span class=\"line\">                drawBorder: <span class=\"literal\">false</span>, <span class=\"comment\">// 不渲染坐标线</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        yAxes: [&#123;</span><br><span class=\"line\">            gridLines:&#123;</span><br><span class=\"line\">                display: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                drawBorder: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                drawOnChartArea: <span class=\"literal\">true</span>, </span><br><span class=\"line\">                drawTicks: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                borderDash: [<span class=\"number\">7</span>, <span class=\"number\">5</span>], <span class=\"comment\">// 网络虚线间的空隙</span></span><br><span class=\"line\">                color: <span class=\"string\">'rgba(255,255,255,.4)'</span>, <span class=\"comment\">// 网络线颜色</span></span><br><span class=\"line\">                zeroLineBorderDash: [<span class=\"number\">7</span>,<span class=\"number\">5</span>], <span class=\"comment\">// 坐标轴上的网络虚线间的空隙</span></span><br><span class=\"line\">                zeroLineColor: <span class=\"string\">'rgba(255,255,255,.4)'</span> <span class=\"comment\">// 线条颜色</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、 如何隐藏y坐标的对应值？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tresponsive: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\tlegend: &#123;<span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\tscales: &#123;</span><br><span class=\"line\">\t    yAxes: [&#123;</span><br><span class=\"line\">\t        ticks: &#123;</span><br><span class=\"line\">\t            display: <span class=\"literal\">false</span>, <span class=\"comment\">// 隐藏对应坐标的值</span></span><br><span class=\"line\">\t            min: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t        &#125;,</span><br><span class=\"line\">\t    &#125;]</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、 如何设置y坐标的最小值？</p>\n<p>默认不设置坐标轴最小值则坐标轴动态显示，可为正数、负数或对等的正负坐标轴，当设置最小值后则按最小值显示对应坐标轴</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tresponsive: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\tlegend: &#123;<span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\tscales: &#123;</span><br><span class=\"line\">\t    yAxes: [&#123;</span><br><span class=\"line\">\t        ticks: &#123;</span><br><span class=\"line\">\t            min: <span class=\"number\">100</span>, <span class=\"comment\">// 设置Y坐标轴最小值为100</span></span><br><span class=\"line\">\t        &#125;,</span><br><span class=\"line\">\t    &#125;]</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以下为完整的实例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Chart.defaults.global.defaultFontColor = <span class=\"string\">'#fff'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> myChart = <span class=\"keyword\">new</span> Chart(ctx, &#123;</span><br><span class=\"line\">\t\ttype: <span class=\"string\">'line'</span>,</span><br><span class=\"line\">\t\tdata: &#123;</span><br><span class=\"line\">\t    \tlabels: labels,</span><br><span class=\"line\">\t    \tdatasets: [&#123;</span><br><span class=\"line\">\t        \tlabel:<span class=\"string\">''</span>,</span><br><span class=\"line\">\t        \tdata,</span><br><span class=\"line\">\t        \tpointColor : <span class=\"string\">\"#fff\"</span>,</span><br><span class=\"line\">\t\t\t\tpointStrokeColor : <span class=\"string\">\"#fff\"</span>,</span><br><span class=\"line\">\t\t\t\tpointBackgroundColor: <span class=\"string\">'#fff'</span>,</span><br><span class=\"line\">\t\t\t\tborderWidth: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t\tborderColor:<span class=\"string\">'rgba(255,255,255,.6)'</span>,</span><br><span class=\"line\">\t\t\t\tbackgroundColor:<span class=\"string\">'rgba(255,255,255,.2)'</span>,</span><br><span class=\"line\">\t    \t&#125;]</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t   \toptions: &#123;</span><br><span class=\"line\">\t       \tresponsive: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t       \tlegend: &#123;<span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\t       \tscales: &#123;</span><br><span class=\"line\">\t        \txAxes: [&#123;</span><br><span class=\"line\">\t                gridLines:&#123;</span><br><span class=\"line\">\t                    display: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    drawBorder: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                &#125;</span><br><span class=\"line\">\t            &#125;],</span><br><span class=\"line\">\t            yAxes: [&#123;</span><br><span class=\"line\">\t                ticks: &#123;</span><br><span class=\"line\">\t                    display: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    min: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t                &#125;,</span><br><span class=\"line\">\t                gridLines:&#123;</span><br><span class=\"line\">\t                    display: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t                    drawBorder: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    drawOnChartArea: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t                    drawTicks: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    borderDash: [<span class=\"number\">7</span>, <span class=\"number\">5</span>],</span><br><span class=\"line\">\t                    color: <span class=\"string\">'rgba(255,255,255,.4)'</span>,</span><br><span class=\"line\">\t                    zeroLineBorderDash: [<span class=\"number\">7</span>,<span class=\"number\">5</span>],</span><br><span class=\"line\">\t                    zeroLineColor: <span class=\"string\">'rgba(255,255,255,.4)'</span></span><br><span class=\"line\">\t                &#125;</span><br><span class=\"line\">\t            &#125;]</span><br><span class=\"line\">\t    \t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>是一款流行的javascript图表库，基于HTML5 Canvas开发，具有简单、灵活、兼容主流浏览器等特性。</p>\n<p>本文主要是对新版<a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>(v2.0+)在项目应用中的一些小总结，请特别注意目前国内翻译的Chart.js中文版本相对比较旧，大家在使用过程中请注意，在此推荐查看<a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>官网。</p>\n<p>官方版本</p>\n<ul>\n<li><a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a></li>\n</ul>\n<p>中文版本（仅供参考）</p>\n<ul>\n<li><a href=\"http://www.bootcss.com/p/chart.js/\" target=\"_blank\" rel=\"noopener\">bootcss chart.js</a></li>\n<li><a href=\"http://chartjs.cn/\" target=\"_blank\" rel=\"noopener\">chart.js 中文版</a></li>\n</ul>\n<p>下面主要记录<a href=\"http://www.chartjs.org/\" target=\"_blank\" rel=\"noopener\">Chart.js</a>在实际项目应用场景中的一些设置，主要以问答方式体现如下：</p>\n<p>1、 如何设置线条大小、颜色？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data: &#123;</span><br><span class=\"line\">\tlabels: labels,</span><br><span class=\"line\">\tdatasets: [&#123;</span><br><span class=\"line\">\t\tlabel:<span class=\"string\">''</span>,</span><br><span class=\"line\">\t\tdata,</span><br><span class=\"line\">\t\tborderWidth: <span class=\"number\">2</span>, <span class=\"comment\">// 线条宽度</span></span><br><span class=\"line\">\t\tborderColor:<span class=\"string\">'rgba(255,255,255,.6)'</span>, <span class=\"comment\">// 线条颜色</span></span><br><span class=\"line\">\t\tbackgroundColor:<span class=\"string\">'rgba(255,255,255,.2)'</span>, <span class=\"comment\">// 线条到坐标区域背景色</span></span><br><span class=\"line\">\t&#125;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2、 如何隐藏线条的Tag（标签）？</p>\n<p>在Chart配置参数options中设置legend的dispay的值为false</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tlegend: &#123;</span><br><span class=\"line\">\t\tdisplay: <span class=\"literal\">false</span> <span class=\"comment\">// 隐藏线条的说明（Tag）</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、 如何隐藏对应坐标线以及设置对应坐标线为虚线？</p>\n<p>在Chart配置参数options中对坐标进行相关设置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tscales: &#123;</span><br><span class=\"line\">    \txAxes: [&#123;</span><br><span class=\"line\">            gridLines:&#123;</span><br><span class=\"line\">                display: <span class=\"literal\">false</span>, <span class=\"comment\">// 隐藏x坐标网格</span></span><br><span class=\"line\">                drawBorder: <span class=\"literal\">false</span>, <span class=\"comment\">// 不渲染坐标线</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;],</span><br><span class=\"line\">        yAxes: [&#123;</span><br><span class=\"line\">            gridLines:&#123;</span><br><span class=\"line\">                display: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                drawBorder: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                drawOnChartArea: <span class=\"literal\">true</span>, </span><br><span class=\"line\">                drawTicks: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                borderDash: [<span class=\"number\">7</span>, <span class=\"number\">5</span>], <span class=\"comment\">// 网络虚线间的空隙</span></span><br><span class=\"line\">                color: <span class=\"string\">'rgba(255,255,255,.4)'</span>, <span class=\"comment\">// 网络线颜色</span></span><br><span class=\"line\">                zeroLineBorderDash: [<span class=\"number\">7</span>,<span class=\"number\">5</span>], <span class=\"comment\">// 坐标轴上的网络虚线间的空隙</span></span><br><span class=\"line\">                zeroLineColor: <span class=\"string\">'rgba(255,255,255,.4)'</span> <span class=\"comment\">// 线条颜色</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、 如何隐藏y坐标的对应值？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tresponsive: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\tlegend: &#123;<span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\tscales: &#123;</span><br><span class=\"line\">\t    yAxes: [&#123;</span><br><span class=\"line\">\t        ticks: &#123;</span><br><span class=\"line\">\t            display: <span class=\"literal\">false</span>, <span class=\"comment\">// 隐藏对应坐标的值</span></span><br><span class=\"line\">\t            min: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t        &#125;,</span><br><span class=\"line\">\t    &#125;]</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>5、 如何设置y坐标的最小值？</p>\n<p>默认不设置坐标轴最小值则坐标轴动态显示，可为正数、负数或对等的正负坐标轴，当设置最小值后则按最小值显示对应坐标轴</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">options: &#123;</span><br><span class=\"line\">\tresponsive: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\tlegend: &#123;<span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\tscales: &#123;</span><br><span class=\"line\">\t    yAxes: [&#123;</span><br><span class=\"line\">\t        ticks: &#123;</span><br><span class=\"line\">\t            min: <span class=\"number\">100</span>, <span class=\"comment\">// 设置Y坐标轴最小值为100</span></span><br><span class=\"line\">\t        &#125;,</span><br><span class=\"line\">\t    &#125;]</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以下为完整的实例代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Chart.defaults.global.defaultFontColor = <span class=\"string\">'#fff'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> myChart = <span class=\"keyword\">new</span> Chart(ctx, &#123;</span><br><span class=\"line\">\t\ttype: <span class=\"string\">'line'</span>,</span><br><span class=\"line\">\t\tdata: &#123;</span><br><span class=\"line\">\t    \tlabels: labels,</span><br><span class=\"line\">\t    \tdatasets: [&#123;</span><br><span class=\"line\">\t        \tlabel:<span class=\"string\">''</span>,</span><br><span class=\"line\">\t        \tdata,</span><br><span class=\"line\">\t        \tpointColor : <span class=\"string\">\"#fff\"</span>,</span><br><span class=\"line\">\t\t\t\tpointStrokeColor : <span class=\"string\">\"#fff\"</span>,</span><br><span class=\"line\">\t\t\t\tpointBackgroundColor: <span class=\"string\">'#fff'</span>,</span><br><span class=\"line\">\t\t\t\tborderWidth: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t\t\t\tborderColor:<span class=\"string\">'rgba(255,255,255,.6)'</span>,</span><br><span class=\"line\">\t\t\t\tbackgroundColor:<span class=\"string\">'rgba(255,255,255,.2)'</span>,</span><br><span class=\"line\">\t    \t&#125;]</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t   \toptions: &#123;</span><br><span class=\"line\">\t       \tresponsive: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t       \tlegend: &#123;<span class=\"attr\">display</span>: <span class=\"literal\">false</span>&#125;,</span><br><span class=\"line\">\t       \tscales: &#123;</span><br><span class=\"line\">\t        \txAxes: [&#123;</span><br><span class=\"line\">\t                gridLines:&#123;</span><br><span class=\"line\">\t                    display: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    drawBorder: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                &#125;</span><br><span class=\"line\">\t            &#125;],</span><br><span class=\"line\">\t            yAxes: [&#123;</span><br><span class=\"line\">\t                ticks: &#123;</span><br><span class=\"line\">\t                    display: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    min: <span class=\"number\">0</span>,</span><br><span class=\"line\">\t                &#125;,</span><br><span class=\"line\">\t                gridLines:&#123;</span><br><span class=\"line\">\t                    display: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t                    drawBorder: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    drawOnChartArea: <span class=\"literal\">true</span>,</span><br><span class=\"line\">\t                    drawTicks: <span class=\"literal\">false</span>,</span><br><span class=\"line\">\t                    borderDash: [<span class=\"number\">7</span>, <span class=\"number\">5</span>],</span><br><span class=\"line\">\t                    color: <span class=\"string\">'rgba(255,255,255,.4)'</span>,</span><br><span class=\"line\">\t                    zeroLineBorderDash: [<span class=\"number\">7</span>,<span class=\"number\">5</span>],</span><br><span class=\"line\">\t                    zeroLineColor: <span class=\"string\">'rgba(255,255,255,.4)'</span></span><br><span class=\"line\">\t                &#125;</span><br><span class=\"line\">\t            &#125;]</span><br><span class=\"line\">\t    \t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n"},{"layout":"post","title":"LazyMan的实现","date":"2017-06-19T12:10:00.000Z","comments":1,"_content":"\nLazyMan是一道javascript面试题，第一次听说LazyMan一词是与[ing70](http://www.ing70.com/)聊天中获得，本文主要是说说自己的实现思路和方法。\n\n### 题目如下：\n\n实现一个LazyMan，可以按照以下方式调用:\n\n```\nLazyMan(\"Hank\")输出:\nHi! This is Hank!\n\nLazyMan(\"Hank\").sleep(10).eat(\"dinner\")输出\nHi! This is Hank!\n//等待10秒..\nWake up after 10\nEat dinner~\n\nLazyMan(\"Hank\").eat(\"dinner\").eat(\"supper\")输出\nHi This is Hank!\nEat dinner~\nEat supper~\n\nLazyMan(\"Hank\").sleepFirst(5).eat(\"supper\")输出\n//等待5秒\nWake up after 5\nHi This is Hank!\nEat supper\n```\n\n以此类推。\n\n### 分析思路\n\n根据经验猜测此题可参考jQuery中[delay()](http://api.jquery.com/delay/)、PHP中[sleep()](http://www.php.net/manual/en/function.sleep.php)、[Express](http://www.expressjs.com.cn/4x/api.html)中next()中间件等方法的实现原理。也是典型的JavaScript流程控制，因此问题的关键是如何实现任务的顺序执行。\n\n考查关键\n\n- 链式调用\n- _next()流程控制\n- 定时器的使用(setTimeout)\n- 数组常用方法的掌握(pop、push、shift、unshift)\n- 代码的封装(类、构造函数、原型链等)\n\n### 代码实现\n\n```\n(function(){\n    function LazyMan(name){\n        var that = this;\n        this._func = []; // 函数执行任务队列\n        this.name = name;\n        this._add({info: 'Hi! This is ' + this.name + '!'});\n        // 下一次事件循环时执行\n        setTimeout(function(){\n            that._next();\n        },0);\n    }\n    \n    // _next维持任务队列中函数的执行\n    LazyMan.prototype._next = function(){\n        var func = this._func.shift();\n        func && func();\n    }\n    \n    // 添加任务到队列\n    LazyMan.prototype._add = function(obj){\n        var that = this;\n        var fn = function(){\n            obj.info && console.log(obj.info);\n            if(obj.time && obj.time > 0){\n                setTimeout(function(){\n                    that._next();\n                }, obj.time * 1000);\n            } else {\n                that._next();\n            }\n        };\n        // 添加到队列末端\n        !!obj.special == false && this._func.push(fn);\n        // 添加到队列前端\n        !!obj.special == true && this._func.unshift(fn);\n    }\n    \n    LazyMan.prototype.eat = function(shit){\n        this._add({info: 'Eat ' + shit + '~'});\n        return this;\n    }\n\n    LazyMan.prototype.sleep = function(time){\n        this._add({info: 'Wake up after ' + time, time: time, special: false});\n        return this;\n    }\n\n    LazyMan.prototype.sleepFirst = function(time){\n        this._add({info: 'Wake up after ' + time, time: time, special: true});\n        return this;\n    }\n\n    var _lazyMan = function(name){\n        return new LazyMan(name);\n    }\n\n    window.LazyMan = _lazyMan;\n})();\n```\n\n### 运行结果（在线运行）\n\n请打开console控制台，查看运行结果。\n\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"pwrrjY\" data-default-tab=\"js\" data-user=\"hankewins\" data-embed-version=\"2\" data-pen-title=\"pwrrjY\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/hankewins/pen/pwrrjY/\">pwrrjY</a> by hankewins (<a href=\"https://codepen.io/hankewins\">@hankewins</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n","source":"_posts/2017-06-19-javascript-lazy-man.md","raw":"---\nlayout: post\ntitle: LazyMan的实现\ndate: 2017-06-19 20:10\ncomments: true\ncategories: [前端开发]\n---\n\nLazyMan是一道javascript面试题，第一次听说LazyMan一词是与[ing70](http://www.ing70.com/)聊天中获得，本文主要是说说自己的实现思路和方法。\n\n### 题目如下：\n\n实现一个LazyMan，可以按照以下方式调用:\n\n```\nLazyMan(\"Hank\")输出:\nHi! This is Hank!\n\nLazyMan(\"Hank\").sleep(10).eat(\"dinner\")输出\nHi! This is Hank!\n//等待10秒..\nWake up after 10\nEat dinner~\n\nLazyMan(\"Hank\").eat(\"dinner\").eat(\"supper\")输出\nHi This is Hank!\nEat dinner~\nEat supper~\n\nLazyMan(\"Hank\").sleepFirst(5).eat(\"supper\")输出\n//等待5秒\nWake up after 5\nHi This is Hank!\nEat supper\n```\n\n以此类推。\n\n### 分析思路\n\n根据经验猜测此题可参考jQuery中[delay()](http://api.jquery.com/delay/)、PHP中[sleep()](http://www.php.net/manual/en/function.sleep.php)、[Express](http://www.expressjs.com.cn/4x/api.html)中next()中间件等方法的实现原理。也是典型的JavaScript流程控制，因此问题的关键是如何实现任务的顺序执行。\n\n考查关键\n\n- 链式调用\n- _next()流程控制\n- 定时器的使用(setTimeout)\n- 数组常用方法的掌握(pop、push、shift、unshift)\n- 代码的封装(类、构造函数、原型链等)\n\n### 代码实现\n\n```\n(function(){\n    function LazyMan(name){\n        var that = this;\n        this._func = []; // 函数执行任务队列\n        this.name = name;\n        this._add({info: 'Hi! This is ' + this.name + '!'});\n        // 下一次事件循环时执行\n        setTimeout(function(){\n            that._next();\n        },0);\n    }\n    \n    // _next维持任务队列中函数的执行\n    LazyMan.prototype._next = function(){\n        var func = this._func.shift();\n        func && func();\n    }\n    \n    // 添加任务到队列\n    LazyMan.prototype._add = function(obj){\n        var that = this;\n        var fn = function(){\n            obj.info && console.log(obj.info);\n            if(obj.time && obj.time > 0){\n                setTimeout(function(){\n                    that._next();\n                }, obj.time * 1000);\n            } else {\n                that._next();\n            }\n        };\n        // 添加到队列末端\n        !!obj.special == false && this._func.push(fn);\n        // 添加到队列前端\n        !!obj.special == true && this._func.unshift(fn);\n    }\n    \n    LazyMan.prototype.eat = function(shit){\n        this._add({info: 'Eat ' + shit + '~'});\n        return this;\n    }\n\n    LazyMan.prototype.sleep = function(time){\n        this._add({info: 'Wake up after ' + time, time: time, special: false});\n        return this;\n    }\n\n    LazyMan.prototype.sleepFirst = function(time){\n        this._add({info: 'Wake up after ' + time, time: time, special: true});\n        return this;\n    }\n\n    var _lazyMan = function(name){\n        return new LazyMan(name);\n    }\n\n    window.LazyMan = _lazyMan;\n})();\n```\n\n### 运行结果（在线运行）\n\n请打开console控制台，查看运行结果。\n\n<p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"pwrrjY\" data-default-tab=\"js\" data-user=\"hankewins\" data-embed-version=\"2\" data-pen-title=\"pwrrjY\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/hankewins/pen/pwrrjY/\">pwrrjY</a> by hankewins (<a href=\"https://codepen.io/hankewins\">@hankewins</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n","slug":"javascript-lazy-man","published":1,"updated":"2018-05-30T08:12:15.894Z","photos":[],"link":"","_id":"cjhubytli003eyis5mmflr864","content":"<p>LazyMan是一道javascript面试题，第一次听说LazyMan一词是与<a href=\"http://www.ing70.com/\" target=\"_blank\" rel=\"noopener\">ing70</a>聊天中获得，本文主要是说说自己的实现思路和方法。</p>\n<h3 id=\"题目如下：\"><a href=\"#题目如下：\" class=\"headerlink\" title=\"题目如下：\"></a>题目如下：</h3><p>实现一个LazyMan，可以按照以下方式调用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LazyMan(&quot;Hank&quot;)输出:</span><br><span class=\"line\">Hi! This is Hank!</span><br><span class=\"line\"></span><br><span class=\"line\">LazyMan(&quot;Hank&quot;).sleep(10).eat(&quot;dinner&quot;)输出</span><br><span class=\"line\">Hi! This is Hank!</span><br><span class=\"line\">//等待10秒..</span><br><span class=\"line\">Wake up after 10</span><br><span class=\"line\">Eat dinner~</span><br><span class=\"line\"></span><br><span class=\"line\">LazyMan(&quot;Hank&quot;).eat(&quot;dinner&quot;).eat(&quot;supper&quot;)输出</span><br><span class=\"line\">Hi This is Hank!</span><br><span class=\"line\">Eat dinner~</span><br><span class=\"line\">Eat supper~</span><br><span class=\"line\"></span><br><span class=\"line\">LazyMan(&quot;Hank&quot;).sleepFirst(5).eat(&quot;supper&quot;)输出</span><br><span class=\"line\">//等待5秒</span><br><span class=\"line\">Wake up after 5</span><br><span class=\"line\">Hi This is Hank!</span><br><span class=\"line\">Eat supper</span><br></pre></td></tr></table></figure>\n<p>以此类推。</p>\n<h3 id=\"分析思路\"><a href=\"#分析思路\" class=\"headerlink\" title=\"分析思路\"></a>分析思路</h3><p>根据经验猜测此题可参考jQuery中<a href=\"http://api.jquery.com/delay/\" target=\"_blank\" rel=\"noopener\">delay()</a>、PHP中<a href=\"http://www.php.net/manual/en/function.sleep.php\" target=\"_blank\" rel=\"noopener\">sleep()</a>、<a href=\"http://www.expressjs.com.cn/4x/api.html\" target=\"_blank\" rel=\"noopener\">Express</a>中next()中间件等方法的实现原理。也是典型的JavaScript流程控制，因此问题的关键是如何实现任务的顺序执行。</p>\n<p>考查关键</p>\n<ul>\n<li>链式调用</li>\n<li>_next()流程控制</li>\n<li>定时器的使用(setTimeout)</li>\n<li>数组常用方法的掌握(pop、push、shift、unshift)</li>\n<li>代码的封装(类、构造函数、原型链等)</li>\n</ul>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function()&#123;</span><br><span class=\"line\">    function LazyMan(name)&#123;</span><br><span class=\"line\">        var that = this;</span><br><span class=\"line\">        this._func = []; // 函数执行任务队列</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Hi! This is &apos; + this.name + &apos;!&apos;&#125;);</span><br><span class=\"line\">        // 下一次事件循环时执行</span><br><span class=\"line\">        setTimeout(function()&#123;</span><br><span class=\"line\">            that._next();</span><br><span class=\"line\">        &#125;,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // _next维持任务队列中函数的执行</span><br><span class=\"line\">    LazyMan.prototype._next = function()&#123;</span><br><span class=\"line\">        var func = this._func.shift();</span><br><span class=\"line\">        func &amp;&amp; func();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 添加任务到队列</span><br><span class=\"line\">    LazyMan.prototype._add = function(obj)&#123;</span><br><span class=\"line\">        var that = this;</span><br><span class=\"line\">        var fn = function()&#123;</span><br><span class=\"line\">            obj.info &amp;&amp; console.log(obj.info);</span><br><span class=\"line\">            if(obj.time &amp;&amp; obj.time &gt; 0)&#123;</span><br><span class=\"line\">                setTimeout(function()&#123;</span><br><span class=\"line\">                    that._next();</span><br><span class=\"line\">                &#125;, obj.time * 1000);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                that._next();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        // 添加到队列末端</span><br><span class=\"line\">        !!obj.special == false &amp;&amp; this._func.push(fn);</span><br><span class=\"line\">        // 添加到队列前端</span><br><span class=\"line\">        !!obj.special == true &amp;&amp; this._func.unshift(fn);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    LazyMan.prototype.eat = function(shit)&#123;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Eat &apos; + shit + &apos;~&apos;&#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    LazyMan.prototype.sleep = function(time)&#123;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Wake up after &apos; + time, time: time, special: false&#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    LazyMan.prototype.sleepFirst = function(time)&#123;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Wake up after &apos; + time, time: time, special: true&#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var _lazyMan = function(name)&#123;</span><br><span class=\"line\">        return new LazyMan(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    window.LazyMan = _lazyMan;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行结果（在线运行）\"><a href=\"#运行结果（在线运行）\" class=\"headerlink\" title=\"运行结果（在线运行）\"></a>运行结果（在线运行）</h3><p>请打开console控制台，查看运行结果。</p>\n<p></p><p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"pwrrjY\" data-default-tab=\"js\" data-user=\"hankewins\" data-embed-version=\"2\" data-pen-title=\"pwrrjY\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/hankewins/pen/pwrrjY/\" target=\"_blank\" rel=\"noopener\">pwrrjY</a> by hankewins (<a href=\"https://codepen.io/hankewins\" target=\"_blank\" rel=\"noopener\">@hankewins</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<p>LazyMan是一道javascript面试题，第一次听说LazyMan一词是与<a href=\"http://www.ing70.com/\" target=\"_blank\" rel=\"noopener\">ing70</a>聊天中获得，本文主要是说说自己的实现思路和方法。</p>\n<h3 id=\"题目如下：\"><a href=\"#题目如下：\" class=\"headerlink\" title=\"题目如下：\"></a>题目如下：</h3><p>实现一个LazyMan，可以按照以下方式调用:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LazyMan(&quot;Hank&quot;)输出:</span><br><span class=\"line\">Hi! This is Hank!</span><br><span class=\"line\"></span><br><span class=\"line\">LazyMan(&quot;Hank&quot;).sleep(10).eat(&quot;dinner&quot;)输出</span><br><span class=\"line\">Hi! This is Hank!</span><br><span class=\"line\">//等待10秒..</span><br><span class=\"line\">Wake up after 10</span><br><span class=\"line\">Eat dinner~</span><br><span class=\"line\"></span><br><span class=\"line\">LazyMan(&quot;Hank&quot;).eat(&quot;dinner&quot;).eat(&quot;supper&quot;)输出</span><br><span class=\"line\">Hi This is Hank!</span><br><span class=\"line\">Eat dinner~</span><br><span class=\"line\">Eat supper~</span><br><span class=\"line\"></span><br><span class=\"line\">LazyMan(&quot;Hank&quot;).sleepFirst(5).eat(&quot;supper&quot;)输出</span><br><span class=\"line\">//等待5秒</span><br><span class=\"line\">Wake up after 5</span><br><span class=\"line\">Hi This is Hank!</span><br><span class=\"line\">Eat supper</span><br></pre></td></tr></table></figure>\n<p>以此类推。</p>\n<h3 id=\"分析思路\"><a href=\"#分析思路\" class=\"headerlink\" title=\"分析思路\"></a>分析思路</h3><p>根据经验猜测此题可参考jQuery中<a href=\"http://api.jquery.com/delay/\" target=\"_blank\" rel=\"noopener\">delay()</a>、PHP中<a href=\"http://www.php.net/manual/en/function.sleep.php\" target=\"_blank\" rel=\"noopener\">sleep()</a>、<a href=\"http://www.expressjs.com.cn/4x/api.html\" target=\"_blank\" rel=\"noopener\">Express</a>中next()中间件等方法的实现原理。也是典型的JavaScript流程控制，因此问题的关键是如何实现任务的顺序执行。</p>\n<p>考查关键</p>\n<ul>\n<li>链式调用</li>\n<li>_next()流程控制</li>\n<li>定时器的使用(setTimeout)</li>\n<li>数组常用方法的掌握(pop、push、shift、unshift)</li>\n<li>代码的封装(类、构造函数、原型链等)</li>\n</ul>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(function()&#123;</span><br><span class=\"line\">    function LazyMan(name)&#123;</span><br><span class=\"line\">        var that = this;</span><br><span class=\"line\">        this._func = []; // 函数执行任务队列</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Hi! This is &apos; + this.name + &apos;!&apos;&#125;);</span><br><span class=\"line\">        // 下一次事件循环时执行</span><br><span class=\"line\">        setTimeout(function()&#123;</span><br><span class=\"line\">            that._next();</span><br><span class=\"line\">        &#125;,0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // _next维持任务队列中函数的执行</span><br><span class=\"line\">    LazyMan.prototype._next = function()&#123;</span><br><span class=\"line\">        var func = this._func.shift();</span><br><span class=\"line\">        func &amp;&amp; func();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // 添加任务到队列</span><br><span class=\"line\">    LazyMan.prototype._add = function(obj)&#123;</span><br><span class=\"line\">        var that = this;</span><br><span class=\"line\">        var fn = function()&#123;</span><br><span class=\"line\">            obj.info &amp;&amp; console.log(obj.info);</span><br><span class=\"line\">            if(obj.time &amp;&amp; obj.time &gt; 0)&#123;</span><br><span class=\"line\">                setTimeout(function()&#123;</span><br><span class=\"line\">                    that._next();</span><br><span class=\"line\">                &#125;, obj.time * 1000);</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                that._next();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        // 添加到队列末端</span><br><span class=\"line\">        !!obj.special == false &amp;&amp; this._func.push(fn);</span><br><span class=\"line\">        // 添加到队列前端</span><br><span class=\"line\">        !!obj.special == true &amp;&amp; this._func.unshift(fn);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    LazyMan.prototype.eat = function(shit)&#123;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Eat &apos; + shit + &apos;~&apos;&#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    LazyMan.prototype.sleep = function(time)&#123;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Wake up after &apos; + time, time: time, special: false&#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    LazyMan.prototype.sleepFirst = function(time)&#123;</span><br><span class=\"line\">        this._add(&#123;info: &apos;Wake up after &apos; + time, time: time, special: true&#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var _lazyMan = function(name)&#123;</span><br><span class=\"line\">        return new LazyMan(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    window.LazyMan = _lazyMan;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行结果（在线运行）\"><a href=\"#运行结果（在线运行）\" class=\"headerlink\" title=\"运行结果（在线运行）\"></a>运行结果（在线运行）</h3><p>请打开console控制台，查看运行结果。</p>\n<p></p><p data-height=\"265\" data-theme-id=\"0\" data-slug-hash=\"pwrrjY\" data-default-tab=\"js\" data-user=\"hankewins\" data-embed-version=\"2\" data-pen-title=\"pwrrjY\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/hankewins/pen/pwrrjY/\" target=\"_blank\" rel=\"noopener\">pwrrjY</a> by hankewins (<a href=\"https://codepen.io/hankewins\" target=\"_blank\" rel=\"noopener\">@hankewins</a>) on <a href=\"https://codepen.io\" target=\"_blank\" rel=\"noopener\">CodePen</a>.</p><p></p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n\n\n\n"},{"layout":"post","title":"如何正确的提交本地仓库到远程仓库","date":"2017-06-22T14:30:00.000Z","comments":1,"_content":"\n### 背景\n\n初始化一个本地仓库并添加一个新文件（README.md），然后将本地仓库上传。\n\n先 pull，因为两个项目不同，发现```refusing to merge unrelated histories```，无法合并。\n\n注：查看解决方法，请直接跳过操作过程。\n\n### 操作过程\n\n新建项目并初始化\n\n```\n$ mkdir -p learning/test // 新建一个项目目录\n$ cd learning/test // 进入项目目录\n$ git init // 初始化仓库\n```\n\n关联远程仓库\n\n```\n$ git remote add origin https://git.oschina.net/hankewins/test.git\n```\n查看仓库地址\n\n```\n$ git remote -v\norigin\thttps://git.oschina.net/hankewins/test.git (fetch)\norigin\thttps://git.oschina.net/hankewins/test.git (push)\n```\n\n本地添加README.md并提交\n\n```\n$ touch README.md\n$ git add README.md\n$ git commit -m '添加README.md'\n$ git push // 提示需设置push到远程仓库对应的分支\n```\n\ngit push不成功，按提示操作\n\n```\n$ $ git push --set-upstream origin master // 设置提交的分支\n$ git push // 继续推送\nTo https://git.oschina.net/hankewins/test.git\n ! [rejected]        master -> master (non-fast-forward)\nerror: failed to push some refs to 'https://git.oschina.net/hankewins/test.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n$ git pull // 拉取数据\n$ git branch --set-upstream-to=origin/master // 设置仓库分支\n$ git pull // 继续拉取数据\nfatal: refusing to merge unrelated histories // 提示合并pull两个不同的项目\n```\n\n### 原因\n\nfatal: refusing to merge unrelated histories\n\n当前模式下本地仓库与远程仓库是两个不同的项目，git pull 合并项目会提示相关信息，添加 --allow-unrelated-histories参数即可解决。\n\n### 解决\n\n```\n$ git pull origin master --allow-unrelated-histories\n```\n\n","source":"_posts/2017-06-22-git-FAQ-01.md","raw":"---\nlayout: post\ntitle: 如何正确的提交本地仓库到远程仓库\ndate: 2017-06-22 22:30\ncomments: true\ncategories: [git常见问题]\n---\n\n### 背景\n\n初始化一个本地仓库并添加一个新文件（README.md），然后将本地仓库上传。\n\n先 pull，因为两个项目不同，发现```refusing to merge unrelated histories```，无法合并。\n\n注：查看解决方法，请直接跳过操作过程。\n\n### 操作过程\n\n新建项目并初始化\n\n```\n$ mkdir -p learning/test // 新建一个项目目录\n$ cd learning/test // 进入项目目录\n$ git init // 初始化仓库\n```\n\n关联远程仓库\n\n```\n$ git remote add origin https://git.oschina.net/hankewins/test.git\n```\n查看仓库地址\n\n```\n$ git remote -v\norigin\thttps://git.oschina.net/hankewins/test.git (fetch)\norigin\thttps://git.oschina.net/hankewins/test.git (push)\n```\n\n本地添加README.md并提交\n\n```\n$ touch README.md\n$ git add README.md\n$ git commit -m '添加README.md'\n$ git push // 提示需设置push到远程仓库对应的分支\n```\n\ngit push不成功，按提示操作\n\n```\n$ $ git push --set-upstream origin master // 设置提交的分支\n$ git push // 继续推送\nTo https://git.oschina.net/hankewins/test.git\n ! [rejected]        master -> master (non-fast-forward)\nerror: failed to push some refs to 'https://git.oschina.net/hankewins/test.git'\nhint: Updates were rejected because the tip of your current branch is behind\nhint: its remote counterpart. Integrate the remote changes (e.g.\nhint: 'git pull ...') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n$ git pull // 拉取数据\n$ git branch --set-upstream-to=origin/master // 设置仓库分支\n$ git pull // 继续拉取数据\nfatal: refusing to merge unrelated histories // 提示合并pull两个不同的项目\n```\n\n### 原因\n\nfatal: refusing to merge unrelated histories\n\n当前模式下本地仓库与远程仓库是两个不同的项目，git pull 合并项目会提示相关信息，添加 --allow-unrelated-histories参数即可解决。\n\n### 解决\n\n```\n$ git pull origin master --allow-unrelated-histories\n```\n\n","slug":"git-FAQ-01","published":1,"updated":"2018-05-30T08:12:15.895Z","photos":[],"link":"","_id":"cjhubytlk003hyis50ecan56k","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>初始化一个本地仓库并添加一个新文件（README.md），然后将本地仓库上传。</p>\n<p>先 pull，因为两个项目不同，发现<figure class=\"highlight plain\"><figcaption><span>to merge unrelated histories```，无法合并。</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">注：查看解决方法，请直接跳过操作过程。</span><br><span class=\"line\"></span><br><span class=\"line\">### 操作过程</span><br><span class=\"line\"></span><br><span class=\"line\">新建项目并初始化</span><br></pre></td></tr></table></figure></p>\n<p>$ mkdir -p learning/test // 新建一个项目目录<br>$ cd learning/test // 进入项目目录<br>$ git init // 初始化仓库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">关联远程仓库</span><br></pre></td></tr></table></figure></p>\n<p>$ git remote add origin <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看仓库地址</span><br></pre></td></tr></table></figure></p>\n<p>$ git remote -v<br>origin    <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a> (fetch)<br>origin    <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a> (push)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">本地添加README.md并提交</span><br></pre></td></tr></table></figure></p>\n<p>$ touch README.md<br>$ git add README.md<br>$ git commit -m ‘添加README.md’<br>$ git push // 提示需设置push到远程仓库对应的分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git push不成功，按提示操作</span><br></pre></td></tr></table></figure></p>\n<p>$ $ git push –set-upstream origin master // 设置提交的分支<br>$ git push // 继续推送<br>To <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a><br> ! [rejected]        master -&gt; master (non-fast-forward)<br>error: failed to push some refs to ‘<a href=\"https://git.oschina.net/hankewins/test.git&#39;\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git&#39;</a><br>hint: Updates were rejected because the tip of your current branch is behind<br>hint: its remote counterpart. Integrate the remote changes (e.g.<br>hint: ‘git pull …’) before pushing again.<br>hint: See the ‘Note about fast-forwards’ in ‘git push –help’ for details.<br>$ git pull // 拉取数据<br>$ git branch –set-upstream-to=origin/master // 设置仓库分支<br>$ git pull // 继续拉取数据<br>fatal: refusing to merge unrelated histories // 提示合并pull两个不同的项目<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 原因</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: refusing to merge unrelated histories</span><br><span class=\"line\"></span><br><span class=\"line\">当前模式下本地仓库与远程仓库是两个不同的项目，git pull 合并项目会提示相关信息，添加 --allow-unrelated-histories参数即可解决。</span><br><span class=\"line\"></span><br><span class=\"line\">### 解决</span><br></pre></td></tr></table></figure></p>\n<p>$ git pull origin master –allow-unrelated-histories<br><code>`</code></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>初始化一个本地仓库并添加一个新文件（README.md），然后将本地仓库上传。</p>\n<p>先 pull，因为两个项目不同，发现<figure class=\"highlight plain\"><figcaption><span>to merge unrelated histories```，无法合并。</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">注：查看解决方法，请直接跳过操作过程。</span><br><span class=\"line\"></span><br><span class=\"line\">### 操作过程</span><br><span class=\"line\"></span><br><span class=\"line\">新建项目并初始化</span><br></pre></td></tr></table></figure></p>\n<p>$ mkdir -p learning/test // 新建一个项目目录<br>$ cd learning/test // 进入项目目录<br>$ git init // 初始化仓库<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">关联远程仓库</span><br></pre></td></tr></table></figure></p>\n<p>$ git remote add origin <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看仓库地址</span><br></pre></td></tr></table></figure></p>\n<p>$ git remote -v<br>origin    <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a> (fetch)<br>origin    <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a> (push)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">本地添加README.md并提交</span><br></pre></td></tr></table></figure></p>\n<p>$ touch README.md<br>$ git add README.md<br>$ git commit -m ‘添加README.md’<br>$ git push // 提示需设置push到远程仓库对应的分支<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git push不成功，按提示操作</span><br></pre></td></tr></table></figure></p>\n<p>$ $ git push –set-upstream origin master // 设置提交的分支<br>$ git push // 继续推送<br>To <a href=\"https://git.oschina.net/hankewins/test.git\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git</a><br> ! [rejected]        master -&gt; master (non-fast-forward)<br>error: failed to push some refs to ‘<a href=\"https://git.oschina.net/hankewins/test.git&#39;\" target=\"_blank\" rel=\"noopener\">https://git.oschina.net/hankewins/test.git&#39;</a><br>hint: Updates were rejected because the tip of your current branch is behind<br>hint: its remote counterpart. Integrate the remote changes (e.g.<br>hint: ‘git pull …’) before pushing again.<br>hint: See the ‘Note about fast-forwards’ in ‘git push –help’ for details.<br>$ git pull // 拉取数据<br>$ git branch –set-upstream-to=origin/master // 设置仓库分支<br>$ git pull // 继续拉取数据<br>fatal: refusing to merge unrelated histories // 提示合并pull两个不同的项目<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 原因</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: refusing to merge unrelated histories</span><br><span class=\"line\"></span><br><span class=\"line\">当前模式下本地仓库与远程仓库是两个不同的项目，git pull 合并项目会提示相关信息，添加 --allow-unrelated-histories参数即可解决。</span><br><span class=\"line\"></span><br><span class=\"line\">### 解决</span><br></pre></td></tr></table></figure></p>\n<p>$ git pull origin master –allow-unrelated-histories<br><code>`</code></p>\n"},{"layout":"post","title":"字母数字排序的sortX的实现","date":"2017-06-25T03:10:00.000Z","comments":1,"_content":"\n昨天和一个刚刚转前端的朋友聊天时，他说之前面试时有道javascript排序题思路不是很清楚，让我把这道题详细的讲解一下。本文主要是记录我的实现方法，欢迎大家一起讨论，如有更好的方法请给我留言。\n\n题目如下\n\n给定一个只包含大写字母和数字且无重复元素的混合数组，按照以下要求排序\n\n1. 字母按在字母表中的位置和数字从小到大排序\n2. 字母优化排在前面\n\n例如：\n\nsortX为该方法，则执行sortX([\"1\", \"A\", \"B\", \"4\", \"E\", \"C\", \"6\", \"7\"]);\n\n结果为：[\"A\", \"1\", \"B\", \"C\", \"4\", \"E\", \"6\", \"7\"]\n\n题目分析\n\n主要是查考对javascript基础知识的综合运用能力，主要考查点：\n\n1. 正则的使用\n2. 字符串的操作(split、replace)\n3. 数组的操作(join、splice、indexOf、push、sort)\n\n...\n\n方法实现\n\n```js\nvar arr = ['1', 'A', 'B', '4', 'E', 'C', '6', '7'];\nvar sortX = function(arr){\n\tvar letters = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n\tvar chars = []; // 存放数组中的字母\n\t// 将字母替换成数字并将数组按从小到大排序\n\tvar sorts = arr.join(',').replace(/([A-Z])/g, function($0, $1){\n\t\tvar index = letters.indexOf($1);\n\t\tchars.push($1);\n\t\treturn index + 1;\n\t}).split(',').sort(function(a,b){return a > b;});\n\t// 将字母替换排序后的数组中\n\tfor(var i = 0; i < chars.length; i++){\n\t\tvar index = letters.indexOf(chars[i]) + 1;\n\t\tvar start = sorts.indexOf(index.toString());\n\t\tsorts.splice(start, 1,chars[i]);\n\t}\n\n\treturn sorts;\n}\n\nconsole.log(sortX(arr));\n// [\"A\", \"1\", \"B\", \"C\", \"4\", \"E\", \"6\", \"7\"]\n```\n\n本题目可实现的方法很多，以上是我认为相对简单的一种实现方法，若你有更好的方法，欢迎给我留言^_^。\n\n\n","source":"_posts/2017-06-25-javascript-array-sortx.md","raw":"---\nlayout: post\ntitle: 字母数字排序的sortX的实现\ndate: 2017-06-25 11:10\ncomments: true\ncategories: [前端开发]\n---\n\n昨天和一个刚刚转前端的朋友聊天时，他说之前面试时有道javascript排序题思路不是很清楚，让我把这道题详细的讲解一下。本文主要是记录我的实现方法，欢迎大家一起讨论，如有更好的方法请给我留言。\n\n题目如下\n\n给定一个只包含大写字母和数字且无重复元素的混合数组，按照以下要求排序\n\n1. 字母按在字母表中的位置和数字从小到大排序\n2. 字母优化排在前面\n\n例如：\n\nsortX为该方法，则执行sortX([\"1\", \"A\", \"B\", \"4\", \"E\", \"C\", \"6\", \"7\"]);\n\n结果为：[\"A\", \"1\", \"B\", \"C\", \"4\", \"E\", \"6\", \"7\"]\n\n题目分析\n\n主要是查考对javascript基础知识的综合运用能力，主要考查点：\n\n1. 正则的使用\n2. 字符串的操作(split、replace)\n3. 数组的操作(join、splice、indexOf、push、sort)\n\n...\n\n方法实现\n\n```js\nvar arr = ['1', 'A', 'B', '4', 'E', 'C', '6', '7'];\nvar sortX = function(arr){\n\tvar letters = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n\tvar chars = []; // 存放数组中的字母\n\t// 将字母替换成数字并将数组按从小到大排序\n\tvar sorts = arr.join(',').replace(/([A-Z])/g, function($0, $1){\n\t\tvar index = letters.indexOf($1);\n\t\tchars.push($1);\n\t\treturn index + 1;\n\t}).split(',').sort(function(a,b){return a > b;});\n\t// 将字母替换排序后的数组中\n\tfor(var i = 0; i < chars.length; i++){\n\t\tvar index = letters.indexOf(chars[i]) + 1;\n\t\tvar start = sorts.indexOf(index.toString());\n\t\tsorts.splice(start, 1,chars[i]);\n\t}\n\n\treturn sorts;\n}\n\nconsole.log(sortX(arr));\n// [\"A\", \"1\", \"B\", \"C\", \"4\", \"E\", \"6\", \"7\"]\n```\n\n本题目可实现的方法很多，以上是我认为相对简单的一种实现方法，若你有更好的方法，欢迎给我留言^_^。\n\n\n","slug":"javascript-array-sortx","published":1,"updated":"2018-05-30T08:12:15.896Z","photos":[],"link":"","_id":"cjhubytll003jyis5uctnqtz3","content":"<p>昨天和一个刚刚转前端的朋友聊天时，他说之前面试时有道javascript排序题思路不是很清楚，让我把这道题详细的讲解一下。本文主要是记录我的实现方法，欢迎大家一起讨论，如有更好的方法请给我留言。</p>\n<p>题目如下</p>\n<p>给定一个只包含大写字母和数字且无重复元素的混合数组，按照以下要求排序</p>\n<ol>\n<li>字母按在字母表中的位置和数字从小到大排序</li>\n<li>字母优化排在前面</li>\n</ol>\n<p>例如：</p>\n<p>sortX为该方法，则执行sortX([“1”, “A”, “B”, “4”, “E”, “C”, “6”, “7”]);</p>\n<p>结果为：[“A”, “1”, “B”, “C”, “4”, “E”, “6”, “7”]</p>\n<p>题目分析</p>\n<p>主要是查考对javascript基础知识的综合运用能力，主要考查点：</p>\n<ol>\n<li>正则的使用</li>\n<li>字符串的操作(split、replace)</li>\n<li>数组的操作(join、splice、indexOf、push、sort)</li>\n</ol>\n<p>…</p>\n<p>方法实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'1'</span>, <span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'4'</span>, <span class=\"string\">'E'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'6'</span>, <span class=\"string\">'7'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sortX = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> letters = [<span class=\"string\">'A'</span>,<span class=\"string\">'B'</span>,<span class=\"string\">'C'</span>,<span class=\"string\">'D'</span>,<span class=\"string\">'E'</span>,<span class=\"string\">'F'</span>,<span class=\"string\">'G'</span>,<span class=\"string\">'H'</span>,<span class=\"string\">'I'</span>,<span class=\"string\">'J'</span>,<span class=\"string\">'K'</span>,<span class=\"string\">'L'</span>,<span class=\"string\">'M'</span>,<span class=\"string\">'N'</span>,<span class=\"string\">'O'</span>,<span class=\"string\">'P'</span>,<span class=\"string\">'Q'</span>,<span class=\"string\">'R'</span>,<span class=\"string\">'S'</span>,<span class=\"string\">'T'</span>,<span class=\"string\">'U'</span>,<span class=\"string\">'V'</span>,<span class=\"string\">'W'</span>,<span class=\"string\">'X'</span>,<span class=\"string\">'Y'</span>,<span class=\"string\">'Z'</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> chars = []; <span class=\"comment\">// 存放数组中的字母</span></span><br><span class=\"line\">\t<span class=\"comment\">// 将字母替换成数字并将数组按从小到大排序</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> sorts = arr.join(<span class=\"string\">','</span>).replace(<span class=\"regexp\">/([A-Z])/g</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$<span class=\"number\">0</span>, $<span class=\"number\">1</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> index = letters.indexOf($<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tchars.push($<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> index + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;).split(<span class=\"string\">','</span>).sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;<span class=\"keyword\">return</span> a &gt; b;&#125;);</span><br><span class=\"line\">\t<span class=\"comment\">// 将字母替换排序后的数组中</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; chars.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> index = letters.indexOf(chars[i]) + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> start = sorts.indexOf(index.toString());</span><br><span class=\"line\">\t\tsorts.splice(start, <span class=\"number\">1</span>,chars[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sorts;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sortX(arr));</span><br><span class=\"line\"><span class=\"comment\">// [\"A\", \"1\", \"B\", \"C\", \"4\", \"E\", \"6\", \"7\"]</span></span><br></pre></td></tr></table></figure>\n<p>本题目可实现的方法很多，以上是我认为相对简单的一种实现方法，若你有更好的方法，欢迎给我留言^_^。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天和一个刚刚转前端的朋友聊天时，他说之前面试时有道javascript排序题思路不是很清楚，让我把这道题详细的讲解一下。本文主要是记录我的实现方法，欢迎大家一起讨论，如有更好的方法请给我留言。</p>\n<p>题目如下</p>\n<p>给定一个只包含大写字母和数字且无重复元素的混合数组，按照以下要求排序</p>\n<ol>\n<li>字母按在字母表中的位置和数字从小到大排序</li>\n<li>字母优化排在前面</li>\n</ol>\n<p>例如：</p>\n<p>sortX为该方法，则执行sortX([“1”, “A”, “B”, “4”, “E”, “C”, “6”, “7”]);</p>\n<p>结果为：[“A”, “1”, “B”, “C”, “4”, “E”, “6”, “7”]</p>\n<p>题目分析</p>\n<p>主要是查考对javascript基础知识的综合运用能力，主要考查点：</p>\n<ol>\n<li>正则的使用</li>\n<li>字符串的操作(split、replace)</li>\n<li>数组的操作(join、splice、indexOf、push、sort)</li>\n</ol>\n<p>…</p>\n<p>方法实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'1'</span>, <span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'4'</span>, <span class=\"string\">'E'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'6'</span>, <span class=\"string\">'7'</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> sortX = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> letters = [<span class=\"string\">'A'</span>,<span class=\"string\">'B'</span>,<span class=\"string\">'C'</span>,<span class=\"string\">'D'</span>,<span class=\"string\">'E'</span>,<span class=\"string\">'F'</span>,<span class=\"string\">'G'</span>,<span class=\"string\">'H'</span>,<span class=\"string\">'I'</span>,<span class=\"string\">'J'</span>,<span class=\"string\">'K'</span>,<span class=\"string\">'L'</span>,<span class=\"string\">'M'</span>,<span class=\"string\">'N'</span>,<span class=\"string\">'O'</span>,<span class=\"string\">'P'</span>,<span class=\"string\">'Q'</span>,<span class=\"string\">'R'</span>,<span class=\"string\">'S'</span>,<span class=\"string\">'T'</span>,<span class=\"string\">'U'</span>,<span class=\"string\">'V'</span>,<span class=\"string\">'W'</span>,<span class=\"string\">'X'</span>,<span class=\"string\">'Y'</span>,<span class=\"string\">'Z'</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> chars = []; <span class=\"comment\">// 存放数组中的字母</span></span><br><span class=\"line\">\t<span class=\"comment\">// 将字母替换成数字并将数组按从小到大排序</span></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> sorts = arr.join(<span class=\"string\">','</span>).replace(<span class=\"regexp\">/([A-Z])/g</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$<span class=\"number\">0</span>, $<span class=\"number\">1</span></span>)</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> index = letters.indexOf($<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tchars.push($<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> index + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;).split(<span class=\"string\">','</span>).sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123;<span class=\"keyword\">return</span> a &gt; b;&#125;);</span><br><span class=\"line\">\t<span class=\"comment\">// 将字母替换排序后的数组中</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; chars.length; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> index = letters.indexOf(chars[i]) + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> start = sorts.indexOf(index.toString());</span><br><span class=\"line\">\t\tsorts.splice(start, <span class=\"number\">1</span>,chars[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sorts;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sortX(arr));</span><br><span class=\"line\"><span class=\"comment\">// [\"A\", \"1\", \"B\", \"C\", \"4\", \"E\", \"6\", \"7\"]</span></span><br></pre></td></tr></table></figure>\n<p>本题目可实现的方法很多，以上是我认为相对简单的一种实现方法，若你有更好的方法，欢迎给我留言^_^。</p>\n"},{"layout":"post","title":"聚是一团火，散是满天星 -- 新起点","date":"2017-06-27T15:20:00.000Z","comments":1,"_content":"\n时光的流逝总是在最后那一刻触发心灵最深处的情感，用友-深圳创新中心是梦想与激情的交汇点；是0到1的磨练经历；是一段充实、挑战、愉快的蜕变过程；也是一次过山车的体验（难忘的经历）。\n\n......\n\n## 最后\n\n“聚是一团火，散是满天星” --- 经历风雨，总能见彩虹！","source":"_posts/2017-06-27-2017-new-starting-point.md","raw":"---\nlayout: post\ntitle: 聚是一团火，散是满天星 -- 新起点\ndate: 2017-06-27 23:20\ncomments: true\ncategories: [水]\n---\n\n时光的流逝总是在最后那一刻触发心灵最深处的情感，用友-深圳创新中心是梦想与激情的交汇点；是0到1的磨练经历；是一段充实、挑战、愉快的蜕变过程；也是一次过山车的体验（难忘的经历）。\n\n......\n\n## 最后\n\n“聚是一团火，散是满天星” --- 经历风雨，总能见彩虹！","slug":"2017-new-starting-point","published":1,"updated":"2018-05-30T08:12:15.897Z","photos":[],"link":"","_id":"cjhubytlm003myis5q1m6golq","content":"<p>时光的流逝总是在最后那一刻触发心灵最深处的情感，用友-深圳创新中心是梦想与激情的交汇点；是0到1的磨练经历；是一段充实、挑战、愉快的蜕变过程；也是一次过山车的体验（难忘的经历）。</p>\n<p>……</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>“聚是一团火，散是满天星” — 经历风雨，总能见彩虹！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>时光的流逝总是在最后那一刻触发心灵最深处的情感，用友-深圳创新中心是梦想与激情的交汇点；是0到1的磨练经历；是一段充实、挑战、愉快的蜕变过程；也是一次过山车的体验（难忘的经历）。</p>\n<p>……</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>“聚是一团火，散是满天星” — 经历风雨，总能见彩虹！</p>\n"},{"layout":"post","title":"Git Flow最流行的代码管理模型","date":"2017-06-28T03:20:00.000Z","comments":1,"_content":"\n工作至今前前后后也用过了不少版本管理系统例如：[CVS](http://www.tortoisecvs.org/)、[SVN](https://tortoisesvn.net/)、[Mercurial](https://www.mercurial-scm.org/)、[GIT](https://git-scm.com/)等，受硬性条件和软性条件因素的影响，不同团队会选择最适合自身的版本管理系统。在这篇文章中主要是介绍互联网型团队（敏捷型团队）中最常用的研发管理体系（[gitlab](https://about.gitlab.com/) + [git](https://git-scm.com/) + [jira](https://www.atlassian.com/software/jira) or [redmine](http://www.redmine.org/)）中的代码分支管理流程 -- Git Flow模型。\n\n### Git Flow 是什么\n\nGit Flow是构建在Git之上的一个组织软件开发活动的模型，是在Git之上构建的一项软件开发最佳实践。Git Flow是一套使用Git进行源代码管理时的一套行为规范和简化部分Git操作的工具。\n\n2010年5月，在一篇名为“[一种成功的Git分支模型](http://nvie.com/posts/a-successful-git-branching-model/)”的博文中，@nvie介绍了一种在Git之上的软件开发模型。通过利用Git创建和管理分支的能力，为每个分支设定具有特定的含义名称，并将软件生命周期中的各类活动归并到不同的分支上。实现了软件开发过程不同操作的相互隔离。这种软件开发的活动模型被nvie称为“Git Flow”。\n\n一般而言，软件开发模型有常见的瀑布模型、迭代开发模型、以及最近出现的敏捷开发模型等不同的模型。每种模型有各自应用场景。Git Flow重点解决的是由于源代码在开发过程中的各种冲突导致开发活动混乱的问题。因此，Git Flow可以很好的于各种现有开发模型相结合使用。\n\n在开始研究Git Flow的具体内容前，下面这张图可以看到模型的全貌（引自nvie的[博文](http://nvie.com/posts/a-successful-git-branching-model/))：\n\n![Git Flow 流程示意图](http://nvie.com/img/git-model@2x.png)\n\n### Git Flow中的分支\n\n主分支\n\n对稳定运行的版本进行管理（Tag标记），当运行版本出现bug则采用hotfix分支管理方式进行修复。\n\n```\nmaster\n```\n\n开发分支\n\n本地开发环境的主线版本，当有预研功能需求或指定模块优化需求时需采用feature分支管理方式进行处理。\n\n```\ndevelop\n```\n\n特性分支或功能分支\n\n主要是针对会影响开发主线版本的功能进行管理，功能开发完后需合并到develop分支。\n\n```\nfeature\n```\n\n验证分支或测试分支\n\n迭代需求在develop分支上开发完成以及开发自测完成后提交全面测试时新建release分支（Tag标记），测试通过后走master分支进行管理否则走develop分支进行管理。所有操作完成后需移除release分支。\n\n```\nrelease\n```\n\n热修复分支\n\nmaster分支运行的版本存在bug时需紧急修复时新建hotfix，修复完成后需合并到devlop和master(Tag标记)，最后移除hotfix分支\n\n```\nhotfix\n```\n\n以上是一个简版的Git Flow分支的描述，想详细了解Git Flow请[点击这里](http://www.ituring.com.cn/article/56870)。\n\n### 参考来源\n- [Git版本控制与工作流](http://www.techug.com/post/git-2.html)\n- [基于git的源代码管理模型——git flow](http://www.ituring.com.cn/article/56870)\n- [一种成功的Git分支模型](http://nvie.com/posts/a-successful-git-branching-model/)\n- [Git 和 SVN 之间的五个基本区别](http://blog.jobbole.com/31444/)\n","source":"_posts/2017-06-28-git-flow-code-mamagement.md","raw":"---\nlayout: post\ntitle: Git Flow最流行的代码管理模型\ndate: 2017-06-28 11:20\ncomments: true\ncategories: [研发管理]\n---\n\n工作至今前前后后也用过了不少版本管理系统例如：[CVS](http://www.tortoisecvs.org/)、[SVN](https://tortoisesvn.net/)、[Mercurial](https://www.mercurial-scm.org/)、[GIT](https://git-scm.com/)等，受硬性条件和软性条件因素的影响，不同团队会选择最适合自身的版本管理系统。在这篇文章中主要是介绍互联网型团队（敏捷型团队）中最常用的研发管理体系（[gitlab](https://about.gitlab.com/) + [git](https://git-scm.com/) + [jira](https://www.atlassian.com/software/jira) or [redmine](http://www.redmine.org/)）中的代码分支管理流程 -- Git Flow模型。\n\n### Git Flow 是什么\n\nGit Flow是构建在Git之上的一个组织软件开发活动的模型，是在Git之上构建的一项软件开发最佳实践。Git Flow是一套使用Git进行源代码管理时的一套行为规范和简化部分Git操作的工具。\n\n2010年5月，在一篇名为“[一种成功的Git分支模型](http://nvie.com/posts/a-successful-git-branching-model/)”的博文中，@nvie介绍了一种在Git之上的软件开发模型。通过利用Git创建和管理分支的能力，为每个分支设定具有特定的含义名称，并将软件生命周期中的各类活动归并到不同的分支上。实现了软件开发过程不同操作的相互隔离。这种软件开发的活动模型被nvie称为“Git Flow”。\n\n一般而言，软件开发模型有常见的瀑布模型、迭代开发模型、以及最近出现的敏捷开发模型等不同的模型。每种模型有各自应用场景。Git Flow重点解决的是由于源代码在开发过程中的各种冲突导致开发活动混乱的问题。因此，Git Flow可以很好的于各种现有开发模型相结合使用。\n\n在开始研究Git Flow的具体内容前，下面这张图可以看到模型的全貌（引自nvie的[博文](http://nvie.com/posts/a-successful-git-branching-model/))：\n\n![Git Flow 流程示意图](http://nvie.com/img/git-model@2x.png)\n\n### Git Flow中的分支\n\n主分支\n\n对稳定运行的版本进行管理（Tag标记），当运行版本出现bug则采用hotfix分支管理方式进行修复。\n\n```\nmaster\n```\n\n开发分支\n\n本地开发环境的主线版本，当有预研功能需求或指定模块优化需求时需采用feature分支管理方式进行处理。\n\n```\ndevelop\n```\n\n特性分支或功能分支\n\n主要是针对会影响开发主线版本的功能进行管理，功能开发完后需合并到develop分支。\n\n```\nfeature\n```\n\n验证分支或测试分支\n\n迭代需求在develop分支上开发完成以及开发自测完成后提交全面测试时新建release分支（Tag标记），测试通过后走master分支进行管理否则走develop分支进行管理。所有操作完成后需移除release分支。\n\n```\nrelease\n```\n\n热修复分支\n\nmaster分支运行的版本存在bug时需紧急修复时新建hotfix，修复完成后需合并到devlop和master(Tag标记)，最后移除hotfix分支\n\n```\nhotfix\n```\n\n以上是一个简版的Git Flow分支的描述，想详细了解Git Flow请[点击这里](http://www.ituring.com.cn/article/56870)。\n\n### 参考来源\n- [Git版本控制与工作流](http://www.techug.com/post/git-2.html)\n- [基于git的源代码管理模型——git flow](http://www.ituring.com.cn/article/56870)\n- [一种成功的Git分支模型](http://nvie.com/posts/a-successful-git-branching-model/)\n- [Git 和 SVN 之间的五个基本区别](http://blog.jobbole.com/31444/)\n","slug":"git-flow-code-mamagement","published":1,"updated":"2018-05-30T08:12:15.899Z","photos":[],"link":"","_id":"cjhubytln003oyis53phs8cn5","content":"<p>工作至今前前后后也用过了不少版本管理系统例如：<a href=\"http://www.tortoisecvs.org/\" target=\"_blank\" rel=\"noopener\">CVS</a>、<a href=\"https://tortoisesvn.net/\" target=\"_blank\" rel=\"noopener\">SVN</a>、<a href=\"https://www.mercurial-scm.org/\" target=\"_blank\" rel=\"noopener\">Mercurial</a>、<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">GIT</a>等，受硬性条件和软性条件因素的影响，不同团队会选择最适合自身的版本管理系统。在这篇文章中主要是介绍互联网型团队（敏捷型团队）中最常用的研发管理体系（<a href=\"https://about.gitlab.com/\" target=\"_blank\" rel=\"noopener\">gitlab</a> + <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">git</a> + <a href=\"https://www.atlassian.com/software/jira\" target=\"_blank\" rel=\"noopener\">jira</a> or <a href=\"http://www.redmine.org/\" target=\"_blank\" rel=\"noopener\">redmine</a>）中的代码分支管理流程 – Git Flow模型。</p>\n<h3 id=\"Git-Flow-是什么\"><a href=\"#Git-Flow-是什么\" class=\"headerlink\" title=\"Git Flow 是什么\"></a>Git Flow 是什么</h3><p>Git Flow是构建在Git之上的一个组织软件开发活动的模型，是在Git之上构建的一项软件开发最佳实践。Git Flow是一套使用Git进行源代码管理时的一套行为规范和简化部分Git操作的工具。</p>\n<p>2010年5月，在一篇名为“<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">一种成功的Git分支模型</a>”的博文中，@nvie介绍了一种在Git之上的软件开发模型。通过利用Git创建和管理分支的能力，为每个分支设定具有特定的含义名称，并将软件生命周期中的各类活动归并到不同的分支上。实现了软件开发过程不同操作的相互隔离。这种软件开发的活动模型被nvie称为“Git Flow”。</p>\n<p>一般而言，软件开发模型有常见的瀑布模型、迭代开发模型、以及最近出现的敏捷开发模型等不同的模型。每种模型有各自应用场景。Git Flow重点解决的是由于源代码在开发过程中的各种冲突导致开发活动混乱的问题。因此，Git Flow可以很好的于各种现有开发模型相结合使用。</p>\n<p>在开始研究Git Flow的具体内容前，下面这张图可以看到模型的全貌（引自nvie的<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">博文</a>)：</p>\n<p><img src=\"http://nvie.com/img/git-model@2x.png\" alt=\"Git Flow 流程示意图\"></p>\n<h3 id=\"Git-Flow中的分支\"><a href=\"#Git-Flow中的分支\" class=\"headerlink\" title=\"Git Flow中的分支\"></a>Git Flow中的分支</h3><p>主分支</p>\n<p>对稳定运行的版本进行管理（Tag标记），当运行版本出现bug则采用hotfix分支管理方式进行修复。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">master</span><br></pre></td></tr></table></figure>\n<p>开发分支</p>\n<p>本地开发环境的主线版本，当有预研功能需求或指定模块优化需求时需采用feature分支管理方式进行处理。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">develop</span><br></pre></td></tr></table></figure>\n<p>特性分支或功能分支</p>\n<p>主要是针对会影响开发主线版本的功能进行管理，功能开发完后需合并到develop分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature</span><br></pre></td></tr></table></figure>\n<p>验证分支或测试分支</p>\n<p>迭代需求在develop分支上开发完成以及开发自测完成后提交全面测试时新建release分支（Tag标记），测试通过后走master分支进行管理否则走develop分支进行管理。所有操作完成后需移除release分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">release</span><br></pre></td></tr></table></figure>\n<p>热修复分支</p>\n<p>master分支运行的版本存在bug时需紧急修复时新建hotfix，修复完成后需合并到devlop和master(Tag标记)，最后移除hotfix分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hotfix</span><br></pre></td></tr></table></figure>\n<p>以上是一个简版的Git Flow分支的描述，想详细了解Git Flow请<a href=\"http://www.ituring.com.cn/article/56870\" target=\"_blank\" rel=\"noopener\">点击这里</a>。</p>\n<h3 id=\"参考来源\"><a href=\"#参考来源\" class=\"headerlink\" title=\"参考来源\"></a>参考来源</h3><ul>\n<li><a href=\"http://www.techug.com/post/git-2.html\" target=\"_blank\" rel=\"noopener\">Git版本控制与工作流</a></li>\n<li><a href=\"http://www.ituring.com.cn/article/56870\" target=\"_blank\" rel=\"noopener\">基于git的源代码管理模型——git flow</a></li>\n<li><a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">一种成功的Git分支模型</a></li>\n<li><a href=\"http://blog.jobbole.com/31444/\" target=\"_blank\" rel=\"noopener\">Git 和 SVN 之间的五个基本区别</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>工作至今前前后后也用过了不少版本管理系统例如：<a href=\"http://www.tortoisecvs.org/\" target=\"_blank\" rel=\"noopener\">CVS</a>、<a href=\"https://tortoisesvn.net/\" target=\"_blank\" rel=\"noopener\">SVN</a>、<a href=\"https://www.mercurial-scm.org/\" target=\"_blank\" rel=\"noopener\">Mercurial</a>、<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">GIT</a>等，受硬性条件和软性条件因素的影响，不同团队会选择最适合自身的版本管理系统。在这篇文章中主要是介绍互联网型团队（敏捷型团队）中最常用的研发管理体系（<a href=\"https://about.gitlab.com/\" target=\"_blank\" rel=\"noopener\">gitlab</a> + <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">git</a> + <a href=\"https://www.atlassian.com/software/jira\" target=\"_blank\" rel=\"noopener\">jira</a> or <a href=\"http://www.redmine.org/\" target=\"_blank\" rel=\"noopener\">redmine</a>）中的代码分支管理流程 – Git Flow模型。</p>\n<h3 id=\"Git-Flow-是什么\"><a href=\"#Git-Flow-是什么\" class=\"headerlink\" title=\"Git Flow 是什么\"></a>Git Flow 是什么</h3><p>Git Flow是构建在Git之上的一个组织软件开发活动的模型，是在Git之上构建的一项软件开发最佳实践。Git Flow是一套使用Git进行源代码管理时的一套行为规范和简化部分Git操作的工具。</p>\n<p>2010年5月，在一篇名为“<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">一种成功的Git分支模型</a>”的博文中，@nvie介绍了一种在Git之上的软件开发模型。通过利用Git创建和管理分支的能力，为每个分支设定具有特定的含义名称，并将软件生命周期中的各类活动归并到不同的分支上。实现了软件开发过程不同操作的相互隔离。这种软件开发的活动模型被nvie称为“Git Flow”。</p>\n<p>一般而言，软件开发模型有常见的瀑布模型、迭代开发模型、以及最近出现的敏捷开发模型等不同的模型。每种模型有各自应用场景。Git Flow重点解决的是由于源代码在开发过程中的各种冲突导致开发活动混乱的问题。因此，Git Flow可以很好的于各种现有开发模型相结合使用。</p>\n<p>在开始研究Git Flow的具体内容前，下面这张图可以看到模型的全貌（引自nvie的<a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">博文</a>)：</p>\n<p><img src=\"http://nvie.com/img/git-model@2x.png\" alt=\"Git Flow 流程示意图\"></p>\n<h3 id=\"Git-Flow中的分支\"><a href=\"#Git-Flow中的分支\" class=\"headerlink\" title=\"Git Flow中的分支\"></a>Git Flow中的分支</h3><p>主分支</p>\n<p>对稳定运行的版本进行管理（Tag标记），当运行版本出现bug则采用hotfix分支管理方式进行修复。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">master</span><br></pre></td></tr></table></figure>\n<p>开发分支</p>\n<p>本地开发环境的主线版本，当有预研功能需求或指定模块优化需求时需采用feature分支管理方式进行处理。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">develop</span><br></pre></td></tr></table></figure>\n<p>特性分支或功能分支</p>\n<p>主要是针对会影响开发主线版本的功能进行管理，功能开发完后需合并到develop分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature</span><br></pre></td></tr></table></figure>\n<p>验证分支或测试分支</p>\n<p>迭代需求在develop分支上开发完成以及开发自测完成后提交全面测试时新建release分支（Tag标记），测试通过后走master分支进行管理否则走develop分支进行管理。所有操作完成后需移除release分支。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">release</span><br></pre></td></tr></table></figure>\n<p>热修复分支</p>\n<p>master分支运行的版本存在bug时需紧急修复时新建hotfix，修复完成后需合并到devlop和master(Tag标记)，最后移除hotfix分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hotfix</span><br></pre></td></tr></table></figure>\n<p>以上是一个简版的Git Flow分支的描述，想详细了解Git Flow请<a href=\"http://www.ituring.com.cn/article/56870\" target=\"_blank\" rel=\"noopener\">点击这里</a>。</p>\n<h3 id=\"参考来源\"><a href=\"#参考来源\" class=\"headerlink\" title=\"参考来源\"></a>参考来源</h3><ul>\n<li><a href=\"http://www.techug.com/post/git-2.html\" target=\"_blank\" rel=\"noopener\">Git版本控制与工作流</a></li>\n<li><a href=\"http://www.ituring.com.cn/article/56870\" target=\"_blank\" rel=\"noopener\">基于git的源代码管理模型——git flow</a></li>\n<li><a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"noopener\">一种成功的Git分支模型</a></li>\n<li><a href=\"http://blog.jobbole.com/31444/\" target=\"_blank\" rel=\"noopener\">Git 和 SVN 之间的五个基本区别</a></li>\n</ul>\n"},{"layout":"post","title":"再谈async和defer的区别","date":"2017-06-28T03:20:00.000Z","comments":1,"_content":"\n我们常用的script标签有两个和性能、js脚本文件下载执行相关的属性:``async``和``defer``\n\nasync的含义【摘自[https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)】\n\n该布尔属性指示浏览器是否在允许的情况下异步执行该脚本。该属性对于内联脚本无作用 (即没有src属性的脚本）\n\ndefer的含义【摘自[https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)】\n\n这个布尔属性定义该脚本是否会延迟到文档解析完毕后才执行。\n\n### async\n\n对于async，相信前端开发的小伙伴们都非常熟悉，很容易让人想到异步处理、非阻塞I/O等场景。在这里async是HTML5 script标签中新增的属性，它的作用是能够异步的加载和执行脚本，不因加载脚本而阻塞页面的加载，一旦加载到就会立即执行。下面让我们一起先看看两个demo：\n\n- [without async](/demo/js-without-async.html)\n- [with async](/demo/js-with-async.html)\n\n简单介绍一下这个demo，一共引用了3个js，1.js和2.js是两个正常的脚本文件，sleep.js是一个延迟5s后执行的阻塞脚本文件。现在我们假设一个场景，一个页面中同时按顺序引入以上3个js脚本文件(1.js、sleep.js、2.js)，现我们希望1.js脚本文件内容执行完后立即执行2.js脚本文件内容，最后执行sleep.js脚本文件内容，应该如何操作？\n\n下面我们一起看看script标签未指定async属性和指定async属性的前后效果：\n\n1. 未给script标签添加async属性时，正常引入3个js文件，脚本执行效果如下：\n\n![js-without-async](/demo/pic/js-without-async.png)\n\n\n2. 当给script标签中引入sleep.js文件行添加async属性后，页面的脚本执行效果如下：\n\n![js-with-async](/demo/pic/js-with-async.png)\n\n### defer\n\n对于defer，估计“时尚”的前端小同伴可能已经不在使用喽，这个功能还未被所有主流浏览器支持，早期主要是IE内核版本支持，[查看详细](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)b了解更多。在这里defer是早期script标签中的属性，它的作用是延迟执行脚本直到文档解析完毕后才执行。下面让我们一起先看看两个demo:\n\n- [without defer](/demo/js-without-defer.html)\n- [with defer](/demo/js-with-defer.html)\n\n效果同上。\n\n注：可以通过打开浏览器调试工具，查看脚本加载和执行详细过程。\n\n### 总结\n\n1. 考虑到兼容性，针对低版本浏览器推荐script标签中同时添加async和defer属性\n2. 不考虑兼容性，针对主流浏览器推荐script标签中使用async属性\n3. 推荐脚本文件在文档的底部引入\n\n### 参考\n\n- [携程ued解读defer和async的区别](http://ued.ctrip.com/blog/script-defer-and-async.html)\n- [MDN中文文档](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)\n\n","source":"_posts/2017-07-07-async-and-defer-diff.md","raw":"---\nlayout: post\ntitle: 再谈async和defer的区别\ndate: 2017-06-28 11:20\ncomments: true\ncategories: [前端开发]\n---\n\n我们常用的script标签有两个和性能、js脚本文件下载执行相关的属性:``async``和``defer``\n\nasync的含义【摘自[https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)】\n\n该布尔属性指示浏览器是否在允许的情况下异步执行该脚本。该属性对于内联脚本无作用 (即没有src属性的脚本）\n\ndefer的含义【摘自[https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)】\n\n这个布尔属性定义该脚本是否会延迟到文档解析完毕后才执行。\n\n### async\n\n对于async，相信前端开发的小伙伴们都非常熟悉，很容易让人想到异步处理、非阻塞I/O等场景。在这里async是HTML5 script标签中新增的属性，它的作用是能够异步的加载和执行脚本，不因加载脚本而阻塞页面的加载，一旦加载到就会立即执行。下面让我们一起先看看两个demo：\n\n- [without async](/demo/js-without-async.html)\n- [with async](/demo/js-with-async.html)\n\n简单介绍一下这个demo，一共引用了3个js，1.js和2.js是两个正常的脚本文件，sleep.js是一个延迟5s后执行的阻塞脚本文件。现在我们假设一个场景，一个页面中同时按顺序引入以上3个js脚本文件(1.js、sleep.js、2.js)，现我们希望1.js脚本文件内容执行完后立即执行2.js脚本文件内容，最后执行sleep.js脚本文件内容，应该如何操作？\n\n下面我们一起看看script标签未指定async属性和指定async属性的前后效果：\n\n1. 未给script标签添加async属性时，正常引入3个js文件，脚本执行效果如下：\n\n![js-without-async](/demo/pic/js-without-async.png)\n\n\n2. 当给script标签中引入sleep.js文件行添加async属性后，页面的脚本执行效果如下：\n\n![js-with-async](/demo/pic/js-with-async.png)\n\n### defer\n\n对于defer，估计“时尚”的前端小同伴可能已经不在使用喽，这个功能还未被所有主流浏览器支持，早期主要是IE内核版本支持，[查看详细](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)b了解更多。在这里defer是早期script标签中的属性，它的作用是延迟执行脚本直到文档解析完毕后才执行。下面让我们一起先看看两个demo:\n\n- [without defer](/demo/js-without-defer.html)\n- [with defer](/demo/js-with-defer.html)\n\n效果同上。\n\n注：可以通过打开浏览器调试工具，查看脚本加载和执行详细过程。\n\n### 总结\n\n1. 考虑到兼容性，针对低版本浏览器推荐script标签中同时添加async和defer属性\n2. 不考虑兼容性，针对主流浏览器推荐script标签中使用async属性\n3. 推荐脚本文件在文档的底部引入\n\n### 参考\n\n- [携程ued解读defer和async的区别](http://ued.ctrip.com/blog/script-defer-and-async.html)\n- [MDN中文文档](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script)\n\n","slug":"async-and-defer-diff","published":1,"updated":"2018-05-30T08:12:15.900Z","photos":[],"link":"","_id":"cjhubytlp003qyis54cp8fi44","content":"<p>我们常用的script标签有两个和性能、js脚本文件下载执行相关的属性:<code>async</code>和<code>defer</code></p>\n<p>async的含义【摘自<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script</a>】</p>\n<p>该布尔属性指示浏览器是否在允许的情况下异步执行该脚本。该属性对于内联脚本无作用 (即没有src属性的脚本）</p>\n<p>defer的含义【摘自<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script</a>】</p>\n<p>这个布尔属性定义该脚本是否会延迟到文档解析完毕后才执行。</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>对于async，相信前端开发的小伙伴们都非常熟悉，很容易让人想到异步处理、非阻塞I/O等场景。在这里async是HTML5 script标签中新增的属性，它的作用是能够异步的加载和执行脚本，不因加载脚本而阻塞页面的加载，一旦加载到就会立即执行。下面让我们一起先看看两个demo：</p>\n<ul>\n<li><a href=\"/demo/js-without-async.html\">without async</a></li>\n<li><a href=\"/demo/js-with-async.html\">with async</a></li>\n</ul>\n<p>简单介绍一下这个demo，一共引用了3个js，1.js和2.js是两个正常的脚本文件，sleep.js是一个延迟5s后执行的阻塞脚本文件。现在我们假设一个场景，一个页面中同时按顺序引入以上3个js脚本文件(1.js、sleep.js、2.js)，现我们希望1.js脚本文件内容执行完后立即执行2.js脚本文件内容，最后执行sleep.js脚本文件内容，应该如何操作？</p>\n<p>下面我们一起看看script标签未指定async属性和指定async属性的前后效果：</p>\n<ol>\n<li>未给script标签添加async属性时，正常引入3个js文件，脚本执行效果如下：</li>\n</ol>\n<p><img src=\"/demo/pic/js-without-async.png\" alt=\"js-without-async\"></p>\n<ol start=\"2\">\n<li>当给script标签中引入sleep.js文件行添加async属性后，页面的脚本执行效果如下：</li>\n</ol>\n<p><img src=\"/demo/pic/js-with-async.png\" alt=\"js-with-async\"></p>\n<h3 id=\"defer\"><a href=\"#defer\" class=\"headerlink\" title=\"defer\"></a>defer</h3><p>对于defer，估计“时尚”的前端小同伴可能已经不在使用喽，这个功能还未被所有主流浏览器支持，早期主要是IE内核版本支持，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">查看详细</a>b了解更多。在这里defer是早期script标签中的属性，它的作用是延迟执行脚本直到文档解析完毕后才执行。下面让我们一起先看看两个demo:</p>\n<ul>\n<li><a href=\"/demo/js-without-defer.html\">without defer</a></li>\n<li><a href=\"/demo/js-with-defer.html\">with defer</a></li>\n</ul>\n<p>效果同上。</p>\n<p>注：可以通过打开浏览器调试工具，查看脚本加载和执行详细过程。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>考虑到兼容性，针对低版本浏览器推荐script标签中同时添加async和defer属性</li>\n<li>不考虑兼容性，针对主流浏览器推荐script标签中使用async属性</li>\n<li>推荐脚本文件在文档的底部引入</li>\n</ol>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"http://ued.ctrip.com/blog/script-defer-and-async.html\" target=\"_blank\" rel=\"noopener\">携程ued解读defer和async的区别</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">MDN中文文档</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>我们常用的script标签有两个和性能、js脚本文件下载执行相关的属性:<code>async</code>和<code>defer</code></p>\n<p>async的含义【摘自<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script</a>】</p>\n<p>该布尔属性指示浏览器是否在允许的情况下异步执行该脚本。该属性对于内联脚本无作用 (即没有src属性的脚本）</p>\n<p>defer的含义【摘自<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script</a>】</p>\n<p>这个布尔属性定义该脚本是否会延迟到文档解析完毕后才执行。</p>\n<h3 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h3><p>对于async，相信前端开发的小伙伴们都非常熟悉，很容易让人想到异步处理、非阻塞I/O等场景。在这里async是HTML5 script标签中新增的属性，它的作用是能够异步的加载和执行脚本，不因加载脚本而阻塞页面的加载，一旦加载到就会立即执行。下面让我们一起先看看两个demo：</p>\n<ul>\n<li><a href=\"/demo/js-without-async.html\">without async</a></li>\n<li><a href=\"/demo/js-with-async.html\">with async</a></li>\n</ul>\n<p>简单介绍一下这个demo，一共引用了3个js，1.js和2.js是两个正常的脚本文件，sleep.js是一个延迟5s后执行的阻塞脚本文件。现在我们假设一个场景，一个页面中同时按顺序引入以上3个js脚本文件(1.js、sleep.js、2.js)，现我们希望1.js脚本文件内容执行完后立即执行2.js脚本文件内容，最后执行sleep.js脚本文件内容，应该如何操作？</p>\n<p>下面我们一起看看script标签未指定async属性和指定async属性的前后效果：</p>\n<ol>\n<li>未给script标签添加async属性时，正常引入3个js文件，脚本执行效果如下：</li>\n</ol>\n<p><img src=\"/demo/pic/js-without-async.png\" alt=\"js-without-async\"></p>\n<ol start=\"2\">\n<li>当给script标签中引入sleep.js文件行添加async属性后，页面的脚本执行效果如下：</li>\n</ol>\n<p><img src=\"/demo/pic/js-with-async.png\" alt=\"js-with-async\"></p>\n<h3 id=\"defer\"><a href=\"#defer\" class=\"headerlink\" title=\"defer\"></a>defer</h3><p>对于defer，估计“时尚”的前端小同伴可能已经不在使用喽，这个功能还未被所有主流浏览器支持，早期主要是IE内核版本支持，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">查看详细</a>b了解更多。在这里defer是早期script标签中的属性，它的作用是延迟执行脚本直到文档解析完毕后才执行。下面让我们一起先看看两个demo:</p>\n<ul>\n<li><a href=\"/demo/js-without-defer.html\">without defer</a></li>\n<li><a href=\"/demo/js-with-defer.html\">with defer</a></li>\n</ul>\n<p>效果同上。</p>\n<p>注：可以通过打开浏览器调试工具，查看脚本加载和执行详细过程。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ol>\n<li>考虑到兼容性，针对低版本浏览器推荐script标签中同时添加async和defer属性</li>\n<li>不考虑兼容性，针对主流浏览器推荐script标签中使用async属性</li>\n<li>推荐脚本文件在文档的底部引入</li>\n</ol>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li><a href=\"http://ued.ctrip.com/blog/script-defer-and-async.html\" target=\"_blank\" rel=\"noopener\">携程ued解读defer和async的区别</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/script\" target=\"_blank\" rel=\"noopener\">MDN中文文档</a></li>\n</ul>\n"},{"layout":"post","title":"HTTP协议版本间的差异化","date":"2017-07-15T06:20:00.000Z","comments":1,"_content":"","source":"_posts/2017-07-15-http-protocol-version-differences.md","raw":"---\nlayout: post\ntitle: HTTP协议版本间的差异化\ndate: 2017-07-15 14:20\ncomments: true\ncategories: [前端开发]\n---","slug":"http-protocol-version-differences","published":1,"updated":"2018-05-30T08:12:15.901Z","photos":[],"link":"","_id":"cjhubytlq003tyis5gu87xkbe","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","title":"web常见的安全问题","date":"2017-07-22T04:38:00.000Z","comments":1,"_content":"\n本文主要是收集并科普一下web常见的安全问题，针对安全漏洞产生的场景和防御方式不详细的描述(仅作参考)，后续将通过相关系列的文章进行补充和完善。想了解详细的内容，请点击对应的链接进入维基百科查看。持续更新中...\n\n## 前端安全\n\n[XSS 跨站脚本攻击](https://zh.wikipedia.org/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC)\n\n跨站脚本（英语：Cross-site scripting，通常简称为：XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。\n\nXSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java，VBScript，ActiveX，Flash或者甚至是普通的HTML。攻击成功后，攻击者可能得到更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。\n\n防御措施：过滤特殊字符、使用HTTP头指定类型\n\n[CSRF 跨站请求伪造](https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0)\n\n跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。\n\n防御措施：检查Referer字段、添加校验token\n\n## 后端安全\n\n[SQL注入攻击](https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A)\n\nSQL攻击（英语：SQL injection），简称注入攻击，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏或是入侵。\n\n[SESSION 与 COOKIE](https://zh.wikipedia.org/wiki/%E4%BC%9A%E8%AF%9D_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6))\n\nSession 和 Cookie 是两种用于存储用户当前状态的工具。某些开发者不了解 Session 与 Cookie 的区别，误用或者混用，导致敏感信息泄露或者信息篡改。\n\nCookie 存储在浏览器上，用户可以查看和修改 Cookie。\nSession 是存储在服务端的数据，一般来说安全可靠；大多数 Session 都是基于 Cookie 实现的（在 Cookie 中存储一串 SESSION_ID，在服务器上存储该 SESSION_ID 对应的内容）。\n\n[IP地址欺骗](https://zh.wikipedia.org/wiki/IP%E5%9C%B0%E5%9D%80%E6%AC%BA%E9%AA%97)\n\n在计算机网络里面，IP地址欺骗或IP欺骗是一个带有假的源IP地址的IP协议分组（数据报）的产物，目的是隐藏发送方或冒充另一个计算系统身份。使发送方可以保持匿名的一种技术是使用代理服务器。\n\n防御措施：数据报过滤、...\n\n[验证码破解](https://zh.wikipedia.org/wiki/%E9%AA%8C%E8%AF%81%E7%A0%81#.E7.A0.B4.E8.A7.A3)\n\n\n非一次性、易识别性的验证码相对来讲很容易进行破解。\n\n非一次性指的是同一个验证码可以一直被使用下去。一般来说，每进行一次验证码校对（无论正确与否），都应该强制更换或清除 Session 中的验证码。\n\n易识别性指的是不加噪点不加扭曲的验证码，主当技术基本上100%可识别的。\n\n## 服务器安全\n\n[DoS/DDoS攻击](https://zh.wikipedia.org/wiki/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A)\n\n拒绝服务攻击（英语：denial-of-service attack，缩写：DoS attack、DoS）亦称洪水攻击，是一种网络攻击手法，其目的在于使目标电脑的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。\n当黑客使用网络上两个或以上被攻陷的电脑作为“僵尸”向特定的目标发动“拒绝服务”式攻击时，其称为分布式拒绝服务攻击（distributed denial-of-service attack，缩写：DDoS attack、DDoS）。\n\n防御措施：防火墙、交换机、路由器、黑洞引导、流量清洗\n\n...","source":"_posts/2017-07-22-common-web-security-issues.md","raw":"---\nlayout: post\ntitle: web常见的安全问题\ndate: 2017-07-22 12:38\ncomments: true\ncategories: [前端安全]\n---\n\n本文主要是收集并科普一下web常见的安全问题，针对安全漏洞产生的场景和防御方式不详细的描述(仅作参考)，后续将通过相关系列的文章进行补充和完善。想了解详细的内容，请点击对应的链接进入维基百科查看。持续更新中...\n\n## 前端安全\n\n[XSS 跨站脚本攻击](https://zh.wikipedia.org/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC)\n\n跨站脚本（英语：Cross-site scripting，通常简称为：XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。\n\nXSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java，VBScript，ActiveX，Flash或者甚至是普通的HTML。攻击成功后，攻击者可能得到更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。\n\n防御措施：过滤特殊字符、使用HTTP头指定类型\n\n[CSRF 跨站请求伪造](https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0)\n\n跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。\n\n防御措施：检查Referer字段、添加校验token\n\n## 后端安全\n\n[SQL注入攻击](https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A)\n\nSQL攻击（英语：SQL injection），简称注入攻击，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏或是入侵。\n\n[SESSION 与 COOKIE](https://zh.wikipedia.org/wiki/%E4%BC%9A%E8%AF%9D_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6))\n\nSession 和 Cookie 是两种用于存储用户当前状态的工具。某些开发者不了解 Session 与 Cookie 的区别，误用或者混用，导致敏感信息泄露或者信息篡改。\n\nCookie 存储在浏览器上，用户可以查看和修改 Cookie。\nSession 是存储在服务端的数据，一般来说安全可靠；大多数 Session 都是基于 Cookie 实现的（在 Cookie 中存储一串 SESSION_ID，在服务器上存储该 SESSION_ID 对应的内容）。\n\n[IP地址欺骗](https://zh.wikipedia.org/wiki/IP%E5%9C%B0%E5%9D%80%E6%AC%BA%E9%AA%97)\n\n在计算机网络里面，IP地址欺骗或IP欺骗是一个带有假的源IP地址的IP协议分组（数据报）的产物，目的是隐藏发送方或冒充另一个计算系统身份。使发送方可以保持匿名的一种技术是使用代理服务器。\n\n防御措施：数据报过滤、...\n\n[验证码破解](https://zh.wikipedia.org/wiki/%E9%AA%8C%E8%AF%81%E7%A0%81#.E7.A0.B4.E8.A7.A3)\n\n\n非一次性、易识别性的验证码相对来讲很容易进行破解。\n\n非一次性指的是同一个验证码可以一直被使用下去。一般来说，每进行一次验证码校对（无论正确与否），都应该强制更换或清除 Session 中的验证码。\n\n易识别性指的是不加噪点不加扭曲的验证码，主当技术基本上100%可识别的。\n\n## 服务器安全\n\n[DoS/DDoS攻击](https://zh.wikipedia.org/wiki/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A)\n\n拒绝服务攻击（英语：denial-of-service attack，缩写：DoS attack、DoS）亦称洪水攻击，是一种网络攻击手法，其目的在于使目标电脑的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。\n当黑客使用网络上两个或以上被攻陷的电脑作为“僵尸”向特定的目标发动“拒绝服务”式攻击时，其称为分布式拒绝服务攻击（distributed denial-of-service attack，缩写：DDoS attack、DDoS）。\n\n防御措施：防火墙、交换机、路由器、黑洞引导、流量清洗\n\n...","slug":"common-web-security-issues","published":1,"updated":"2018-05-30T08:12:15.902Z","photos":[],"link":"","_id":"cjhubytlr003vyis5tft2cxzd","content":"<p>本文主要是收集并科普一下web常见的安全问题，针对安全漏洞产生的场景和防御方式不详细的描述(仅作参考)，后续将通过相关系列的文章进行补充和完善。想了解详细的内容，请点击对应的链接进入维基百科查看。持续更新中…</p>\n<h2 id=\"前端安全\"><a href=\"#前端安全\" class=\"headerlink\" title=\"前端安全\"></a>前端安全</h2><p><a href=\"https://zh.wikipedia.org/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC\" target=\"_blank\" rel=\"noopener\">XSS 跨站脚本攻击</a></p>\n<p>跨站脚本（英语：Cross-site scripting，通常简称为：XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。</p>\n<p>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java，VBScript，ActiveX，Flash或者甚至是普通的HTML。攻击成功后，攻击者可能得到更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p>\n<p>防御措施：过滤特殊字符、使用HTTP头指定类型</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0\" target=\"_blank\" rel=\"noopener\">CSRF 跨站请求伪造</a></p>\n<p>跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p>\n<p>防御措施：检查Referer字段、添加校验token</p>\n<h2 id=\"后端安全\"><a href=\"#后端安全\" class=\"headerlink\" title=\"后端安全\"></a>后端安全</h2><p><a href=\"https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A\" target=\"_blank\" rel=\"noopener\">SQL注入攻击</a></p>\n<p>SQL攻击（英语：SQL injection），简称注入攻击，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏或是入侵。</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E4%BC%9A%E8%AF%9D_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6\" target=\"_blank\" rel=\"noopener\">SESSION 与 COOKIE</a>)</p>\n<p>Session 和 Cookie 是两种用于存储用户当前状态的工具。某些开发者不了解 Session 与 Cookie 的区别，误用或者混用，导致敏感信息泄露或者信息篡改。</p>\n<p>Cookie 存储在浏览器上，用户可以查看和修改 Cookie。<br>Session 是存储在服务端的数据，一般来说安全可靠；大多数 Session 都是基于 Cookie 实现的（在 Cookie 中存储一串 SESSION_ID，在服务器上存储该 SESSION_ID 对应的内容）。</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/IP%E5%9C%B0%E5%9D%80%E6%AC%BA%E9%AA%97\" target=\"_blank\" rel=\"noopener\">IP地址欺骗</a></p>\n<p>在计算机网络里面，IP地址欺骗或IP欺骗是一个带有假的源IP地址的IP协议分组（数据报）的产物，目的是隐藏发送方或冒充另一个计算系统身份。使发送方可以保持匿名的一种技术是使用代理服务器。</p>\n<p>防御措施：数据报过滤、…</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E9%AA%8C%E8%AF%81%E7%A0%81#.E7.A0.B4.E8.A7.A3\" target=\"_blank\" rel=\"noopener\">验证码破解</a></p>\n<p>非一次性、易识别性的验证码相对来讲很容易进行破解。</p>\n<p>非一次性指的是同一个验证码可以一直被使用下去。一般来说，每进行一次验证码校对（无论正确与否），都应该强制更换或清除 Session 中的验证码。</p>\n<p>易识别性指的是不加噪点不加扭曲的验证码，主当技术基本上100%可识别的。</p>\n<h2 id=\"服务器安全\"><a href=\"#服务器安全\" class=\"headerlink\" title=\"服务器安全\"></a>服务器安全</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A\" target=\"_blank\" rel=\"noopener\">DoS/DDoS攻击</a></p>\n<p>拒绝服务攻击（英语：denial-of-service attack，缩写：DoS attack、DoS）亦称洪水攻击，是一种网络攻击手法，其目的在于使目标电脑的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。<br>当黑客使用网络上两个或以上被攻陷的电脑作为“僵尸”向特定的目标发动“拒绝服务”式攻击时，其称为分布式拒绝服务攻击（distributed denial-of-service attack，缩写：DDoS attack、DDoS）。</p>\n<p>防御措施：防火墙、交换机、路由器、黑洞引导、流量清洗</p>\n<p>…</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本文主要是收集并科普一下web常见的安全问题，针对安全漏洞产生的场景和防御方式不详细的描述(仅作参考)，后续将通过相关系列的文章进行补充和完善。想了解详细的内容，请点击对应的链接进入维基百科查看。持续更新中…</p>\n<h2 id=\"前端安全\"><a href=\"#前端安全\" class=\"headerlink\" title=\"前端安全\"></a>前端安全</h2><p><a href=\"https://zh.wikipedia.org/zh-cn/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC\" target=\"_blank\" rel=\"noopener\">XSS 跨站脚本攻击</a></p>\n<p>跨站脚本（英语：Cross-site scripting，通常简称为：XSS）是一种网站应用程序的安全漏洞攻击，是代码注入的一种。它允许恶意用户将代码注入到网页上，其他用户在观看网页时就会受到影响。这类攻击通常包含了HTML以及用户端脚本语言。</p>\n<p>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java，VBScript，ActiveX，Flash或者甚至是普通的HTML。攻击成功后，攻击者可能得到更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p>\n<p>防御措施：过滤特殊字符、使用HTTP头指定类型</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0\" target=\"_blank\" rel=\"noopener\">CSRF 跨站请求伪造</a></p>\n<p>跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。跟跨网站脚本（XSS）相比，XSS 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。</p>\n<p>防御措施：检查Referer字段、添加校验token</p>\n<h2 id=\"后端安全\"><a href=\"#后端安全\" class=\"headerlink\" title=\"后端安全\"></a>后端安全</h2><p><a href=\"https://zh.wikipedia.org/wiki/SQL%E8%B3%87%E6%96%99%E9%9A%B1%E7%A2%BC%E6%94%BB%E6%93%8A\" target=\"_blank\" rel=\"noopener\">SQL注入攻击</a></p>\n<p>SQL攻击（英语：SQL injection），简称注入攻击，是发生于应用程序之数据库层的安全漏洞。简而言之，是在输入的字符串之中注入SQL指令，在设计不良的程序当中忽略了检查，那么这些注入进去的指令就会被数据库服务器误认为是正常的SQL指令而运行，因此遭到破坏或是入侵。</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E4%BC%9A%E8%AF%9D_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6\" target=\"_blank\" rel=\"noopener\">SESSION 与 COOKIE</a>)</p>\n<p>Session 和 Cookie 是两种用于存储用户当前状态的工具。某些开发者不了解 Session 与 Cookie 的区别，误用或者混用，导致敏感信息泄露或者信息篡改。</p>\n<p>Cookie 存储在浏览器上，用户可以查看和修改 Cookie。<br>Session 是存储在服务端的数据，一般来说安全可靠；大多数 Session 都是基于 Cookie 实现的（在 Cookie 中存储一串 SESSION_ID，在服务器上存储该 SESSION_ID 对应的内容）。</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/IP%E5%9C%B0%E5%9D%80%E6%AC%BA%E9%AA%97\" target=\"_blank\" rel=\"noopener\">IP地址欺骗</a></p>\n<p>在计算机网络里面，IP地址欺骗或IP欺骗是一个带有假的源IP地址的IP协议分组（数据报）的产物，目的是隐藏发送方或冒充另一个计算系统身份。使发送方可以保持匿名的一种技术是使用代理服务器。</p>\n<p>防御措施：数据报过滤、…</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E9%AA%8C%E8%AF%81%E7%A0%81#.E7.A0.B4.E8.A7.A3\" target=\"_blank\" rel=\"noopener\">验证码破解</a></p>\n<p>非一次性、易识别性的验证码相对来讲很容易进行破解。</p>\n<p>非一次性指的是同一个验证码可以一直被使用下去。一般来说，每进行一次验证码校对（无论正确与否），都应该强制更换或清除 Session 中的验证码。</p>\n<p>易识别性指的是不加噪点不加扭曲的验证码，主当技术基本上100%可识别的。</p>\n<h2 id=\"服务器安全\"><a href=\"#服务器安全\" class=\"headerlink\" title=\"服务器安全\"></a>服务器安全</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E9%98%BB%E6%96%B7%E6%9C%8D%E5%8B%99%E6%94%BB%E6%93%8A\" target=\"_blank\" rel=\"noopener\">DoS/DDoS攻击</a></p>\n<p>拒绝服务攻击（英语：denial-of-service attack，缩写：DoS attack、DoS）亦称洪水攻击，是一种网络攻击手法，其目的在于使目标电脑的网络或系统资源耗尽，使服务暂时中断或停止，导致其正常用户无法访问。<br>当黑客使用网络上两个或以上被攻陷的电脑作为“僵尸”向特定的目标发动“拒绝服务”式攻击时，其称为分布式拒绝服务攻击（distributed denial-of-service attack，缩写：DDoS attack、DDoS）。</p>\n<p>防御措施：防火墙、交换机、路由器、黑洞引导、流量清洗</p>\n<p>…</p>\n"},{"layout":"post","title":"四年前的旧版个人博客在Heroku中正常运行","date":"2017-07-22T04:38:00.000Z","comments":1,"_content":"\n今天在[新网](http://www.xinnet.com/)中更新个人域名DNS解析时，无意中发现四年前上传到[Heroku](https://www.heroku.com/)云平台上的基于Node开发的[个人博客](http://node.hankewins.com/)（旧版）仍在正常运行，WoW，真是一件令人高兴的事情。\n\n## Heroku是什么\n\nHeroku是一个支持多种编程语言的云平台。支持Ruby、Java、Node.js、Scala、Clojure、Python、PHP、Perl等开发语言，[了解更多](https://zh.wikipedia.org/wiki/Heroku)。\n\n## Heroku中如何部署Node应用程序\n\nHeroku官方在线文档很完善，推荐大家直接在线阅读[传送门](https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction)，也可以查看很早之前我写的一篇相关文章[Ubuntu下通过Heroku部署Node.js应用程序](/blog/ubuntu-heroku-build-node-app)，里面有详细的介绍。\n\n## 国内各大云平台\n\n最近几年随着Node开发的火热，国内各大云平台也都支持了Node相关环境的部署，主要平台有：\n\n- [新浪云](http://www.sinacloud.com/)\n- [阿里云](https://www.aliyun.com/)\n- [百度云](https://cloud.baidu.com/)\n- [腾讯云](https://cloud.tencent.com/)\n\n早期我主要用过新浪云、百度云、阿里云部署过Node小应用程序，从体验角度来讲的话，阿里云的兼容性和可操作性较好，但每个平台都有各自的特点，大家可根据自身要求进行选择。\n\n最后，大家有任何问题，欢迎共同交流。\n\n","source":"_posts/2017-07-25-a-surprising-thing-in-the-heroku.md","raw":"---\nlayout: post\ntitle: 四年前的旧版个人博客在Heroku中正常运行\ndate: 2017-07-22 12:38\ncomments: true\ncategories: [水]\n---\n\n今天在[新网](http://www.xinnet.com/)中更新个人域名DNS解析时，无意中发现四年前上传到[Heroku](https://www.heroku.com/)云平台上的基于Node开发的[个人博客](http://node.hankewins.com/)（旧版）仍在正常运行，WoW，真是一件令人高兴的事情。\n\n## Heroku是什么\n\nHeroku是一个支持多种编程语言的云平台。支持Ruby、Java、Node.js、Scala、Clojure、Python、PHP、Perl等开发语言，[了解更多](https://zh.wikipedia.org/wiki/Heroku)。\n\n## Heroku中如何部署Node应用程序\n\nHeroku官方在线文档很完善，推荐大家直接在线阅读[传送门](https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction)，也可以查看很早之前我写的一篇相关文章[Ubuntu下通过Heroku部署Node.js应用程序](/blog/ubuntu-heroku-build-node-app)，里面有详细的介绍。\n\n## 国内各大云平台\n\n最近几年随着Node开发的火热，国内各大云平台也都支持了Node相关环境的部署，主要平台有：\n\n- [新浪云](http://www.sinacloud.com/)\n- [阿里云](https://www.aliyun.com/)\n- [百度云](https://cloud.baidu.com/)\n- [腾讯云](https://cloud.tencent.com/)\n\n早期我主要用过新浪云、百度云、阿里云部署过Node小应用程序，从体验角度来讲的话，阿里云的兼容性和可操作性较好，但每个平台都有各自的特点，大家可根据自身要求进行选择。\n\n最后，大家有任何问题，欢迎共同交流。\n\n","slug":"a-surprising-thing-in-the-heroku","published":1,"updated":"2018-05-30T08:12:15.903Z","photos":[],"link":"","_id":"cjhubytls003xyis54v9zum8i","content":"<p>今天在<a href=\"http://www.xinnet.com/\" target=\"_blank\" rel=\"noopener\">新网</a>中更新个人域名DNS解析时，无意中发现四年前上传到<a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"noopener\">Heroku</a>云平台上的基于Node开发的<a href=\"http://node.hankewins.com/\" target=\"_blank\" rel=\"noopener\">个人博客</a>（旧版）仍在正常运行，WoW，真是一件令人高兴的事情。</p>\n<h2 id=\"Heroku是什么\"><a href=\"#Heroku是什么\" class=\"headerlink\" title=\"Heroku是什么\"></a>Heroku是什么</h2><p>Heroku是一个支持多种编程语言的云平台。支持Ruby、Java、Node.js、Scala、Clojure、Python、PHP、Perl等开发语言，<a href=\"https://zh.wikipedia.org/wiki/Heroku\" target=\"_blank\" rel=\"noopener\">了解更多</a>。</p>\n<h2 id=\"Heroku中如何部署Node应用程序\"><a href=\"#Heroku中如何部署Node应用程序\" class=\"headerlink\" title=\"Heroku中如何部署Node应用程序\"></a>Heroku中如何部署Node应用程序</h2><p>Heroku官方在线文档很完善，推荐大家直接在线阅读<a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction\" target=\"_blank\" rel=\"noopener\">传送门</a>，也可以查看很早之前我写的一篇相关文章<a href=\"/blog/ubuntu-heroku-build-node-app\">Ubuntu下通过Heroku部署Node.js应用程序</a>，里面有详细的介绍。</p>\n<h2 id=\"国内各大云平台\"><a href=\"#国内各大云平台\" class=\"headerlink\" title=\"国内各大云平台\"></a>国内各大云平台</h2><p>最近几年随着Node开发的火热，国内各大云平台也都支持了Node相关环境的部署，主要平台有：</p>\n<ul>\n<li><a href=\"http://www.sinacloud.com/\" target=\"_blank\" rel=\"noopener\">新浪云</a></li>\n<li><a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云</a></li>\n<li><a href=\"https://cloud.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度云</a></li>\n<li><a href=\"https://cloud.tencent.com/\" target=\"_blank\" rel=\"noopener\">腾讯云</a></li>\n</ul>\n<p>早期我主要用过新浪云、百度云、阿里云部署过Node小应用程序，从体验角度来讲的话，阿里云的兼容性和可操作性较好，但每个平台都有各自的特点，大家可根据自身要求进行选择。</p>\n<p>最后，大家有任何问题，欢迎共同交流。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天在<a href=\"http://www.xinnet.com/\" target=\"_blank\" rel=\"noopener\">新网</a>中更新个人域名DNS解析时，无意中发现四年前上传到<a href=\"https://www.heroku.com/\" target=\"_blank\" rel=\"noopener\">Heroku</a>云平台上的基于Node开发的<a href=\"http://node.hankewins.com/\" target=\"_blank\" rel=\"noopener\">个人博客</a>（旧版）仍在正常运行，WoW，真是一件令人高兴的事情。</p>\n<h2 id=\"Heroku是什么\"><a href=\"#Heroku是什么\" class=\"headerlink\" title=\"Heroku是什么\"></a>Heroku是什么</h2><p>Heroku是一个支持多种编程语言的云平台。支持Ruby、Java、Node.js、Scala、Clojure、Python、PHP、Perl等开发语言，<a href=\"https://zh.wikipedia.org/wiki/Heroku\" target=\"_blank\" rel=\"noopener\">了解更多</a>。</p>\n<h2 id=\"Heroku中如何部署Node应用程序\"><a href=\"#Heroku中如何部署Node应用程序\" class=\"headerlink\" title=\"Heroku中如何部署Node应用程序\"></a>Heroku中如何部署Node应用程序</h2><p>Heroku官方在线文档很完善，推荐大家直接在线阅读<a href=\"https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction\" target=\"_blank\" rel=\"noopener\">传送门</a>，也可以查看很早之前我写的一篇相关文章<a href=\"/blog/ubuntu-heroku-build-node-app\">Ubuntu下通过Heroku部署Node.js应用程序</a>，里面有详细的介绍。</p>\n<h2 id=\"国内各大云平台\"><a href=\"#国内各大云平台\" class=\"headerlink\" title=\"国内各大云平台\"></a>国内各大云平台</h2><p>最近几年随着Node开发的火热，国内各大云平台也都支持了Node相关环境的部署，主要平台有：</p>\n<ul>\n<li><a href=\"http://www.sinacloud.com/\" target=\"_blank\" rel=\"noopener\">新浪云</a></li>\n<li><a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">阿里云</a></li>\n<li><a href=\"https://cloud.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度云</a></li>\n<li><a href=\"https://cloud.tencent.com/\" target=\"_blank\" rel=\"noopener\">腾讯云</a></li>\n</ul>\n<p>早期我主要用过新浪云、百度云、阿里云部署过Node小应用程序，从体验角度来讲的话，阿里云的兼容性和可操作性较好，但每个平台都有各自的特点，大家可根据自身要求进行选择。</p>\n<p>最后，大家有任何问题，欢迎共同交流。</p>\n"},{"layout":"post","title":"深入浅出 ES6 Promise （一）","date":"2017-07-26T02:58:00.000Z","comments":1,"_content":"\n最近这几年随着移动互联网的快速发展，前端的开发模式已悄悄地从多页面混合开发模式到单页面前后端分离开发模式的转变，基于MVVM模式的前端框架得到了繁荣发展。它们主要是[knockoutjs](http://knockoutjs.com/)、[reactjs](https://facebook.github.io/react/)、[angularjs](https://angular.io/)、[vuejs](https://vuejs.org/)等，其中[尤雨溪](https://baike.baidu.com/item/%E5%B0%A4%E9%9B%A8%E6%BA%AA/2281470?fr=aladdin)开发的[vuejs](https://vuejs.org/)框架在国内得到开发者的认可和支持。\n\n基于MVVM模式开发的框架能得到快速的发展主要得益于2015年6月份ES2015的正式发布（也就是ES6），其中Promise被列为正式规范，作为ES6中最重要的特性之一，我们有必要掌握并理解透彻。本文将由浅到深，讲解Promise的基本概念与使用方法。\n\n## 基本概念\n\n**Promise** 对象用于一个异步操作的最终完成（或失败）及其结果值的表示。(简单点说就是处理异步请求。。我们经常会做些承诺，如果我赢了你就嫁给我，如果输了我就嫁给你之类的诺言。这就是promise的中文含义。一个诺言，一个成功，一个失败。)\n\n## 常用方法\n\n- [Promise.all()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all)\n- [Promise.prototype.catch()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch)\n- [Promise.prototype.then()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/then)\n- [Promise.race()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race)\n- [Promise.reject()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject)\n- [Promise.resolve()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve)\n\n## 新手入门\n\n- 控制台中查看Promise真身\n\n```\nconsole.log(Promise)\n```\n\n可知：Promise是一个构造函数，有all、race、reject、resolve四个静态方法以及then和catch两个公共方法。\n\n- 实例化一个Promise对象\n\n```\nvar p1 = new Promise(function(resolve, reject){\n    //做一些异步操作\n    setTimeout(function(){\n        console.log('异步中执行完成');\n        resolve('异步中传递数据');\n    }, 1000);\n});\n```\n\n可知：Promise的构造函数接受一个executor参数，executor是一个带有resolve和reject两个参数的函数。executor 函数在Promise构造函数执行时同步执行，被传递resolve和reject函数（executor 函数在Promise构造函数返回新建对象前被调用）。resolve 和 reject 函数被调用时，分别将promise的状态改为fulfilled(完成)或rejected（失败）。executor 内部通常会执行一些异步操作，一旦完成，可以调用resolve函数来将promise状态改成fulfilled，或者在发生错误时将它的状态改为rejected。\n如果在executor函数中抛出一个错误，那么该promise 状态为rejected。executor函数的返回值被忽略。\n\n在上面的代码中，我们执行了一个异步操作，也就是setTimeout，1秒后，输出“异步中执行完成”，并且调用resolve方法。\n\n- then() 方法的使用\n\n步骤2中我们实例化了一个Promise对象p1并且我们在setTimeout执行中调用了resolve方法，重置了Promise状态为resolved。\n\n如何调用then() 方法？\n\n```\np1.then(function(data){\n    // resolve状态\n    console.log(data); // 异步中传递数据\n}, function(data){\n    // reject状态，仅在Promise异步执行中调用reject方法后重置Promise状态为rejected时生效\n});\n```\n\n可知：then() 方法主要接受resolve和reject参数，且两个参数都是函数。仅当Promise状态为resolved时调用reslove函数，状态为rejected时调用reject函数\n\n- catch() 方法的使用\n\n\ncatch() 方法返回一个Promise，只处理拒绝的情况。它的行为与调用Promise.prototype.then(undefined, onRejected) 相同。但catch() 方法可以捕获异常错误，因此catch() 方法主要用做捕获抛出的错误。\n\n如何调用catch() 方法呢？\n\n```\np1.catch(function(reason){\n    // 拒绝\n})\n```\n\n可知：catch() 方法接受reason参数，如果 onRejected 抛出一个错误或返回一个失败的 Promise，Promise 通过 catch() 返回失败结果；否则，它将显示为成功。\n\n示例：\n\n使用链式语句的 catch方法\n\n```\nvar p1 = new Promise(function(resolve, reject) {\n    resolve('Success');\n});\n\np1.then(function(value) {\n    console.log(value); // \"成功!\"\n    throw 'oh, no!';\n}).catch(function(e) {\n    console.log(e); // \"oh, no!\"\n}).then(function(){\n    console.log('after a catch the chain is restored');\n}, function () {\n    console.log('Not fired due to the catch');\n});\n\n// 以下行为与上述相同\np1.then(function(value) {\n    console.log(value); // \"成功!\"\n    return Promise.reject('oh, no!');\n}).catch(function(e) {\n    console.log(e); // \"oh, no!\"\n}).then(function(){\n    console.log('after a catch the chain is restored');\n}, function () {\n    console.log('Not fired due to the catch');\n});\n```\n\n捕获抛出的错误\n\n```\n// 抛出一个错误，大多数时候将调用catch方法\nvar p1 = new Promise(function(resolve, reject) {\n    throw 'Uh-oh!';\n});\n\np1.catch(function(e) {\n    console.log(e); // \"Uh-oh!\"\n});\n```\n\n- all() 方法的使用\n\nPromise.all(iterable) 方法提供了并行执行异步操作的能力，当所有在可迭代参数中的 promises 已完成，或者第一个传递的 promise（指 reject）失败时，返回 promise。\n\n```\nvar p1 = new Promise(function(resolve, reject){\n    // 异步操作\n    setTimeout(function(){\n        resolve('传递数据01');\n    }, 1000);\n});\n\nvar p2 = new Promise(function(resolve, reject){\n    // 异步操作\n    setTimeout(function(){\n        resolve('传递数据02');\n    }, 1000);\n});\n\nvar p3 = new Promise(function(resolve, reject){\n    // 异步操作\n    setTimeout(function(){\n        resolve('传递数据03');\n    }, 1000);\n});\n\n// 全部resolved状态\nPromise.all([p1, p2, p3]).then(function(values){\n    console.log(values); // [\"传递数据01\", \"传递数据02\", \"传递数据03\"]\n});\n\n// p2,p3异步操作时调用reject() 方法\n// 则返回第一个rejected状态的Promise\nPromise.all([p1, p2, p3]).catch(function(values){\n    console.log(values); // \"传递数据02\"\n});\n```\n\n可知：Promise.all() 方法接受一个数组参数，数组参数中的每一项都是一个Promise对象。执行过程中如果有任何一项是rejected状态则返回当前项Promise否则全部resloved状态后返回Promise。\n\n- race() 方法的使用\n\nrace 函数返回一个 Promise，它将与第一个传递的 promise 相同的完成方式被完成。它可以是完成（ resolves），也可以是失败（rejects），这要取决于第一个完成的方式是两个中的哪个。\n\n```\nvar p1 = new Promise(function(resolve, reject) { \n    setTimeout(resolve, 500, \"one\"); \n});\nvar p2 = new Promise(function(resolve, reject) { \n    setTimeout(resolve, 100, \"two\"); \n});\n\nPromise.race([p1, p2]).then(function(value) {\n  console.log(value); // \"two\"\n  // 两个都完成，但 p2 更快\n});\n```\n\n- reject() 方法的使用\n\n静态函数Promise.reject返回一个被拒绝的Promise。使用是Error实例的reason对调试和选择性错误捕捉很有帮助。\n\n```\nPromise.reject(\"Testing static reject\").then(function(reason) {\n  // 未被调用\n}, function(reason) {\n  console.log(reason); // \"测试静态拒绝\"\n});\n\nPromise.reject(new Error(\"fail\")).then(function(error) {\n  // 未被调用\n}, function(error) {\n  console.log(error); // 堆栈跟踪\n});\n```\n- resolve() 方法的使用\n\nPromise.resolve(value)方法返回一个以给定值解析后的Promise对象。但如果这个值是个thenable（即带有then方法），返回的promise会“跟随”这个thenable的对象，采用它的最终状态（指resolved/rejected/pending/settled）；否则以该值为成功状态返回promise对象。\n\n使用静态方法Promise.resolve\n\n```\nPromise.resolve(\"Success\").then(function(value) {\n  console.log(value); // \"Success\"\n}, function(value) {\n  // 不会被调用\n});\n```\n\n对一个数组进行resolve\n\n```\nvar p = Promise.resolve([1,2,3]);\np.then(function(v) {\n  console.log(v[0]); // 1\n});\n```\n\nResolve另一个promise对象\n\n```\nvar original = Promise.resolve(true);\nvar cast = Promise.resolve(original);\ncast.then(function(v) {\n  console.log(v); // true\n});\n```\n\nresolve thenable的对象们并抛出错误\n\n```\n// Resolve一个thenable对象\nvar p1 = Promise.resolve({ \n  then: function(onFulfill, onReject) { onFulfill(\"fulfilled!\"); }\n});\nconsole.log(p1 instanceof Promise) // true, 这是一个Promise对象\n\np1.then(function(v) {\n    console.log(v); // 输出\"fulfilled!\"\n  }, function(e) {\n    // 不会被调用\n});\n\n// Thenable在callback之前抛出异常\n// Promise rejects\nvar thenable = { then: function(resolve) {\n  throw new TypeError(\"Throwing\");\n  resolve(\"Resolving\");\n}};\n\nvar p2 = Promise.resolve(thenable);\np2.then(function(v) {\n  // 不会被调用\n}, function(e) {\n  console.log(e); // TypeError: Throwing\n});\n\n// Thenable在callback之后抛出异常\n// Promise resolves\nvar thenable = { then: function(resolve) {\n  resolve(\"Resolving\");\n  throw new TypeError(\"Throwing\");\n}};\n\nvar p3 = Promise.resolve(thenable);\np3.then(function(v) {\n  console.log(v); // 输出\"Resolving\"\n}, function(e) {\n  // 不会被调用\n});\n```\n\n## 总结\n\n本篇文章主要是简单的介绍了Promise概念以及Promise常用方法的使用。文中所有异步操作均以setTimeout为例子，之所以不使用ajax是为了避免引起混淆，因为谈起ajax，很多人的第一反应就是jquery的ajax，而jquery又有自己的Promise实现。如果你理解了原理，就知道使用setTimeout和使用ajax是一样的意思。\n\n接下来还会有深入浅出 ES6 Promise讲解系列：\n\n- Promise 使用以及运用场景\n- Promise/A+规范\n- 搞懂jQuery中的Promise\n- 搞懂Promise、Generator、Async三者的异同\n- Promise 面试问题讲解\n\n## 参考\n\n- [Promises/A](http://wiki.commonjs.org/wiki/Promises/A)\n- [Promises/A+](https://promisesaplus.com/)\n- [Promises/A+规范](http://www.ituring.com.cn/article/66566)\n- [Promise对象/阮一峰](http://javascript.ruanyifeng.com/advanced/promise.html)\n- [Promise对象/MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- [面试中Promise相关问题](https://github.com/ElemeFE/node-interview/blob/master/sections/zh-cn/event-async.md#promise)\n","source":"_posts/2017-07-26-promise-of-chapter-1th.md","raw":"---\nlayout: post\ntitle: 深入浅出 ES6 Promise （一）\ndate: 2017-07-26 10:58\ncomments: true\ncategories: [前端开发]\n---\n\n最近这几年随着移动互联网的快速发展，前端的开发模式已悄悄地从多页面混合开发模式到单页面前后端分离开发模式的转变，基于MVVM模式的前端框架得到了繁荣发展。它们主要是[knockoutjs](http://knockoutjs.com/)、[reactjs](https://facebook.github.io/react/)、[angularjs](https://angular.io/)、[vuejs](https://vuejs.org/)等，其中[尤雨溪](https://baike.baidu.com/item/%E5%B0%A4%E9%9B%A8%E6%BA%AA/2281470?fr=aladdin)开发的[vuejs](https://vuejs.org/)框架在国内得到开发者的认可和支持。\n\n基于MVVM模式开发的框架能得到快速的发展主要得益于2015年6月份ES2015的正式发布（也就是ES6），其中Promise被列为正式规范，作为ES6中最重要的特性之一，我们有必要掌握并理解透彻。本文将由浅到深，讲解Promise的基本概念与使用方法。\n\n## 基本概念\n\n**Promise** 对象用于一个异步操作的最终完成（或失败）及其结果值的表示。(简单点说就是处理异步请求。。我们经常会做些承诺，如果我赢了你就嫁给我，如果输了我就嫁给你之类的诺言。这就是promise的中文含义。一个诺言，一个成功，一个失败。)\n\n## 常用方法\n\n- [Promise.all()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all)\n- [Promise.prototype.catch()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch)\n- [Promise.prototype.then()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/then)\n- [Promise.race()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race)\n- [Promise.reject()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject)\n- [Promise.resolve()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve)\n\n## 新手入门\n\n- 控制台中查看Promise真身\n\n```\nconsole.log(Promise)\n```\n\n可知：Promise是一个构造函数，有all、race、reject、resolve四个静态方法以及then和catch两个公共方法。\n\n- 实例化一个Promise对象\n\n```\nvar p1 = new Promise(function(resolve, reject){\n    //做一些异步操作\n    setTimeout(function(){\n        console.log('异步中执行完成');\n        resolve('异步中传递数据');\n    }, 1000);\n});\n```\n\n可知：Promise的构造函数接受一个executor参数，executor是一个带有resolve和reject两个参数的函数。executor 函数在Promise构造函数执行时同步执行，被传递resolve和reject函数（executor 函数在Promise构造函数返回新建对象前被调用）。resolve 和 reject 函数被调用时，分别将promise的状态改为fulfilled(完成)或rejected（失败）。executor 内部通常会执行一些异步操作，一旦完成，可以调用resolve函数来将promise状态改成fulfilled，或者在发生错误时将它的状态改为rejected。\n如果在executor函数中抛出一个错误，那么该promise 状态为rejected。executor函数的返回值被忽略。\n\n在上面的代码中，我们执行了一个异步操作，也就是setTimeout，1秒后，输出“异步中执行完成”，并且调用resolve方法。\n\n- then() 方法的使用\n\n步骤2中我们实例化了一个Promise对象p1并且我们在setTimeout执行中调用了resolve方法，重置了Promise状态为resolved。\n\n如何调用then() 方法？\n\n```\np1.then(function(data){\n    // resolve状态\n    console.log(data); // 异步中传递数据\n}, function(data){\n    // reject状态，仅在Promise异步执行中调用reject方法后重置Promise状态为rejected时生效\n});\n```\n\n可知：then() 方法主要接受resolve和reject参数，且两个参数都是函数。仅当Promise状态为resolved时调用reslove函数，状态为rejected时调用reject函数\n\n- catch() 方法的使用\n\n\ncatch() 方法返回一个Promise，只处理拒绝的情况。它的行为与调用Promise.prototype.then(undefined, onRejected) 相同。但catch() 方法可以捕获异常错误，因此catch() 方法主要用做捕获抛出的错误。\n\n如何调用catch() 方法呢？\n\n```\np1.catch(function(reason){\n    // 拒绝\n})\n```\n\n可知：catch() 方法接受reason参数，如果 onRejected 抛出一个错误或返回一个失败的 Promise，Promise 通过 catch() 返回失败结果；否则，它将显示为成功。\n\n示例：\n\n使用链式语句的 catch方法\n\n```\nvar p1 = new Promise(function(resolve, reject) {\n    resolve('Success');\n});\n\np1.then(function(value) {\n    console.log(value); // \"成功!\"\n    throw 'oh, no!';\n}).catch(function(e) {\n    console.log(e); // \"oh, no!\"\n}).then(function(){\n    console.log('after a catch the chain is restored');\n}, function () {\n    console.log('Not fired due to the catch');\n});\n\n// 以下行为与上述相同\np1.then(function(value) {\n    console.log(value); // \"成功!\"\n    return Promise.reject('oh, no!');\n}).catch(function(e) {\n    console.log(e); // \"oh, no!\"\n}).then(function(){\n    console.log('after a catch the chain is restored');\n}, function () {\n    console.log('Not fired due to the catch');\n});\n```\n\n捕获抛出的错误\n\n```\n// 抛出一个错误，大多数时候将调用catch方法\nvar p1 = new Promise(function(resolve, reject) {\n    throw 'Uh-oh!';\n});\n\np1.catch(function(e) {\n    console.log(e); // \"Uh-oh!\"\n});\n```\n\n- all() 方法的使用\n\nPromise.all(iterable) 方法提供了并行执行异步操作的能力，当所有在可迭代参数中的 promises 已完成，或者第一个传递的 promise（指 reject）失败时，返回 promise。\n\n```\nvar p1 = new Promise(function(resolve, reject){\n    // 异步操作\n    setTimeout(function(){\n        resolve('传递数据01');\n    }, 1000);\n});\n\nvar p2 = new Promise(function(resolve, reject){\n    // 异步操作\n    setTimeout(function(){\n        resolve('传递数据02');\n    }, 1000);\n});\n\nvar p3 = new Promise(function(resolve, reject){\n    // 异步操作\n    setTimeout(function(){\n        resolve('传递数据03');\n    }, 1000);\n});\n\n// 全部resolved状态\nPromise.all([p1, p2, p3]).then(function(values){\n    console.log(values); // [\"传递数据01\", \"传递数据02\", \"传递数据03\"]\n});\n\n// p2,p3异步操作时调用reject() 方法\n// 则返回第一个rejected状态的Promise\nPromise.all([p1, p2, p3]).catch(function(values){\n    console.log(values); // \"传递数据02\"\n});\n```\n\n可知：Promise.all() 方法接受一个数组参数，数组参数中的每一项都是一个Promise对象。执行过程中如果有任何一项是rejected状态则返回当前项Promise否则全部resloved状态后返回Promise。\n\n- race() 方法的使用\n\nrace 函数返回一个 Promise，它将与第一个传递的 promise 相同的完成方式被完成。它可以是完成（ resolves），也可以是失败（rejects），这要取决于第一个完成的方式是两个中的哪个。\n\n```\nvar p1 = new Promise(function(resolve, reject) { \n    setTimeout(resolve, 500, \"one\"); \n});\nvar p2 = new Promise(function(resolve, reject) { \n    setTimeout(resolve, 100, \"two\"); \n});\n\nPromise.race([p1, p2]).then(function(value) {\n  console.log(value); // \"two\"\n  // 两个都完成，但 p2 更快\n});\n```\n\n- reject() 方法的使用\n\n静态函数Promise.reject返回一个被拒绝的Promise。使用是Error实例的reason对调试和选择性错误捕捉很有帮助。\n\n```\nPromise.reject(\"Testing static reject\").then(function(reason) {\n  // 未被调用\n}, function(reason) {\n  console.log(reason); // \"测试静态拒绝\"\n});\n\nPromise.reject(new Error(\"fail\")).then(function(error) {\n  // 未被调用\n}, function(error) {\n  console.log(error); // 堆栈跟踪\n});\n```\n- resolve() 方法的使用\n\nPromise.resolve(value)方法返回一个以给定值解析后的Promise对象。但如果这个值是个thenable（即带有then方法），返回的promise会“跟随”这个thenable的对象，采用它的最终状态（指resolved/rejected/pending/settled）；否则以该值为成功状态返回promise对象。\n\n使用静态方法Promise.resolve\n\n```\nPromise.resolve(\"Success\").then(function(value) {\n  console.log(value); // \"Success\"\n}, function(value) {\n  // 不会被调用\n});\n```\n\n对一个数组进行resolve\n\n```\nvar p = Promise.resolve([1,2,3]);\np.then(function(v) {\n  console.log(v[0]); // 1\n});\n```\n\nResolve另一个promise对象\n\n```\nvar original = Promise.resolve(true);\nvar cast = Promise.resolve(original);\ncast.then(function(v) {\n  console.log(v); // true\n});\n```\n\nresolve thenable的对象们并抛出错误\n\n```\n// Resolve一个thenable对象\nvar p1 = Promise.resolve({ \n  then: function(onFulfill, onReject) { onFulfill(\"fulfilled!\"); }\n});\nconsole.log(p1 instanceof Promise) // true, 这是一个Promise对象\n\np1.then(function(v) {\n    console.log(v); // 输出\"fulfilled!\"\n  }, function(e) {\n    // 不会被调用\n});\n\n// Thenable在callback之前抛出异常\n// Promise rejects\nvar thenable = { then: function(resolve) {\n  throw new TypeError(\"Throwing\");\n  resolve(\"Resolving\");\n}};\n\nvar p2 = Promise.resolve(thenable);\np2.then(function(v) {\n  // 不会被调用\n}, function(e) {\n  console.log(e); // TypeError: Throwing\n});\n\n// Thenable在callback之后抛出异常\n// Promise resolves\nvar thenable = { then: function(resolve) {\n  resolve(\"Resolving\");\n  throw new TypeError(\"Throwing\");\n}};\n\nvar p3 = Promise.resolve(thenable);\np3.then(function(v) {\n  console.log(v); // 输出\"Resolving\"\n}, function(e) {\n  // 不会被调用\n});\n```\n\n## 总结\n\n本篇文章主要是简单的介绍了Promise概念以及Promise常用方法的使用。文中所有异步操作均以setTimeout为例子，之所以不使用ajax是为了避免引起混淆，因为谈起ajax，很多人的第一反应就是jquery的ajax，而jquery又有自己的Promise实现。如果你理解了原理，就知道使用setTimeout和使用ajax是一样的意思。\n\n接下来还会有深入浅出 ES6 Promise讲解系列：\n\n- Promise 使用以及运用场景\n- Promise/A+规范\n- 搞懂jQuery中的Promise\n- 搞懂Promise、Generator、Async三者的异同\n- Promise 面试问题讲解\n\n## 参考\n\n- [Promises/A](http://wiki.commonjs.org/wiki/Promises/A)\n- [Promises/A+](https://promisesaplus.com/)\n- [Promises/A+规范](http://www.ituring.com.cn/article/66566)\n- [Promise对象/阮一峰](http://javascript.ruanyifeng.com/advanced/promise.html)\n- [Promise对象/MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- [面试中Promise相关问题](https://github.com/ElemeFE/node-interview/blob/master/sections/zh-cn/event-async.md#promise)\n","slug":"promise-of-chapter-1th","published":1,"updated":"2018-05-30T08:12:15.903Z","photos":[],"link":"","_id":"cjhubytlu0040yis5yac02a8c","content":"<p>最近这几年随着移动互联网的快速发展，前端的开发模式已悄悄地从多页面混合开发模式到单页面前后端分离开发模式的转变，基于MVVM模式的前端框架得到了繁荣发展。它们主要是<a href=\"http://knockoutjs.com/\" target=\"_blank\" rel=\"noopener\">knockoutjs</a>、<a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"noopener\">reactjs</a>、<a href=\"https://angular.io/\" target=\"_blank\" rel=\"noopener\">angularjs</a>、<a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">vuejs</a>等，其中<a href=\"https://baike.baidu.com/item/%E5%B0%A4%E9%9B%A8%E6%BA%AA/2281470?fr=aladdin\" target=\"_blank\" rel=\"noopener\">尤雨溪</a>开发的<a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">vuejs</a>框架在国内得到开发者的认可和支持。</p>\n<p>基于MVVM模式开发的框架能得到快速的发展主要得益于2015年6月份ES2015的正式发布（也就是ES6），其中Promise被列为正式规范，作为ES6中最重要的特性之一，我们有必要掌握并理解透彻。本文将由浅到深，讲解Promise的基本概念与使用方法。</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p><strong>Promise</strong> 对象用于一个异步操作的最终完成（或失败）及其结果值的表示。(简单点说就是处理异步请求。。我们经常会做些承诺，如果我赢了你就嫁给我，如果输了我就嫁给你之类的诺言。这就是promise的中文含义。一个诺言，一个成功，一个失败。)</p>\n<h2 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\" target=\"_blank\" rel=\"noopener\">Promise.all()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\" target=\"_blank\" rel=\"noopener\">Promise.prototype.catch()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\" target=\"_blank\" rel=\"noopener\">Promise.prototype.then()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\" target=\"_blank\" rel=\"noopener\">Promise.race()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\" target=\"_blank\" rel=\"noopener\">Promise.reject()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\" target=\"_blank\" rel=\"noopener\">Promise.resolve()</a></li>\n</ul>\n<h2 id=\"新手入门\"><a href=\"#新手入门\" class=\"headerlink\" title=\"新手入门\"></a>新手入门</h2><ul>\n<li>控制台中查看Promise真身</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(Promise)</span><br></pre></td></tr></table></figure>\n<p>可知：Promise是一个构造函数，有all、race、reject、resolve四个静态方法以及then和catch两个公共方法。</p>\n<ul>\n<li>实例化一个Promise对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    //做一些异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        console.log(&apos;异步中执行完成&apos;);</span><br><span class=\"line\">        resolve(&apos;异步中传递数据&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可知：Promise的构造函数接受一个executor参数，executor是一个带有resolve和reject两个参数的函数。executor 函数在Promise构造函数执行时同步执行，被传递resolve和reject函数（executor 函数在Promise构造函数返回新建对象前被调用）。resolve 和 reject 函数被调用时，分别将promise的状态改为fulfilled(完成)或rejected（失败）。executor 内部通常会执行一些异步操作，一旦完成，可以调用resolve函数来将promise状态改成fulfilled，或者在发生错误时将它的状态改为rejected。<br>如果在executor函数中抛出一个错误，那么该promise 状态为rejected。executor函数的返回值被忽略。</p>\n<p>在上面的代码中，我们执行了一个异步操作，也就是setTimeout，1秒后，输出“异步中执行完成”，并且调用resolve方法。</p>\n<ul>\n<li>then() 方法的使用</li>\n</ul>\n<p>步骤2中我们实例化了一个Promise对象p1并且我们在setTimeout执行中调用了resolve方法，重置了Promise状态为resolved。</p>\n<p>如何调用then() 方法？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1.then(function(data)&#123;</span><br><span class=\"line\">    // resolve状态</span><br><span class=\"line\">    console.log(data); // 异步中传递数据</span><br><span class=\"line\">&#125;, function(data)&#123;</span><br><span class=\"line\">    // reject状态，仅在Promise异步执行中调用reject方法后重置Promise状态为rejected时生效</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可知：then() 方法主要接受resolve和reject参数，且两个参数都是函数。仅当Promise状态为resolved时调用reslove函数，状态为rejected时调用reject函数</p>\n<ul>\n<li>catch() 方法的使用</li>\n</ul>\n<p>catch() 方法返回一个Promise，只处理拒绝的情况。它的行为与调用Promise.prototype.then(undefined, onRejected) 相同。但catch() 方法可以捕获异常错误，因此catch() 方法主要用做捕获抛出的错误。</p>\n<p>如何调用catch() 方法呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1.catch(function(reason)&#123;</span><br><span class=\"line\">    // 拒绝</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>可知：catch() 方法接受reason参数，如果 onRejected 抛出一个错误或返回一个失败的 Promise，Promise 通过 catch() 返回失败结果；否则，它将显示为成功。</p>\n<p>示例：</p>\n<p>使用链式语句的 catch方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject) &#123;</span><br><span class=\"line\">    resolve(&apos;Success&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p1.then(function(value) &#123;</span><br><span class=\"line\">    console.log(value); // &quot;成功!&quot;</span><br><span class=\"line\">    throw &apos;oh, no!&apos;;</span><br><span class=\"line\">&#125;).catch(function(e) &#123;</span><br><span class=\"line\">    console.log(e); // &quot;oh, no!&quot;</span><br><span class=\"line\">&#125;).then(function()&#123;</span><br><span class=\"line\">    console.log(&apos;after a catch the chain is restored&apos;);</span><br><span class=\"line\">&#125;, function () &#123;</span><br><span class=\"line\">    console.log(&apos;Not fired due to the catch&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 以下行为与上述相同</span><br><span class=\"line\">p1.then(function(value) &#123;</span><br><span class=\"line\">    console.log(value); // &quot;成功!&quot;</span><br><span class=\"line\">    return Promise.reject(&apos;oh, no!&apos;);</span><br><span class=\"line\">&#125;).catch(function(e) &#123;</span><br><span class=\"line\">    console.log(e); // &quot;oh, no!&quot;</span><br><span class=\"line\">&#125;).then(function()&#123;</span><br><span class=\"line\">    console.log(&apos;after a catch the chain is restored&apos;);</span><br><span class=\"line\">&#125;, function () &#123;</span><br><span class=\"line\">    console.log(&apos;Not fired due to the catch&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>捕获抛出的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 抛出一个错误，大多数时候将调用catch方法</span><br><span class=\"line\">var p1 = new Promise(function(resolve, reject) &#123;</span><br><span class=\"line\">    throw &apos;Uh-oh!&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p1.catch(function(e) &#123;</span><br><span class=\"line\">    console.log(e); // &quot;Uh-oh!&quot;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>all() 方法的使用</li>\n</ul>\n<p>Promise.all(iterable) 方法提供了并行执行异步操作的能力，当所有在可迭代参数中的 promises 已完成，或者第一个传递的 promise（指 reject）失败时，返回 promise。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    // 异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        resolve(&apos;传递数据01&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">var p2 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    // 异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        resolve(&apos;传递数据02&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">var p3 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    // 异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        resolve(&apos;传递数据03&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 全部resolved状态</span><br><span class=\"line\">Promise.all([p1, p2, p3]).then(function(values)&#123;</span><br><span class=\"line\">    console.log(values); // [&quot;传递数据01&quot;, &quot;传递数据02&quot;, &quot;传递数据03&quot;]</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// p2,p3异步操作时调用reject() 方法</span><br><span class=\"line\">// 则返回第一个rejected状态的Promise</span><br><span class=\"line\">Promise.all([p1, p2, p3]).catch(function(values)&#123;</span><br><span class=\"line\">    console.log(values); // &quot;传递数据02&quot;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可知：Promise.all() 方法接受一个数组参数，数组参数中的每一项都是一个Promise对象。执行过程中如果有任何一项是rejected状态则返回当前项Promise否则全部resloved状态后返回Promise。</p>\n<ul>\n<li>race() 方法的使用</li>\n</ul>\n<p>race 函数返回一个 Promise，它将与第一个传递的 promise 相同的完成方式被完成。它可以是完成（ resolves），也可以是失败（rejects），这要取决于第一个完成的方式是两个中的哪个。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject) &#123; </span><br><span class=\"line\">    setTimeout(resolve, 500, &quot;one&quot;); </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">var p2 = new Promise(function(resolve, reject) &#123; </span><br><span class=\"line\">    setTimeout(resolve, 100, &quot;two&quot;); </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.race([p1, p2]).then(function(value) &#123;</span><br><span class=\"line\">  console.log(value); // &quot;two&quot;</span><br><span class=\"line\">  // 两个都完成，但 p2 更快</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>reject() 方法的使用</li>\n</ul>\n<p>静态函数Promise.reject返回一个被拒绝的Promise。使用是Error实例的reason对调试和选择性错误捕捉很有帮助。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Promise.reject(&quot;Testing static reject&quot;).then(function(reason) &#123;</span><br><span class=\"line\">  // 未被调用</span><br><span class=\"line\">&#125;, function(reason) &#123;</span><br><span class=\"line\">  console.log(reason); // &quot;测试静态拒绝&quot;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.reject(new Error(&quot;fail&quot;)).then(function(error) &#123;</span><br><span class=\"line\">  // 未被调用</span><br><span class=\"line\">&#125;, function(error) &#123;</span><br><span class=\"line\">  console.log(error); // 堆栈跟踪</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>resolve() 方法的使用</li>\n</ul>\n<p>Promise.resolve(value)方法返回一个以给定值解析后的Promise对象。但如果这个值是个thenable（即带有then方法），返回的promise会“跟随”这个thenable的对象，采用它的最终状态（指resolved/rejected/pending/settled）；否则以该值为成功状态返回promise对象。</p>\n<p>使用静态方法Promise.resolve</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Promise.resolve(&quot;Success&quot;).then(function(value) &#123;</span><br><span class=\"line\">  console.log(value); // &quot;Success&quot;</span><br><span class=\"line\">&#125;, function(value) &#123;</span><br><span class=\"line\">  // 不会被调用</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>对一个数组进行resolve</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p = Promise.resolve([1,2,3]);</span><br><span class=\"line\">p.then(function(v) &#123;</span><br><span class=\"line\">  console.log(v[0]); // 1</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Resolve另一个promise对象</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var original = Promise.resolve(true);</span><br><span class=\"line\">var cast = Promise.resolve(original);</span><br><span class=\"line\">cast.then(function(v) &#123;</span><br><span class=\"line\">  console.log(v); // true</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>resolve thenable的对象们并抛出错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Resolve一个thenable对象</span><br><span class=\"line\">var p1 = Promise.resolve(&#123; </span><br><span class=\"line\">  then: function(onFulfill, onReject) &#123; onFulfill(&quot;fulfilled!&quot;); &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">console.log(p1 instanceof Promise) // true, 这是一个Promise对象</span><br><span class=\"line\"></span><br><span class=\"line\">p1.then(function(v) &#123;</span><br><span class=\"line\">    console.log(v); // 输出&quot;fulfilled!&quot;</span><br><span class=\"line\">  &#125;, function(e) &#123;</span><br><span class=\"line\">    // 不会被调用</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Thenable在callback之前抛出异常</span><br><span class=\"line\">// Promise rejects</span><br><span class=\"line\">var thenable = &#123; then: function(resolve) &#123;</span><br><span class=\"line\">  throw new TypeError(&quot;Throwing&quot;);</span><br><span class=\"line\">  resolve(&quot;Resolving&quot;);</span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">var p2 = Promise.resolve(thenable);</span><br><span class=\"line\">p2.then(function(v) &#123;</span><br><span class=\"line\">  // 不会被调用</span><br><span class=\"line\">&#125;, function(e) &#123;</span><br><span class=\"line\">  console.log(e); // TypeError: Throwing</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Thenable在callback之后抛出异常</span><br><span class=\"line\">// Promise resolves</span><br><span class=\"line\">var thenable = &#123; then: function(resolve) &#123;</span><br><span class=\"line\">  resolve(&quot;Resolving&quot;);</span><br><span class=\"line\">  throw new TypeError(&quot;Throwing&quot;);</span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">var p3 = Promise.resolve(thenable);</span><br><span class=\"line\">p3.then(function(v) &#123;</span><br><span class=\"line\">  console.log(v); // 输出&quot;Resolving&quot;</span><br><span class=\"line\">&#125;, function(e) &#123;</span><br><span class=\"line\">  // 不会被调用</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本篇文章主要是简单的介绍了Promise概念以及Promise常用方法的使用。文中所有异步操作均以setTimeout为例子，之所以不使用ajax是为了避免引起混淆，因为谈起ajax，很多人的第一反应就是jquery的ajax，而jquery又有自己的Promise实现。如果你理解了原理，就知道使用setTimeout和使用ajax是一样的意思。</p>\n<p>接下来还会有深入浅出 ES6 Promise讲解系列：</p>\n<ul>\n<li>Promise 使用以及运用场景</li>\n<li>Promise/A+规范</li>\n<li>搞懂jQuery中的Promise</li>\n<li>搞懂Promise、Generator、Async三者的异同</li>\n<li>Promise 面试问题讲解</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://wiki.commonjs.org/wiki/Promises/A\" target=\"_blank\" rel=\"noopener\">Promises/A</a></li>\n<li><a href=\"https://promisesaplus.com/\" target=\"_blank\" rel=\"noopener\">Promises/A+</a></li>\n<li><a href=\"http://www.ituring.com.cn/article/66566\" target=\"_blank\" rel=\"noopener\">Promises/A+规范</a></li>\n<li><a href=\"http://javascript.ruanyifeng.com/advanced/promise.html\" target=\"_blank\" rel=\"noopener\">Promise对象/阮一峰</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener\">Promise对象/MDN</a></li>\n<li><a href=\"https://github.com/ElemeFE/node-interview/blob/master/sections/zh-cn/event-async.md#promise\" target=\"_blank\" rel=\"noopener\">面试中Promise相关问题</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>最近这几年随着移动互联网的快速发展，前端的开发模式已悄悄地从多页面混合开发模式到单页面前后端分离开发模式的转变，基于MVVM模式的前端框架得到了繁荣发展。它们主要是<a href=\"http://knockoutjs.com/\" target=\"_blank\" rel=\"noopener\">knockoutjs</a>、<a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"noopener\">reactjs</a>、<a href=\"https://angular.io/\" target=\"_blank\" rel=\"noopener\">angularjs</a>、<a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">vuejs</a>等，其中<a href=\"https://baike.baidu.com/item/%E5%B0%A4%E9%9B%A8%E6%BA%AA/2281470?fr=aladdin\" target=\"_blank\" rel=\"noopener\">尤雨溪</a>开发的<a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">vuejs</a>框架在国内得到开发者的认可和支持。</p>\n<p>基于MVVM模式开发的框架能得到快速的发展主要得益于2015年6月份ES2015的正式发布（也就是ES6），其中Promise被列为正式规范，作为ES6中最重要的特性之一，我们有必要掌握并理解透彻。本文将由浅到深，讲解Promise的基本概念与使用方法。</p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p><strong>Promise</strong> 对象用于一个异步操作的最终完成（或失败）及其结果值的表示。(简单点说就是处理异步请求。。我们经常会做些承诺，如果我赢了你就嫁给我，如果输了我就嫁给你之类的诺言。这就是promise的中文含义。一个诺言，一个成功，一个失败。)</p>\n<h2 id=\"常用方法\"><a href=\"#常用方法\" class=\"headerlink\" title=\"常用方法\"></a>常用方法</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\" target=\"_blank\" rel=\"noopener\">Promise.all()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch\" target=\"_blank\" rel=\"noopener\">Promise.prototype.catch()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\" target=\"_blank\" rel=\"noopener\">Promise.prototype.then()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\" target=\"_blank\" rel=\"noopener\">Promise.race()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject\" target=\"_blank\" rel=\"noopener\">Promise.reject()</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\" target=\"_blank\" rel=\"noopener\">Promise.resolve()</a></li>\n</ul>\n<h2 id=\"新手入门\"><a href=\"#新手入门\" class=\"headerlink\" title=\"新手入门\"></a>新手入门</h2><ul>\n<li>控制台中查看Promise真身</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(Promise)</span><br></pre></td></tr></table></figure>\n<p>可知：Promise是一个构造函数，有all、race、reject、resolve四个静态方法以及then和catch两个公共方法。</p>\n<ul>\n<li>实例化一个Promise对象</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    //做一些异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        console.log(&apos;异步中执行完成&apos;);</span><br><span class=\"line\">        resolve(&apos;异步中传递数据&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可知：Promise的构造函数接受一个executor参数，executor是一个带有resolve和reject两个参数的函数。executor 函数在Promise构造函数执行时同步执行，被传递resolve和reject函数（executor 函数在Promise构造函数返回新建对象前被调用）。resolve 和 reject 函数被调用时，分别将promise的状态改为fulfilled(完成)或rejected（失败）。executor 内部通常会执行一些异步操作，一旦完成，可以调用resolve函数来将promise状态改成fulfilled，或者在发生错误时将它的状态改为rejected。<br>如果在executor函数中抛出一个错误，那么该promise 状态为rejected。executor函数的返回值被忽略。</p>\n<p>在上面的代码中，我们执行了一个异步操作，也就是setTimeout，1秒后，输出“异步中执行完成”，并且调用resolve方法。</p>\n<ul>\n<li>then() 方法的使用</li>\n</ul>\n<p>步骤2中我们实例化了一个Promise对象p1并且我们在setTimeout执行中调用了resolve方法，重置了Promise状态为resolved。</p>\n<p>如何调用then() 方法？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1.then(function(data)&#123;</span><br><span class=\"line\">    // resolve状态</span><br><span class=\"line\">    console.log(data); // 异步中传递数据</span><br><span class=\"line\">&#125;, function(data)&#123;</span><br><span class=\"line\">    // reject状态，仅在Promise异步执行中调用reject方法后重置Promise状态为rejected时生效</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可知：then() 方法主要接受resolve和reject参数，且两个参数都是函数。仅当Promise状态为resolved时调用reslove函数，状态为rejected时调用reject函数</p>\n<ul>\n<li>catch() 方法的使用</li>\n</ul>\n<p>catch() 方法返回一个Promise，只处理拒绝的情况。它的行为与调用Promise.prototype.then(undefined, onRejected) 相同。但catch() 方法可以捕获异常错误，因此catch() 方法主要用做捕获抛出的错误。</p>\n<p>如何调用catch() 方法呢？</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p1.catch(function(reason)&#123;</span><br><span class=\"line\">    // 拒绝</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>可知：catch() 方法接受reason参数，如果 onRejected 抛出一个错误或返回一个失败的 Promise，Promise 通过 catch() 返回失败结果；否则，它将显示为成功。</p>\n<p>示例：</p>\n<p>使用链式语句的 catch方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject) &#123;</span><br><span class=\"line\">    resolve(&apos;Success&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p1.then(function(value) &#123;</span><br><span class=\"line\">    console.log(value); // &quot;成功!&quot;</span><br><span class=\"line\">    throw &apos;oh, no!&apos;;</span><br><span class=\"line\">&#125;).catch(function(e) &#123;</span><br><span class=\"line\">    console.log(e); // &quot;oh, no!&quot;</span><br><span class=\"line\">&#125;).then(function()&#123;</span><br><span class=\"line\">    console.log(&apos;after a catch the chain is restored&apos;);</span><br><span class=\"line\">&#125;, function () &#123;</span><br><span class=\"line\">    console.log(&apos;Not fired due to the catch&apos;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 以下行为与上述相同</span><br><span class=\"line\">p1.then(function(value) &#123;</span><br><span class=\"line\">    console.log(value); // &quot;成功!&quot;</span><br><span class=\"line\">    return Promise.reject(&apos;oh, no!&apos;);</span><br><span class=\"line\">&#125;).catch(function(e) &#123;</span><br><span class=\"line\">    console.log(e); // &quot;oh, no!&quot;</span><br><span class=\"line\">&#125;).then(function()&#123;</span><br><span class=\"line\">    console.log(&apos;after a catch the chain is restored&apos;);</span><br><span class=\"line\">&#125;, function () &#123;</span><br><span class=\"line\">    console.log(&apos;Not fired due to the catch&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>捕获抛出的错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 抛出一个错误，大多数时候将调用catch方法</span><br><span class=\"line\">var p1 = new Promise(function(resolve, reject) &#123;</span><br><span class=\"line\">    throw &apos;Uh-oh!&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">p1.catch(function(e) &#123;</span><br><span class=\"line\">    console.log(e); // &quot;Uh-oh!&quot;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>all() 方法的使用</li>\n</ul>\n<p>Promise.all(iterable) 方法提供了并行执行异步操作的能力，当所有在可迭代参数中的 promises 已完成，或者第一个传递的 promise（指 reject）失败时，返回 promise。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    // 异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        resolve(&apos;传递数据01&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">var p2 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    // 异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        resolve(&apos;传递数据02&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">var p3 = new Promise(function(resolve, reject)&#123;</span><br><span class=\"line\">    // 异步操作</span><br><span class=\"line\">    setTimeout(function()&#123;</span><br><span class=\"line\">        resolve(&apos;传递数据03&apos;);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 全部resolved状态</span><br><span class=\"line\">Promise.all([p1, p2, p3]).then(function(values)&#123;</span><br><span class=\"line\">    console.log(values); // [&quot;传递数据01&quot;, &quot;传递数据02&quot;, &quot;传递数据03&quot;]</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// p2,p3异步操作时调用reject() 方法</span><br><span class=\"line\">// 则返回第一个rejected状态的Promise</span><br><span class=\"line\">Promise.all([p1, p2, p3]).catch(function(values)&#123;</span><br><span class=\"line\">    console.log(values); // &quot;传递数据02&quot;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>可知：Promise.all() 方法接受一个数组参数，数组参数中的每一项都是一个Promise对象。执行过程中如果有任何一项是rejected状态则返回当前项Promise否则全部resloved状态后返回Promise。</p>\n<ul>\n<li>race() 方法的使用</li>\n</ul>\n<p>race 函数返回一个 Promise，它将与第一个传递的 promise 相同的完成方式被完成。它可以是完成（ resolves），也可以是失败（rejects），这要取决于第一个完成的方式是两个中的哪个。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p1 = new Promise(function(resolve, reject) &#123; </span><br><span class=\"line\">    setTimeout(resolve, 500, &quot;one&quot;); </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">var p2 = new Promise(function(resolve, reject) &#123; </span><br><span class=\"line\">    setTimeout(resolve, 100, &quot;two&quot;); </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.race([p1, p2]).then(function(value) &#123;</span><br><span class=\"line\">  console.log(value); // &quot;two&quot;</span><br><span class=\"line\">  // 两个都完成，但 p2 更快</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>reject() 方法的使用</li>\n</ul>\n<p>静态函数Promise.reject返回一个被拒绝的Promise。使用是Error实例的reason对调试和选择性错误捕捉很有帮助。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Promise.reject(&quot;Testing static reject&quot;).then(function(reason) &#123;</span><br><span class=\"line\">  // 未被调用</span><br><span class=\"line\">&#125;, function(reason) &#123;</span><br><span class=\"line\">  console.log(reason); // &quot;测试静态拒绝&quot;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.reject(new Error(&quot;fail&quot;)).then(function(error) &#123;</span><br><span class=\"line\">  // 未被调用</span><br><span class=\"line\">&#125;, function(error) &#123;</span><br><span class=\"line\">  console.log(error); // 堆栈跟踪</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>resolve() 方法的使用</li>\n</ul>\n<p>Promise.resolve(value)方法返回一个以给定值解析后的Promise对象。但如果这个值是个thenable（即带有then方法），返回的promise会“跟随”这个thenable的对象，采用它的最终状态（指resolved/rejected/pending/settled）；否则以该值为成功状态返回promise对象。</p>\n<p>使用静态方法Promise.resolve</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Promise.resolve(&quot;Success&quot;).then(function(value) &#123;</span><br><span class=\"line\">  console.log(value); // &quot;Success&quot;</span><br><span class=\"line\">&#125;, function(value) &#123;</span><br><span class=\"line\">  // 不会被调用</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>对一个数组进行resolve</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var p = Promise.resolve([1,2,3]);</span><br><span class=\"line\">p.then(function(v) &#123;</span><br><span class=\"line\">  console.log(v[0]); // 1</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>Resolve另一个promise对象</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var original = Promise.resolve(true);</span><br><span class=\"line\">var cast = Promise.resolve(original);</span><br><span class=\"line\">cast.then(function(v) &#123;</span><br><span class=\"line\">  console.log(v); // true</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>resolve thenable的对象们并抛出错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Resolve一个thenable对象</span><br><span class=\"line\">var p1 = Promise.resolve(&#123; </span><br><span class=\"line\">  then: function(onFulfill, onReject) &#123; onFulfill(&quot;fulfilled!&quot;); &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">console.log(p1 instanceof Promise) // true, 这是一个Promise对象</span><br><span class=\"line\"></span><br><span class=\"line\">p1.then(function(v) &#123;</span><br><span class=\"line\">    console.log(v); // 输出&quot;fulfilled!&quot;</span><br><span class=\"line\">  &#125;, function(e) &#123;</span><br><span class=\"line\">    // 不会被调用</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Thenable在callback之前抛出异常</span><br><span class=\"line\">// Promise rejects</span><br><span class=\"line\">var thenable = &#123; then: function(resolve) &#123;</span><br><span class=\"line\">  throw new TypeError(&quot;Throwing&quot;);</span><br><span class=\"line\">  resolve(&quot;Resolving&quot;);</span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">var p2 = Promise.resolve(thenable);</span><br><span class=\"line\">p2.then(function(v) &#123;</span><br><span class=\"line\">  // 不会被调用</span><br><span class=\"line\">&#125;, function(e) &#123;</span><br><span class=\"line\">  console.log(e); // TypeError: Throwing</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// Thenable在callback之后抛出异常</span><br><span class=\"line\">// Promise resolves</span><br><span class=\"line\">var thenable = &#123; then: function(resolve) &#123;</span><br><span class=\"line\">  resolve(&quot;Resolving&quot;);</span><br><span class=\"line\">  throw new TypeError(&quot;Throwing&quot;);</span><br><span class=\"line\">&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">var p3 = Promise.resolve(thenable);</span><br><span class=\"line\">p3.then(function(v) &#123;</span><br><span class=\"line\">  console.log(v); // 输出&quot;Resolving&quot;</span><br><span class=\"line\">&#125;, function(e) &#123;</span><br><span class=\"line\">  // 不会被调用</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本篇文章主要是简单的介绍了Promise概念以及Promise常用方法的使用。文中所有异步操作均以setTimeout为例子，之所以不使用ajax是为了避免引起混淆，因为谈起ajax，很多人的第一反应就是jquery的ajax，而jquery又有自己的Promise实现。如果你理解了原理，就知道使用setTimeout和使用ajax是一样的意思。</p>\n<p>接下来还会有深入浅出 ES6 Promise讲解系列：</p>\n<ul>\n<li>Promise 使用以及运用场景</li>\n<li>Promise/A+规范</li>\n<li>搞懂jQuery中的Promise</li>\n<li>搞懂Promise、Generator、Async三者的异同</li>\n<li>Promise 面试问题讲解</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"http://wiki.commonjs.org/wiki/Promises/A\" target=\"_blank\" rel=\"noopener\">Promises/A</a></li>\n<li><a href=\"https://promisesaplus.com/\" target=\"_blank\" rel=\"noopener\">Promises/A+</a></li>\n<li><a href=\"http://www.ituring.com.cn/article/66566\" target=\"_blank\" rel=\"noopener\">Promises/A+规范</a></li>\n<li><a href=\"http://javascript.ruanyifeng.com/advanced/promise.html\" target=\"_blank\" rel=\"noopener\">Promise对象/阮一峰</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener\">Promise对象/MDN</a></li>\n<li><a href=\"https://github.com/ElemeFE/node-interview/blob/master/sections/zh-cn/event-async.md#promise\" target=\"_blank\" rel=\"noopener\">面试中Promise相关问题</a></li>\n</ul>\n"},{"layout":"post","title":"论在互联网金融公司工作的新体验","date":"2017-08-27T02:25:00.000Z","comments":1,"_content":"\n最近在公司接受了蛮多的培训和分享，对互联网金融有了较新的认识。由此也就想写一篇关于（技术人员）在互联网金融公司工作的新体验，以此来对比（回顾）一下和普通互联网的工作的不同体验。对比指标仅参考个人曾工作或熟知的公司，不做行业间公司的相关指标对比。\n\n**工作时间**\n\n相比于普通互联网公司，在互联网金融公司工作时间更加的**弹性化**和**人性化**，例如：上班时间：8:30 ~ 10:00 下班时间：16:30 ~ 18:00 加班时间：正常不多，感觉还是挻赞的有木有^_^。\n\n**工作文化**\n\n相比于普通互联网公司，在互联网金融公司工作文化方面有诸多的差异：\n\n- 在工作环境上大同小异，可能金融元素会体现的多一些；\n- 在研发模式上基本上也没有什么差别，但在敏捷迭代、前后端分离、持续集成、数据分析和数据安全等方面有较多的积累，其中前端：node + express + swig + angular/react/vue 后端：java 管理：BitBucket + JIRA + Confluence + Jenkins；\n- 在研发流程上基本上也是遵循着需求评审-UX评审-UI评审-研发阶段-测试阶段-验收阶段-正式发布这一常规流程，但其中有两个重要的角色-产品经理和项目经理，相比于普通互联网公司可能缺少项目经理这一角色，同时对研发阶段、测试阶段和发布阶段有较多的case规范；\n- 在研发过程中还是有一些差异，主要有：a. 详细的迭代任务卡 b. 详细的迭代操作记录 c. 严格的代码review d. 完善的接口文档 e. 各种丰富的工具集\n\n**企业文化**\n\n相比于普通互联网公司，在互联网金融公司会有较多的金融小知识、安全开发、信息安全意识和网络安全等多方面的培训学习来增强大家的自我防范和自我保护意识。\n\n**写在最后**\n\n互联网金融公司由其特有的性质，直接或间接面对金钱相关，因此在生活和工作各方面要时刻保持高度地自我防范意识，避免造成不必要的麻烦。做到在生活过程中要有主动的自我防范意识，不讨论或透露任何与工作相关的内容；在工作过程中尽量使用公司许可的正版软件或开源的自由软件；在开发过程中要注意代码质量同时也要注意代码安全和代码性能问题；在做技术方案或者技术选型过程中也要考虑是否存在技术使用上的风险问题，尽可能的选择开源技术，避免产生不确定的外在因素。\n\n以上内容仅表达个人观点，感觉写的也不是很全面，时间允许的话后面再慢慢完善吧！","source":"_posts/2017-08-27-A-new-experience-in-the-work-of-Internet-finance-companies.md","raw":"---\nlayout: post\ntitle: 论在互联网金融公司工作的新体验\ndate: 2017-08-27 10:25\ncomments: true\ncategories: [水]\n---\n\n最近在公司接受了蛮多的培训和分享，对互联网金融有了较新的认识。由此也就想写一篇关于（技术人员）在互联网金融公司工作的新体验，以此来对比（回顾）一下和普通互联网的工作的不同体验。对比指标仅参考个人曾工作或熟知的公司，不做行业间公司的相关指标对比。\n\n**工作时间**\n\n相比于普通互联网公司，在互联网金融公司工作时间更加的**弹性化**和**人性化**，例如：上班时间：8:30 ~ 10:00 下班时间：16:30 ~ 18:00 加班时间：正常不多，感觉还是挻赞的有木有^_^。\n\n**工作文化**\n\n相比于普通互联网公司，在互联网金融公司工作文化方面有诸多的差异：\n\n- 在工作环境上大同小异，可能金融元素会体现的多一些；\n- 在研发模式上基本上也没有什么差别，但在敏捷迭代、前后端分离、持续集成、数据分析和数据安全等方面有较多的积累，其中前端：node + express + swig + angular/react/vue 后端：java 管理：BitBucket + JIRA + Confluence + Jenkins；\n- 在研发流程上基本上也是遵循着需求评审-UX评审-UI评审-研发阶段-测试阶段-验收阶段-正式发布这一常规流程，但其中有两个重要的角色-产品经理和项目经理，相比于普通互联网公司可能缺少项目经理这一角色，同时对研发阶段、测试阶段和发布阶段有较多的case规范；\n- 在研发过程中还是有一些差异，主要有：a. 详细的迭代任务卡 b. 详细的迭代操作记录 c. 严格的代码review d. 完善的接口文档 e. 各种丰富的工具集\n\n**企业文化**\n\n相比于普通互联网公司，在互联网金融公司会有较多的金融小知识、安全开发、信息安全意识和网络安全等多方面的培训学习来增强大家的自我防范和自我保护意识。\n\n**写在最后**\n\n互联网金融公司由其特有的性质，直接或间接面对金钱相关，因此在生活和工作各方面要时刻保持高度地自我防范意识，避免造成不必要的麻烦。做到在生活过程中要有主动的自我防范意识，不讨论或透露任何与工作相关的内容；在工作过程中尽量使用公司许可的正版软件或开源的自由软件；在开发过程中要注意代码质量同时也要注意代码安全和代码性能问题；在做技术方案或者技术选型过程中也要考虑是否存在技术使用上的风险问题，尽可能的选择开源技术，避免产生不确定的外在因素。\n\n以上内容仅表达个人观点，感觉写的也不是很全面，时间允许的话后面再慢慢完善吧！","slug":"A-new-experience-in-the-work-of-Internet-finance-companies","published":1,"updated":"2018-05-30T08:12:15.906Z","photos":[],"link":"","_id":"cjhubytlw0044yis5yhqfigv9","content":"<p>最近在公司接受了蛮多的培训和分享，对互联网金融有了较新的认识。由此也就想写一篇关于（技术人员）在互联网金融公司工作的新体验，以此来对比（回顾）一下和普通互联网的工作的不同体验。对比指标仅参考个人曾工作或熟知的公司，不做行业间公司的相关指标对比。</p>\n<p><strong>工作时间</strong></p>\n<p>相比于普通互联网公司，在互联网金融公司工作时间更加的<strong>弹性化</strong>和<strong>人性化</strong>，例如：上班时间：8:30 ~ 10:00 下班时间：16:30 ~ 18:00 加班时间：正常不多，感觉还是挻赞的有木有^_^。</p>\n<p><strong>工作文化</strong></p>\n<p>相比于普通互联网公司，在互联网金融公司工作文化方面有诸多的差异：</p>\n<ul>\n<li>在工作环境上大同小异，可能金融元素会体现的多一些；</li>\n<li>在研发模式上基本上也没有什么差别，但在敏捷迭代、前后端分离、持续集成、数据分析和数据安全等方面有较多的积累，其中前端：node + express + swig + angular/react/vue 后端：java 管理：BitBucket + JIRA + Confluence + Jenkins；</li>\n<li>在研发流程上基本上也是遵循着需求评审-UX评审-UI评审-研发阶段-测试阶段-验收阶段-正式发布这一常规流程，但其中有两个重要的角色-产品经理和项目经理，相比于普通互联网公司可能缺少项目经理这一角色，同时对研发阶段、测试阶段和发布阶段有较多的case规范；</li>\n<li>在研发过程中还是有一些差异，主要有：a. 详细的迭代任务卡 b. 详细的迭代操作记录 c. 严格的代码review d. 完善的接口文档 e. 各种丰富的工具集</li>\n</ul>\n<p><strong>企业文化</strong></p>\n<p>相比于普通互联网公司，在互联网金融公司会有较多的金融小知识、安全开发、信息安全意识和网络安全等多方面的培训学习来增强大家的自我防范和自我保护意识。</p>\n<p><strong>写在最后</strong></p>\n<p>互联网金融公司由其特有的性质，直接或间接面对金钱相关，因此在生活和工作各方面要时刻保持高度地自我防范意识，避免造成不必要的麻烦。做到在生活过程中要有主动的自我防范意识，不讨论或透露任何与工作相关的内容；在工作过程中尽量使用公司许可的正版软件或开源的自由软件；在开发过程中要注意代码质量同时也要注意代码安全和代码性能问题；在做技术方案或者技术选型过程中也要考虑是否存在技术使用上的风险问题，尽可能的选择开源技术，避免产生不确定的外在因素。</p>\n<p>以上内容仅表达个人观点，感觉写的也不是很全面，时间允许的话后面再慢慢完善吧！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近在公司接受了蛮多的培训和分享，对互联网金融有了较新的认识。由此也就想写一篇关于（技术人员）在互联网金融公司工作的新体验，以此来对比（回顾）一下和普通互联网的工作的不同体验。对比指标仅参考个人曾工作或熟知的公司，不做行业间公司的相关指标对比。</p>\n<p><strong>工作时间</strong></p>\n<p>相比于普通互联网公司，在互联网金融公司工作时间更加的<strong>弹性化</strong>和<strong>人性化</strong>，例如：上班时间：8:30 ~ 10:00 下班时间：16:30 ~ 18:00 加班时间：正常不多，感觉还是挻赞的有木有^_^。</p>\n<p><strong>工作文化</strong></p>\n<p>相比于普通互联网公司，在互联网金融公司工作文化方面有诸多的差异：</p>\n<ul>\n<li>在工作环境上大同小异，可能金融元素会体现的多一些；</li>\n<li>在研发模式上基本上也没有什么差别，但在敏捷迭代、前后端分离、持续集成、数据分析和数据安全等方面有较多的积累，其中前端：node + express + swig + angular/react/vue 后端：java 管理：BitBucket + JIRA + Confluence + Jenkins；</li>\n<li>在研发流程上基本上也是遵循着需求评审-UX评审-UI评审-研发阶段-测试阶段-验收阶段-正式发布这一常规流程，但其中有两个重要的角色-产品经理和项目经理，相比于普通互联网公司可能缺少项目经理这一角色，同时对研发阶段、测试阶段和发布阶段有较多的case规范；</li>\n<li>在研发过程中还是有一些差异，主要有：a. 详细的迭代任务卡 b. 详细的迭代操作记录 c. 严格的代码review d. 完善的接口文档 e. 各种丰富的工具集</li>\n</ul>\n<p><strong>企业文化</strong></p>\n<p>相比于普通互联网公司，在互联网金融公司会有较多的金融小知识、安全开发、信息安全意识和网络安全等多方面的培训学习来增强大家的自我防范和自我保护意识。</p>\n<p><strong>写在最后</strong></p>\n<p>互联网金融公司由其特有的性质，直接或间接面对金钱相关，因此在生活和工作各方面要时刻保持高度地自我防范意识，避免造成不必要的麻烦。做到在生活过程中要有主动的自我防范意识，不讨论或透露任何与工作相关的内容；在工作过程中尽量使用公司许可的正版软件或开源的自由软件；在开发过程中要注意代码质量同时也要注意代码安全和代码性能问题；在做技术方案或者技术选型过程中也要考虑是否存在技术使用上的风险问题，尽可能的选择开源技术，避免产生不确定的外在因素。</p>\n<p>以上内容仅表达个人观点，感觉写的也不是很全面，时间允许的话后面再慢慢完善吧！</p>\n"},{"layout":"post","title":"关于点融黑帮","date":"2017-09-14T12:24:00.000Z","comments":1,"_content":"\n### 点融黑帮是什么？\n\n点融黑帮——点融网的核心技术团队。\n\n一个快速发展的团队，一群志同道合的人。\n\n这里，实实在在，真心做事，平心做人。\n\n### 我们在做什么？\n\n我们在用技术创新改变传统金融，我们希望改变世界，我们需要你能用你的力量，让更多人，更幸福地、更好地生活在这个地球上。\n\n### 点融黑帮在哪 ？\n\n现位于上海黄浦区8号桥4期办公区，环境舒适优雅。\n\n![办公室环境图片01](../assets/pic/dianrong/office-01@640.jpeg)\n\n![办公室环境图片02](../assets/pic/dianrong/office-02@640.jpeg)\n\n### 点融黑帮是群什么样的人？\n\n在这里与帅哥美女一起共事，这里没有办公室政治，没有乏味的会议——全部都是热爱生活，热爱旅行的小伙伴。\n\n动不动骑行大半个中国的PHP大神，一个人背包走过丝路的前端女神，放弃300万年薪环游世界的投行大牛，他们是最酷的小伙伴！\n\n### 听听他们对我们怎么说？\n\n创始人Soul说一个公司、一个人最重要的是 to be honest ，然而，我的前任企业们都做不到，而这对我来说，很重要。点融黑帮无论何事都能说到做到，这让我很是安心也很佩服。\n\n—Andrew\n\n\n来到点融前，3年半的时间，我有2次创业，烧了投资人几百万。当时很深的体会，凭个人能力真的很难做大事。点融也算一眼相中，来了之后，发现没来错，因为这里空间很大，队友很强，很多在原来看来很困难的事在这就成了。                      \n\n—Max\n\n\n开放的文化提供了创新和突破的土壤。大学里，经历了从社会学到计算机的跨专业挑战；工作后，又一次尝试从研究员到开发运维的转型。点融黑帮打造了一个完全开放的工作平台，让我敢于尝试和挑战，发现无尽的可能和未知的精彩。\n\n—Tony\n","source":"_posts/2017-09-14-about-dianrong-mafia.md","raw":"---\nlayout: post\ntitle: 关于点融黑帮\ndate: 2017-09-14 20:24\ncomments: true\ncategories: [水]\n---\n\n### 点融黑帮是什么？\n\n点融黑帮——点融网的核心技术团队。\n\n一个快速发展的团队，一群志同道合的人。\n\n这里，实实在在，真心做事，平心做人。\n\n### 我们在做什么？\n\n我们在用技术创新改变传统金融，我们希望改变世界，我们需要你能用你的力量，让更多人，更幸福地、更好地生活在这个地球上。\n\n### 点融黑帮在哪 ？\n\n现位于上海黄浦区8号桥4期办公区，环境舒适优雅。\n\n![办公室环境图片01](../assets/pic/dianrong/office-01@640.jpeg)\n\n![办公室环境图片02](../assets/pic/dianrong/office-02@640.jpeg)\n\n### 点融黑帮是群什么样的人？\n\n在这里与帅哥美女一起共事，这里没有办公室政治，没有乏味的会议——全部都是热爱生活，热爱旅行的小伙伴。\n\n动不动骑行大半个中国的PHP大神，一个人背包走过丝路的前端女神，放弃300万年薪环游世界的投行大牛，他们是最酷的小伙伴！\n\n### 听听他们对我们怎么说？\n\n创始人Soul说一个公司、一个人最重要的是 to be honest ，然而，我的前任企业们都做不到，而这对我来说，很重要。点融黑帮无论何事都能说到做到，这让我很是安心也很佩服。\n\n—Andrew\n\n\n来到点融前，3年半的时间，我有2次创业，烧了投资人几百万。当时很深的体会，凭个人能力真的很难做大事。点融也算一眼相中，来了之后，发现没来错，因为这里空间很大，队友很强，很多在原来看来很困难的事在这就成了。                      \n\n—Max\n\n\n开放的文化提供了创新和突破的土壤。大学里，经历了从社会学到计算机的跨专业挑战；工作后，又一次尝试从研究员到开发运维的转型。点融黑帮打造了一个完全开放的工作平台，让我敢于尝试和挑战，发现无尽的可能和未知的精彩。\n\n—Tony\n","slug":"about-dianrong-mafia","published":1,"updated":"2018-05-30T08:12:15.907Z","photos":[],"link":"","_id":"cjhubytly0046yis5q6qs15ac","content":"<h3 id=\"点融黑帮是什么？\"><a href=\"#点融黑帮是什么？\" class=\"headerlink\" title=\"点融黑帮是什么？\"></a>点融黑帮是什么？</h3><p>点融黑帮——点融网的核心技术团队。</p>\n<p>一个快速发展的团队，一群志同道合的人。</p>\n<p>这里，实实在在，真心做事，平心做人。</p>\n<h3 id=\"我们在做什么？\"><a href=\"#我们在做什么？\" class=\"headerlink\" title=\"我们在做什么？\"></a>我们在做什么？</h3><p>我们在用技术创新改变传统金融，我们希望改变世界，我们需要你能用你的力量，让更多人，更幸福地、更好地生活在这个地球上。</p>\n<h3 id=\"点融黑帮在哪-？\"><a href=\"#点融黑帮在哪-？\" class=\"headerlink\" title=\"点融黑帮在哪 ？\"></a>点融黑帮在哪 ？</h3><p>现位于上海黄浦区8号桥4期办公区，环境舒适优雅。</p>\n<p><img src=\"../assets/pic/dianrong/office-01@640.jpeg\" alt=\"办公室环境图片01\"></p>\n<p><img src=\"../assets/pic/dianrong/office-02@640.jpeg\" alt=\"办公室环境图片02\"></p>\n<h3 id=\"点融黑帮是群什么样的人？\"><a href=\"#点融黑帮是群什么样的人？\" class=\"headerlink\" title=\"点融黑帮是群什么样的人？\"></a>点融黑帮是群什么样的人？</h3><p>在这里与帅哥美女一起共事，这里没有办公室政治，没有乏味的会议——全部都是热爱生活，热爱旅行的小伙伴。</p>\n<p>动不动骑行大半个中国的PHP大神，一个人背包走过丝路的前端女神，放弃300万年薪环游世界的投行大牛，他们是最酷的小伙伴！</p>\n<h3 id=\"听听他们对我们怎么说？\"><a href=\"#听听他们对我们怎么说？\" class=\"headerlink\" title=\"听听他们对我们怎么说？\"></a>听听他们对我们怎么说？</h3><p>创始人Soul说一个公司、一个人最重要的是 to be honest ，然而，我的前任企业们都做不到，而这对我来说，很重要。点融黑帮无论何事都能说到做到，这让我很是安心也很佩服。</p>\n<p>—Andrew</p>\n<p>来到点融前，3年半的时间，我有2次创业，烧了投资人几百万。当时很深的体会，凭个人能力真的很难做大事。点融也算一眼相中，来了之后，发现没来错，因为这里空间很大，队友很强，很多在原来看来很困难的事在这就成了。                      </p>\n<p>—Max</p>\n<p>开放的文化提供了创新和突破的土壤。大学里，经历了从社会学到计算机的跨专业挑战；工作后，又一次尝试从研究员到开发运维的转型。点融黑帮打造了一个完全开放的工作平台，让我敢于尝试和挑战，发现无尽的可能和未知的精彩。</p>\n<p>—Tony</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"点融黑帮是什么？\"><a href=\"#点融黑帮是什么？\" class=\"headerlink\" title=\"点融黑帮是什么？\"></a>点融黑帮是什么？</h3><p>点融黑帮——点融网的核心技术团队。</p>\n<p>一个快速发展的团队，一群志同道合的人。</p>\n<p>这里，实实在在，真心做事，平心做人。</p>\n<h3 id=\"我们在做什么？\"><a href=\"#我们在做什么？\" class=\"headerlink\" title=\"我们在做什么？\"></a>我们在做什么？</h3><p>我们在用技术创新改变传统金融，我们希望改变世界，我们需要你能用你的力量，让更多人，更幸福地、更好地生活在这个地球上。</p>\n<h3 id=\"点融黑帮在哪-？\"><a href=\"#点融黑帮在哪-？\" class=\"headerlink\" title=\"点融黑帮在哪 ？\"></a>点融黑帮在哪 ？</h3><p>现位于上海黄浦区8号桥4期办公区，环境舒适优雅。</p>\n<p><img src=\"../assets/pic/dianrong/office-01@640.jpeg\" alt=\"办公室环境图片01\"></p>\n<p><img src=\"../assets/pic/dianrong/office-02@640.jpeg\" alt=\"办公室环境图片02\"></p>\n<h3 id=\"点融黑帮是群什么样的人？\"><a href=\"#点融黑帮是群什么样的人？\" class=\"headerlink\" title=\"点融黑帮是群什么样的人？\"></a>点融黑帮是群什么样的人？</h3><p>在这里与帅哥美女一起共事，这里没有办公室政治，没有乏味的会议——全部都是热爱生活，热爱旅行的小伙伴。</p>\n<p>动不动骑行大半个中国的PHP大神，一个人背包走过丝路的前端女神，放弃300万年薪环游世界的投行大牛，他们是最酷的小伙伴！</p>\n<h3 id=\"听听他们对我们怎么说？\"><a href=\"#听听他们对我们怎么说？\" class=\"headerlink\" title=\"听听他们对我们怎么说？\"></a>听听他们对我们怎么说？</h3><p>创始人Soul说一个公司、一个人最重要的是 to be honest ，然而，我的前任企业们都做不到，而这对我来说，很重要。点融黑帮无论何事都能说到做到，这让我很是安心也很佩服。</p>\n<p>—Andrew</p>\n<p>来到点融前，3年半的时间，我有2次创业，烧了投资人几百万。当时很深的体会，凭个人能力真的很难做大事。点融也算一眼相中，来了之后，发现没来错，因为这里空间很大，队友很强，很多在原来看来很困难的事在这就成了。                      </p>\n<p>—Max</p>\n<p>开放的文化提供了创新和突破的土壤。大学里，经历了从社会学到计算机的跨专业挑战；工作后，又一次尝试从研究员到开发运维的转型。点融黑帮打造了一个完全开放的工作平台，让我敢于尝试和挑战，发现无尽的可能和未知的精彩。</p>\n<p>—Tony</p>\n"},{"layout":"post","title":"以“桥”的视角来聊聊前端开发模式的变迁","date":"2017-11-17T14:20:00.000Z","comments":1,"_content":"\n![伦敦塔楼](/assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg)\n\n中国是桥的故乡，自古就有“桥的国度”之称,发展于隋,兴盛于宋。遍布在神州大地的桥、编织成四通八达的交通网络，连接着祖国的四面八方。\n\n随着经济的发展以及社会的变迁，桥缩短了人类了解自然与社会在空间和时间上的距离。在中国有太多大家耳熟能详的大桥，例如：北京卢沟桥、南京长江大桥、武汉长江大桥、杭州钱塘江大桥、深圳湾大桥、虎门大桥等等。本篇文章以“桥”为点粗略地将前端开发模式的变迁串联起来。\n\n那么什么是桥？\n\n维基百科给出这样的定义：桥或桥梁是跨越峡谷、山谷、道路、铁路、河流、其他水域、或其他障碍而建造的结构，是一种由水面或地面突出来的高架，用来连着桥头桥尾两边路。\n\n桥是一种用来跨越障碍的大型构造物。确切的说是用来将交通路线（如道路、铁路、水道等）或者其他设施（如管道、电缆等）跨越天然障碍（如河流、海峡、峡谷等）或人工障碍（高速公路、铁路线）的构造物。\n\n### 背景介绍\n\n近期正在参与某移动端项目的开发，其实现方案是采用Hybrid App（混合应用）开发模式，H5页面端一方面通过jsBridge与Native webview进行交互实现对应的交互效果，另一方面通过Node中间层与Backend进行交互实现对数据接口的对接（如下图所示）。***在这个过程中我们把其中的一段交互方式进行抽象化且将联结着“桥头”（Native App）和“桥尾”（H5 Webpage）的中介（jsBridge）称为“桥”。***\n\n![架构图](/assets/pic/sample.ppt.001.png)\n\n在计算机世界里有很多这样的中介构建了无数座虚拟的“桥”，编织成四通八达的计算机信息网络，连接着各项应用程序。\n\n本文希望通过“桥”作为切入点从前端知识体系出发取其中的三个关键词ActiveX、Webkit、Android来分别代表基于IE浏览器的网页开发以及基于近标准化的前端开发和基于智能设备的全栈开发三个不同阶段的中介，然后根据它们各自的特性以及起到的联结作用，抽象化的比喻为三座具有时代色彩的“桥”来体现前端开发模式的变迁。\n\n本篇文章适合前端开发人员、后端开发人员、客户端开发人员、产品经理、技术经理以及所有对前端开发感兴趣的小伙伴，通过阅读该文章你会了解到如下信息：\n\n- 基于IE浏览器的网页开发\n- 基于近标准化的前端开发\n- 基于智能设备的全栈开发\n\n### 基于IE浏览器的网页开发\n\nActiveX是什么？\n\n[ActiveX](https://zh.wikipedia.org/wiki/ActiveX)是微软针对Internet Explorer开发的一个标准COM接口来实现对象链接与嵌入（OLE）的ActiveX控件。\n\n通过ActiveX控件可以提供很多当时网页本身不能直接支持的功能，例如：安全密码框、在线预览pdf、Flash播放器、在线预览PPT等。\n\n通过对ActiveX的了解，在该阶段我们把ActiveX这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“古石拱桥”。\n\n前端开发在本阶段会产生哪些变化呢？\n\n**1. 开发工具**\n\nFrontpage网页制作、网页三剑客（Dreamweaver、Fireworks、Flash）为本人接触或使用过的最早的前端开发工具\n\n**2. 需兼容的浏览器**\n\n主要是兼容IE浏览器或以IE内核为基础的第三方浏览器。\n\n**3. 遵行相关标准和规范**\n\n- HTML4.01标准+CSS2.1规范\n- 主要采用Table布局+内联样式\n- 原生JS操作+Flash动画效果\n- 数据传递的格式主要是XML\n\n该阶段前端开发主要工作是负责网页制作，因此开发人员常常会被叫做页面仔。\n\n但是该阶段后期网络环境发生了很大的变化，各项新技术得到了较快的发展，其中比较具有代表性的关键词有Web 2.0、Ajax、Json、Flash等。\n\n### 基于近标准化的前端开发\n\nWebKit是什么？\n\n[WebKit](https://zh.wikipedia.org/wiki/WebKit)是一种用来让网页浏览器绘制网页的排版引擎，是著名的四大排版引擎之一。\n\n排版引擎主要是以Internet Explorer为代表的Trident内核、以Mozilla Firefox为代表的Gecko内核、以Opera为代表Presto内核、以Safari和Chrome为代表的WebKit内核。\n\n通过对WebKit的了解，在该阶段我们把WebKit这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“现代摩天桥”。\n\n前端开发在本阶段会产生哪些变化呢？\n\n**1. 丰富的开发工具**\n\n本阶段有很多的前端开发工具供选择，值得推荐的工具主要有：\n\n- Sublime Text\n- Atom\n- Visual Studio Code\n- WebStorm\n- Notepad++\n\n**2. 兼容主流浏览器**\n\n- Internet Explorer\n- Mozilla Firefox\n- Chrome\n- Safari\n- Opera\n\n**3. 遵行相关标准和规范**\n\n- 从XHTML1.0过渡到HTML5规范\n- 从CSS2.1规范过渡到CSS3规范\n- 从支持javascript 1.5到ES6规范\n\n**4. 技术与框架**\n\n- YUI\n- jQuery\n- Backbone\n- Zepto\n- Angular\n- React\n- Vue\n\n**5. 其他**\n\n- 正常不考虑IE低版本的兼容[IE6已死](http://www.ie6death.com/)\n- 优先采用HTML5+CSS3动画[Flash将死](http://isflashdeadyet.com/)\n\n\n......\n\n该阶段互联网已发展到相对繁荣阶段，前端领域也产生了大量的组件以及框架和库。\n\n### 基于智能设备的全栈开发\n\nAndroid是什么？\n\n[Android](https://zh.wikipedia.org/wiki/Android)是一个基于Linux内核的开放源代码移动操作系统。其已成为全球第一大智能手机操作系统，广泛的运用于触屏移动设备。在这里我们根据大家对它的了解以及其本身的中介作用，抽象化的把称为“现代智能大桥”。\n\n前端开发在本阶段会产生哪些变化呢？\n\n**1. 基于多平台**\n\n前端开发不仅需要基于Windows系统、Linux系统、Mac系统等桌面端操作系统的网页开发，而且还需要基于Android系统、Symbian系统、iOS系统、Windows Phone（WP）系统等移动端操作系统的网页开发。\n\n**2. 基于多端设备**\n\n前端开发不再仅仅针对桌面端进行网页开发，同时也需要针对手机端、iPad端、TV端等多端设备进行网页开发。\n\n**3. 技术与框架**\n\n- HTTP 2.0协议\n- Web VR/AR\n- PWA\n- React Native\n- Nodejs\n- Typescript\n\n......\n\n该阶段移动互联网也已发展到相对繁荣阶段，前端相关领域得到了协同发展。前端开发将面临更多的新技术的挑战。\n\n### 写在最后\n\n本文写到这里就结束了，主要是通过三个虚拟的“桥”简单的梳理了一下前端在不同阶段开式模式的改变。随着互联网的发展，未来前端的开发又会是怎么样的呢？\n\n","source":"_posts/2017-11-17-talk-about-the-past-of-front-end-development-through-bridges.md","raw":"---\nlayout: post\ntitle: 以“桥”的视角来聊聊前端开发模式的变迁\ndate: 2017-11-17 22:20\ncomments: true\ncategories: [前端开发]\n---\n\n![伦敦塔楼](/assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg)\n\n中国是桥的故乡，自古就有“桥的国度”之称,发展于隋,兴盛于宋。遍布在神州大地的桥、编织成四通八达的交通网络，连接着祖国的四面八方。\n\n随着经济的发展以及社会的变迁，桥缩短了人类了解自然与社会在空间和时间上的距离。在中国有太多大家耳熟能详的大桥，例如：北京卢沟桥、南京长江大桥、武汉长江大桥、杭州钱塘江大桥、深圳湾大桥、虎门大桥等等。本篇文章以“桥”为点粗略地将前端开发模式的变迁串联起来。\n\n那么什么是桥？\n\n维基百科给出这样的定义：桥或桥梁是跨越峡谷、山谷、道路、铁路、河流、其他水域、或其他障碍而建造的结构，是一种由水面或地面突出来的高架，用来连着桥头桥尾两边路。\n\n桥是一种用来跨越障碍的大型构造物。确切的说是用来将交通路线（如道路、铁路、水道等）或者其他设施（如管道、电缆等）跨越天然障碍（如河流、海峡、峡谷等）或人工障碍（高速公路、铁路线）的构造物。\n\n### 背景介绍\n\n近期正在参与某移动端项目的开发，其实现方案是采用Hybrid App（混合应用）开发模式，H5页面端一方面通过jsBridge与Native webview进行交互实现对应的交互效果，另一方面通过Node中间层与Backend进行交互实现对数据接口的对接（如下图所示）。***在这个过程中我们把其中的一段交互方式进行抽象化且将联结着“桥头”（Native App）和“桥尾”（H5 Webpage）的中介（jsBridge）称为“桥”。***\n\n![架构图](/assets/pic/sample.ppt.001.png)\n\n在计算机世界里有很多这样的中介构建了无数座虚拟的“桥”，编织成四通八达的计算机信息网络，连接着各项应用程序。\n\n本文希望通过“桥”作为切入点从前端知识体系出发取其中的三个关键词ActiveX、Webkit、Android来分别代表基于IE浏览器的网页开发以及基于近标准化的前端开发和基于智能设备的全栈开发三个不同阶段的中介，然后根据它们各自的特性以及起到的联结作用，抽象化的比喻为三座具有时代色彩的“桥”来体现前端开发模式的变迁。\n\n本篇文章适合前端开发人员、后端开发人员、客户端开发人员、产品经理、技术经理以及所有对前端开发感兴趣的小伙伴，通过阅读该文章你会了解到如下信息：\n\n- 基于IE浏览器的网页开发\n- 基于近标准化的前端开发\n- 基于智能设备的全栈开发\n\n### 基于IE浏览器的网页开发\n\nActiveX是什么？\n\n[ActiveX](https://zh.wikipedia.org/wiki/ActiveX)是微软针对Internet Explorer开发的一个标准COM接口来实现对象链接与嵌入（OLE）的ActiveX控件。\n\n通过ActiveX控件可以提供很多当时网页本身不能直接支持的功能，例如：安全密码框、在线预览pdf、Flash播放器、在线预览PPT等。\n\n通过对ActiveX的了解，在该阶段我们把ActiveX这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“古石拱桥”。\n\n前端开发在本阶段会产生哪些变化呢？\n\n**1. 开发工具**\n\nFrontpage网页制作、网页三剑客（Dreamweaver、Fireworks、Flash）为本人接触或使用过的最早的前端开发工具\n\n**2. 需兼容的浏览器**\n\n主要是兼容IE浏览器或以IE内核为基础的第三方浏览器。\n\n**3. 遵行相关标准和规范**\n\n- HTML4.01标准+CSS2.1规范\n- 主要采用Table布局+内联样式\n- 原生JS操作+Flash动画效果\n- 数据传递的格式主要是XML\n\n该阶段前端开发主要工作是负责网页制作，因此开发人员常常会被叫做页面仔。\n\n但是该阶段后期网络环境发生了很大的变化，各项新技术得到了较快的发展，其中比较具有代表性的关键词有Web 2.0、Ajax、Json、Flash等。\n\n### 基于近标准化的前端开发\n\nWebKit是什么？\n\n[WebKit](https://zh.wikipedia.org/wiki/WebKit)是一种用来让网页浏览器绘制网页的排版引擎，是著名的四大排版引擎之一。\n\n排版引擎主要是以Internet Explorer为代表的Trident内核、以Mozilla Firefox为代表的Gecko内核、以Opera为代表Presto内核、以Safari和Chrome为代表的WebKit内核。\n\n通过对WebKit的了解，在该阶段我们把WebKit这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“现代摩天桥”。\n\n前端开发在本阶段会产生哪些变化呢？\n\n**1. 丰富的开发工具**\n\n本阶段有很多的前端开发工具供选择，值得推荐的工具主要有：\n\n- Sublime Text\n- Atom\n- Visual Studio Code\n- WebStorm\n- Notepad++\n\n**2. 兼容主流浏览器**\n\n- Internet Explorer\n- Mozilla Firefox\n- Chrome\n- Safari\n- Opera\n\n**3. 遵行相关标准和规范**\n\n- 从XHTML1.0过渡到HTML5规范\n- 从CSS2.1规范过渡到CSS3规范\n- 从支持javascript 1.5到ES6规范\n\n**4. 技术与框架**\n\n- YUI\n- jQuery\n- Backbone\n- Zepto\n- Angular\n- React\n- Vue\n\n**5. 其他**\n\n- 正常不考虑IE低版本的兼容[IE6已死](http://www.ie6death.com/)\n- 优先采用HTML5+CSS3动画[Flash将死](http://isflashdeadyet.com/)\n\n\n......\n\n该阶段互联网已发展到相对繁荣阶段，前端领域也产生了大量的组件以及框架和库。\n\n### 基于智能设备的全栈开发\n\nAndroid是什么？\n\n[Android](https://zh.wikipedia.org/wiki/Android)是一个基于Linux内核的开放源代码移动操作系统。其已成为全球第一大智能手机操作系统，广泛的运用于触屏移动设备。在这里我们根据大家对它的了解以及其本身的中介作用，抽象化的把称为“现代智能大桥”。\n\n前端开发在本阶段会产生哪些变化呢？\n\n**1. 基于多平台**\n\n前端开发不仅需要基于Windows系统、Linux系统、Mac系统等桌面端操作系统的网页开发，而且还需要基于Android系统、Symbian系统、iOS系统、Windows Phone（WP）系统等移动端操作系统的网页开发。\n\n**2. 基于多端设备**\n\n前端开发不再仅仅针对桌面端进行网页开发，同时也需要针对手机端、iPad端、TV端等多端设备进行网页开发。\n\n**3. 技术与框架**\n\n- HTTP 2.0协议\n- Web VR/AR\n- PWA\n- React Native\n- Nodejs\n- Typescript\n\n......\n\n该阶段移动互联网也已发展到相对繁荣阶段，前端相关领域得到了协同发展。前端开发将面临更多的新技术的挑战。\n\n### 写在最后\n\n本文写到这里就结束了，主要是通过三个虚拟的“桥”简单的梳理了一下前端在不同阶段开式模式的改变。随着互联网的发展，未来前端的开发又会是怎么样的呢？\n\n","slug":"talk-about-the-past-of-front-end-development-through-bridges","published":1,"updated":"2018-05-31T02:19:50.990Z","photos":[],"link":"","_id":"cjhubytm00048yis5uakrxqmj","content":"<p><img src=\"/assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg\" alt=\"伦敦塔楼\"></p>\n<p>中国是桥的故乡，自古就有“桥的国度”之称,发展于隋,兴盛于宋。遍布在神州大地的桥、编织成四通八达的交通网络，连接着祖国的四面八方。</p>\n<p>随着经济的发展以及社会的变迁，桥缩短了人类了解自然与社会在空间和时间上的距离。在中国有太多大家耳熟能详的大桥，例如：北京卢沟桥、南京长江大桥、武汉长江大桥、杭州钱塘江大桥、深圳湾大桥、虎门大桥等等。本篇文章以“桥”为点粗略地将前端开发模式的变迁串联起来。</p>\n<p>那么什么是桥？</p>\n<p>维基百科给出这样的定义：桥或桥梁是跨越峡谷、山谷、道路、铁路、河流、其他水域、或其他障碍而建造的结构，是一种由水面或地面突出来的高架，用来连着桥头桥尾两边路。</p>\n<p>桥是一种用来跨越障碍的大型构造物。确切的说是用来将交通路线（如道路、铁路、水道等）或者其他设施（如管道、电缆等）跨越天然障碍（如河流、海峡、峡谷等）或人工障碍（高速公路、铁路线）的构造物。</p>\n<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><p>近期正在参与某移动端项目的开发，其实现方案是采用Hybrid App（混合应用）开发模式，H5页面端一方面通过jsBridge与Native webview进行交互实现对应的交互效果，另一方面通过Node中间层与Backend进行交互实现对数据接口的对接（如下图所示）。<strong><em>在这个过程中我们把其中的一段交互方式进行抽象化且将联结着“桥头”（Native App）和“桥尾”（H5 Webpage）的中介（jsBridge）称为“桥”。</em></strong></p>\n<p><img src=\"/assets/pic/sample.ppt.001.png\" alt=\"架构图\"></p>\n<p>在计算机世界里有很多这样的中介构建了无数座虚拟的“桥”，编织成四通八达的计算机信息网络，连接着各项应用程序。</p>\n<p>本文希望通过“桥”作为切入点从前端知识体系出发取其中的三个关键词ActiveX、Webkit、Android来分别代表基于IE浏览器的网页开发以及基于近标准化的前端开发和基于智能设备的全栈开发三个不同阶段的中介，然后根据它们各自的特性以及起到的联结作用，抽象化的比喻为三座具有时代色彩的“桥”来体现前端开发模式的变迁。</p>\n<p>本篇文章适合前端开发人员、后端开发人员、客户端开发人员、产品经理、技术经理以及所有对前端开发感兴趣的小伙伴，通过阅读该文章你会了解到如下信息：</p>\n<ul>\n<li>基于IE浏览器的网页开发</li>\n<li>基于近标准化的前端开发</li>\n<li>基于智能设备的全栈开发</li>\n</ul>\n<h3 id=\"基于IE浏览器的网页开发\"><a href=\"#基于IE浏览器的网页开发\" class=\"headerlink\" title=\"基于IE浏览器的网页开发\"></a>基于IE浏览器的网页开发</h3><p>ActiveX是什么？</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/ActiveX\" target=\"_blank\" rel=\"noopener\">ActiveX</a>是微软针对Internet Explorer开发的一个标准COM接口来实现对象链接与嵌入（OLE）的ActiveX控件。</p>\n<p>通过ActiveX控件可以提供很多当时网页本身不能直接支持的功能，例如：安全密码框、在线预览pdf、Flash播放器、在线预览PPT等。</p>\n<p>通过对ActiveX的了解，在该阶段我们把ActiveX这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“古石拱桥”。</p>\n<p>前端开发在本阶段会产生哪些变化呢？</p>\n<p><strong>1. 开发工具</strong></p>\n<p>Frontpage网页制作、网页三剑客（Dreamweaver、Fireworks、Flash）为本人接触或使用过的最早的前端开发工具</p>\n<p><strong>2. 需兼容的浏览器</strong></p>\n<p>主要是兼容IE浏览器或以IE内核为基础的第三方浏览器。</p>\n<p><strong>3. 遵行相关标准和规范</strong></p>\n<ul>\n<li>HTML4.01标准+CSS2.1规范</li>\n<li>主要采用Table布局+内联样式</li>\n<li>原生JS操作+Flash动画效果</li>\n<li>数据传递的格式主要是XML</li>\n</ul>\n<p>该阶段前端开发主要工作是负责网页制作，因此开发人员常常会被叫做页面仔。</p>\n<p>但是该阶段后期网络环境发生了很大的变化，各项新技术得到了较快的发展，其中比较具有代表性的关键词有Web 2.0、Ajax、Json、Flash等。</p>\n<h3 id=\"基于近标准化的前端开发\"><a href=\"#基于近标准化的前端开发\" class=\"headerlink\" title=\"基于近标准化的前端开发\"></a>基于近标准化的前端开发</h3><p>WebKit是什么？</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/WebKit\" target=\"_blank\" rel=\"noopener\">WebKit</a>是一种用来让网页浏览器绘制网页的排版引擎，是著名的四大排版引擎之一。</p>\n<p>排版引擎主要是以Internet Explorer为代表的Trident内核、以Mozilla Firefox为代表的Gecko内核、以Opera为代表Presto内核、以Safari和Chrome为代表的WebKit内核。</p>\n<p>通过对WebKit的了解，在该阶段我们把WebKit这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“现代摩天桥”。</p>\n<p>前端开发在本阶段会产生哪些变化呢？</p>\n<p><strong>1. 丰富的开发工具</strong></p>\n<p>本阶段有很多的前端开发工具供选择，值得推荐的工具主要有：</p>\n<ul>\n<li>Sublime Text</li>\n<li>Atom</li>\n<li>Visual Studio Code</li>\n<li>WebStorm</li>\n<li>Notepad++</li>\n</ul>\n<p><strong>2. 兼容主流浏览器</strong></p>\n<ul>\n<li>Internet Explorer</li>\n<li>Mozilla Firefox</li>\n<li>Chrome</li>\n<li>Safari</li>\n<li>Opera</li>\n</ul>\n<p><strong>3. 遵行相关标准和规范</strong></p>\n<ul>\n<li>从XHTML1.0过渡到HTML5规范</li>\n<li>从CSS2.1规范过渡到CSS3规范</li>\n<li>从支持javascript 1.5到ES6规范</li>\n</ul>\n<p><strong>4. 技术与框架</strong></p>\n<ul>\n<li>YUI</li>\n<li>jQuery</li>\n<li>Backbone</li>\n<li>Zepto</li>\n<li>Angular</li>\n<li>React</li>\n<li>Vue</li>\n</ul>\n<p><strong>5. 其他</strong></p>\n<ul>\n<li>正常不考虑IE低版本的兼容<a href=\"http://www.ie6death.com/\" target=\"_blank\" rel=\"noopener\">IE6已死</a></li>\n<li>优先采用HTML5+CSS3动画<a href=\"http://isflashdeadyet.com/\" target=\"_blank\" rel=\"noopener\">Flash将死</a></li>\n</ul>\n<p>……</p>\n<p>该阶段互联网已发展到相对繁荣阶段，前端领域也产生了大量的组件以及框架和库。</p>\n<h3 id=\"基于智能设备的全栈开发\"><a href=\"#基于智能设备的全栈开发\" class=\"headerlink\" title=\"基于智能设备的全栈开发\"></a>基于智能设备的全栈开发</h3><p>Android是什么？</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/Android\" target=\"_blank\" rel=\"noopener\">Android</a>是一个基于Linux内核的开放源代码移动操作系统。其已成为全球第一大智能手机操作系统，广泛的运用于触屏移动设备。在这里我们根据大家对它的了解以及其本身的中介作用，抽象化的把称为“现代智能大桥”。</p>\n<p>前端开发在本阶段会产生哪些变化呢？</p>\n<p><strong>1. 基于多平台</strong></p>\n<p>前端开发不仅需要基于Windows系统、Linux系统、Mac系统等桌面端操作系统的网页开发，而且还需要基于Android系统、Symbian系统、iOS系统、Windows Phone（WP）系统等移动端操作系统的网页开发。</p>\n<p><strong>2. 基于多端设备</strong></p>\n<p>前端开发不再仅仅针对桌面端进行网页开发，同时也需要针对手机端、iPad端、TV端等多端设备进行网页开发。</p>\n<p><strong>3. 技术与框架</strong></p>\n<ul>\n<li>HTTP 2.0协议</li>\n<li>Web VR/AR</li>\n<li>PWA</li>\n<li>React Native</li>\n<li>Nodejs</li>\n<li>Typescript</li>\n</ul>\n<p>……</p>\n<p>该阶段移动互联网也已发展到相对繁荣阶段，前端相关领域得到了协同发展。前端开发将面临更多的新技术的挑战。</p>\n<h3 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h3><p>本文写到这里就结束了，主要是通过三个虚拟的“桥”简单的梳理了一下前端在不同阶段开式模式的改变。随着互联网的发展，未来前端的开发又会是怎么样的呢？</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/assets/pic/36c76caeee6e4ca01d7c6eb51a2cdd92.jpg\" alt=\"伦敦塔楼\"></p>\n<p>中国是桥的故乡，自古就有“桥的国度”之称,发展于隋,兴盛于宋。遍布在神州大地的桥、编织成四通八达的交通网络，连接着祖国的四面八方。</p>\n<p>随着经济的发展以及社会的变迁，桥缩短了人类了解自然与社会在空间和时间上的距离。在中国有太多大家耳熟能详的大桥，例如：北京卢沟桥、南京长江大桥、武汉长江大桥、杭州钱塘江大桥、深圳湾大桥、虎门大桥等等。本篇文章以“桥”为点粗略地将前端开发模式的变迁串联起来。</p>\n<p>那么什么是桥？</p>\n<p>维基百科给出这样的定义：桥或桥梁是跨越峡谷、山谷、道路、铁路、河流、其他水域、或其他障碍而建造的结构，是一种由水面或地面突出来的高架，用来连着桥头桥尾两边路。</p>\n<p>桥是一种用来跨越障碍的大型构造物。确切的说是用来将交通路线（如道路、铁路、水道等）或者其他设施（如管道、电缆等）跨越天然障碍（如河流、海峡、峡谷等）或人工障碍（高速公路、铁路线）的构造物。</p>\n<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><p>近期正在参与某移动端项目的开发，其实现方案是采用Hybrid App（混合应用）开发模式，H5页面端一方面通过jsBridge与Native webview进行交互实现对应的交互效果，另一方面通过Node中间层与Backend进行交互实现对数据接口的对接（如下图所示）。<strong><em>在这个过程中我们把其中的一段交互方式进行抽象化且将联结着“桥头”（Native App）和“桥尾”（H5 Webpage）的中介（jsBridge）称为“桥”。</em></strong></p>\n<p><img src=\"/assets/pic/sample.ppt.001.png\" alt=\"架构图\"></p>\n<p>在计算机世界里有很多这样的中介构建了无数座虚拟的“桥”，编织成四通八达的计算机信息网络，连接着各项应用程序。</p>\n<p>本文希望通过“桥”作为切入点从前端知识体系出发取其中的三个关键词ActiveX、Webkit、Android来分别代表基于IE浏览器的网页开发以及基于近标准化的前端开发和基于智能设备的全栈开发三个不同阶段的中介，然后根据它们各自的特性以及起到的联结作用，抽象化的比喻为三座具有时代色彩的“桥”来体现前端开发模式的变迁。</p>\n<p>本篇文章适合前端开发人员、后端开发人员、客户端开发人员、产品经理、技术经理以及所有对前端开发感兴趣的小伙伴，通过阅读该文章你会了解到如下信息：</p>\n<ul>\n<li>基于IE浏览器的网页开发</li>\n<li>基于近标准化的前端开发</li>\n<li>基于智能设备的全栈开发</li>\n</ul>\n<h3 id=\"基于IE浏览器的网页开发\"><a href=\"#基于IE浏览器的网页开发\" class=\"headerlink\" title=\"基于IE浏览器的网页开发\"></a>基于IE浏览器的网页开发</h3><p>ActiveX是什么？</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/ActiveX\" target=\"_blank\" rel=\"noopener\">ActiveX</a>是微软针对Internet Explorer开发的一个标准COM接口来实现对象链接与嵌入（OLE）的ActiveX控件。</p>\n<p>通过ActiveX控件可以提供很多当时网页本身不能直接支持的功能，例如：安全密码框、在线预览pdf、Flash播放器、在线预览PPT等。</p>\n<p>通过对ActiveX的了解，在该阶段我们把ActiveX这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“古石拱桥”。</p>\n<p>前端开发在本阶段会产生哪些变化呢？</p>\n<p><strong>1. 开发工具</strong></p>\n<p>Frontpage网页制作、网页三剑客（Dreamweaver、Fireworks、Flash）为本人接触或使用过的最早的前端开发工具</p>\n<p><strong>2. 需兼容的浏览器</strong></p>\n<p>主要是兼容IE浏览器或以IE内核为基础的第三方浏览器。</p>\n<p><strong>3. 遵行相关标准和规范</strong></p>\n<ul>\n<li>HTML4.01标准+CSS2.1规范</li>\n<li>主要采用Table布局+内联样式</li>\n<li>原生JS操作+Flash动画效果</li>\n<li>数据传递的格式主要是XML</li>\n</ul>\n<p>该阶段前端开发主要工作是负责网页制作，因此开发人员常常会被叫做页面仔。</p>\n<p>但是该阶段后期网络环境发生了很大的变化，各项新技术得到了较快的发展，其中比较具有代表性的关键词有Web 2.0、Ajax、Json、Flash等。</p>\n<h3 id=\"基于近标准化的前端开发\"><a href=\"#基于近标准化的前端开发\" class=\"headerlink\" title=\"基于近标准化的前端开发\"></a>基于近标准化的前端开发</h3><p>WebKit是什么？</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/WebKit\" target=\"_blank\" rel=\"noopener\">WebKit</a>是一种用来让网页浏览器绘制网页的排版引擎，是著名的四大排版引擎之一。</p>\n<p>排版引擎主要是以Internet Explorer为代表的Trident内核、以Mozilla Firefox为代表的Gecko内核、以Opera为代表Presto内核、以Safari和Chrome为代表的WebKit内核。</p>\n<p>通过对WebKit的了解，在该阶段我们把WebKit这个中介抽象化的比喻成“桥”，并赋予一个阶段色彩的名称“现代摩天桥”。</p>\n<p>前端开发在本阶段会产生哪些变化呢？</p>\n<p><strong>1. 丰富的开发工具</strong></p>\n<p>本阶段有很多的前端开发工具供选择，值得推荐的工具主要有：</p>\n<ul>\n<li>Sublime Text</li>\n<li>Atom</li>\n<li>Visual Studio Code</li>\n<li>WebStorm</li>\n<li>Notepad++</li>\n</ul>\n<p><strong>2. 兼容主流浏览器</strong></p>\n<ul>\n<li>Internet Explorer</li>\n<li>Mozilla Firefox</li>\n<li>Chrome</li>\n<li>Safari</li>\n<li>Opera</li>\n</ul>\n<p><strong>3. 遵行相关标准和规范</strong></p>\n<ul>\n<li>从XHTML1.0过渡到HTML5规范</li>\n<li>从CSS2.1规范过渡到CSS3规范</li>\n<li>从支持javascript 1.5到ES6规范</li>\n</ul>\n<p><strong>4. 技术与框架</strong></p>\n<ul>\n<li>YUI</li>\n<li>jQuery</li>\n<li>Backbone</li>\n<li>Zepto</li>\n<li>Angular</li>\n<li>React</li>\n<li>Vue</li>\n</ul>\n<p><strong>5. 其他</strong></p>\n<ul>\n<li>正常不考虑IE低版本的兼容<a href=\"http://www.ie6death.com/\" target=\"_blank\" rel=\"noopener\">IE6已死</a></li>\n<li>优先采用HTML5+CSS3动画<a href=\"http://isflashdeadyet.com/\" target=\"_blank\" rel=\"noopener\">Flash将死</a></li>\n</ul>\n<p>……</p>\n<p>该阶段互联网已发展到相对繁荣阶段，前端领域也产生了大量的组件以及框架和库。</p>\n<h3 id=\"基于智能设备的全栈开发\"><a href=\"#基于智能设备的全栈开发\" class=\"headerlink\" title=\"基于智能设备的全栈开发\"></a>基于智能设备的全栈开发</h3><p>Android是什么？</p>\n<p><a href=\"https://zh.wikipedia.org/wiki/Android\" target=\"_blank\" rel=\"noopener\">Android</a>是一个基于Linux内核的开放源代码移动操作系统。其已成为全球第一大智能手机操作系统，广泛的运用于触屏移动设备。在这里我们根据大家对它的了解以及其本身的中介作用，抽象化的把称为“现代智能大桥”。</p>\n<p>前端开发在本阶段会产生哪些变化呢？</p>\n<p><strong>1. 基于多平台</strong></p>\n<p>前端开发不仅需要基于Windows系统、Linux系统、Mac系统等桌面端操作系统的网页开发，而且还需要基于Android系统、Symbian系统、iOS系统、Windows Phone（WP）系统等移动端操作系统的网页开发。</p>\n<p><strong>2. 基于多端设备</strong></p>\n<p>前端开发不再仅仅针对桌面端进行网页开发，同时也需要针对手机端、iPad端、TV端等多端设备进行网页开发。</p>\n<p><strong>3. 技术与框架</strong></p>\n<ul>\n<li>HTTP 2.0协议</li>\n<li>Web VR/AR</li>\n<li>PWA</li>\n<li>React Native</li>\n<li>Nodejs</li>\n<li>Typescript</li>\n</ul>\n<p>……</p>\n<p>该阶段移动互联网也已发展到相对繁荣阶段，前端相关领域得到了协同发展。前端开发将面临更多的新技术的挑战。</p>\n<h3 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h3><p>本文写到这里就结束了，主要是通过三个虚拟的“桥”简单的梳理了一下前端在不同阶段开式模式的改变。随着互联网的发展，未来前端的开发又会是怎么样的呢？</p>\n"},{"layout":"post","title":"一件令人痛心的事","date":"2017-12-14T14:00:00.000Z","comments":1,"_content":"\n朋友圈中第一眼看到那熟悉的名字(欧某某)后我详细的看完了[那篇文章](http://tech.sina.com.cn/i/2017-12-15/doc-ifypsqiz9812858.shtml)，令我非常震惊同时瞬间心里感觉很失落！想想就特别的难过，一位这么好朋友真的走了T_T！\n\n两周前我们还通过电话联络着感情，没想到这是最后一次听到他的声音，他的为人特别好相处，是一位好领导、好同事、好朋友。\n\n回想当年进入ZTE时的情景，再到从ZTE出来时的选择，欧经理都给了我很多的建议和帮助，至此让我找到前进的方向。\n\n最后\n\n请接受我真诚的感谢，您的帮助我将永远铭记！\n\n愿真相得以还原，愿逝者安息！\n\n","source":"_posts/2017-12-14-a-sad-thing.md","raw":"---\nlayout: post\ntitle: 一件令人痛心的事\ndate: 2017-12-14 22:00\ncomments: true\ncategories: [神]\n---\n\n朋友圈中第一眼看到那熟悉的名字(欧某某)后我详细的看完了[那篇文章](http://tech.sina.com.cn/i/2017-12-15/doc-ifypsqiz9812858.shtml)，令我非常震惊同时瞬间心里感觉很失落！想想就特别的难过，一位这么好朋友真的走了T_T！\n\n两周前我们还通过电话联络着感情，没想到这是最后一次听到他的声音，他的为人特别好相处，是一位好领导、好同事、好朋友。\n\n回想当年进入ZTE时的情景，再到从ZTE出来时的选择，欧经理都给了我很多的建议和帮助，至此让我找到前进的方向。\n\n最后\n\n请接受我真诚的感谢，您的帮助我将永远铭记！\n\n愿真相得以还原，愿逝者安息！\n\n","slug":"a-sad-thing","published":1,"updated":"2018-05-30T08:12:15.909Z","photos":[],"link":"","_id":"cjhubytm1004ayis598xthshi","content":"<p>朋友圈中第一眼看到那熟悉的名字(欧某某)后我详细的看完了<a href=\"http://tech.sina.com.cn/i/2017-12-15/doc-ifypsqiz9812858.shtml\" target=\"_blank\" rel=\"noopener\">那篇文章</a>，令我非常震惊同时瞬间心里感觉很失落！想想就特别的难过，一位这么好朋友真的走了T_T！</p>\n<p>两周前我们还通过电话联络着感情，没想到这是最后一次听到他的声音，他的为人特别好相处，是一位好领导、好同事、好朋友。</p>\n<p>回想当年进入ZTE时的情景，再到从ZTE出来时的选择，欧经理都给了我很多的建议和帮助，至此让我找到前进的方向。</p>\n<p>最后</p>\n<p>请接受我真诚的感谢，您的帮助我将永远铭记！</p>\n<p>愿真相得以还原，愿逝者安息！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>朋友圈中第一眼看到那熟悉的名字(欧某某)后我详细的看完了<a href=\"http://tech.sina.com.cn/i/2017-12-15/doc-ifypsqiz9812858.shtml\" target=\"_blank\" rel=\"noopener\">那篇文章</a>，令我非常震惊同时瞬间心里感觉很失落！想想就特别的难过，一位这么好朋友真的走了T_T！</p>\n<p>两周前我们还通过电话联络着感情，没想到这是最后一次听到他的声音，他的为人特别好相处，是一位好领导、好同事、好朋友。</p>\n<p>回想当年进入ZTE时的情景，再到从ZTE出来时的选择，欧经理都给了我很多的建议和帮助，至此让我找到前进的方向。</p>\n<p>最后</p>\n<p>请接受我真诚的感谢，您的帮助我将永远铭记！</p>\n<p>愿真相得以还原，愿逝者安息！</p>\n"},{"layout":"post","title":"HTTP请求中GET方法传递数组问题的讲解","date":"2017-12-29T14:16:00.000Z","comments":1,"_content":"\n### 背景介绍\n\n在某前后端分离的项目中有一个根据用户的选择（可多选）查询相关记录的需求，后端接口由Backend(java)提供。接口格式类似如**http://www.domain.com/query?checked=1&checked=2&checked=3**，可知其中QueryString的参数为checked=1&checked=2&checked=3。前端为了实现需求将该字段的key定义为checked，value定义为1&cheked=2&checked=3的字符串，生成**{checked: \"1&checked=2&checked=3\"}**的一个对象做为参数，验证结果发现后端不能正常接收到checked<List>的参数。\n\n### 关键要点\n\n- 前后端分离的项目采用了接口代理（requrest、http proxy）\n- Backend接口中定义checked为一个枚举类型 (checked<List>)\n- 前端数据对象中key不要相同，因此只能采用字符串方式\n\n### 过程分析\n\n\n1、检验GET请求参数值\n\n```\n通过断点调试查看业务逻辑处理过程中生成的GET请求参数值为checked=1&checked=2&checked=3\n```\n\n2、检验接口代理层收到GET请求参数值\n\n```\n通过断点调试查看接口代理层接收到的GET请求参数值为checked=1&checked=2&checked=3\n```\n\n3、检验接口代理层发送时GET请求参数值\n\n```\n通过断点调试查看接口代理层发送时GET请求参数值变为checked[0]=1&checked[1]=2&checked[2]=3\n```\n\n4、检验后端接收GET请求参数值\n\n```\n通过与后端联调发现参数接收异常，不能正常解析checked[0]=1&checked[1]=2&checked[2]=3为枚举类型\n```\n\n通过以上几个步骤的排查发现HTTP GET请求在经过proxy时多个相同的键值对(checked)会被解析为不同的数组项，其主要原因是对QueryString进行参数解析时引入的qs模块会进行相同的键值对转数组项操作。\n\n### 解决方法\n\n- 修改为POST请求进行数组参数传递\n- 修改为GET请求是数组值以逗号等形式分割的字符串传递（checked=1,2,3）\n- 后端主动支持对数组项字符串的解析\n\n### 写在最后\n\n此问题在发现到排查以及最终解决花了不少时间，其实主要还是前端和后端人员对HTTP协议过程中数据传递的原理理解不同，如果大家能达成一致，快速给出应对方案，此问题将非常容易处理。\n\n","source":"_posts/2017-12-27-how-to-debug-that-send-an-array-with-an-http-get.md","raw":"---\nlayout: post\ntitle: HTTP请求中GET方法传递数组问题的讲解\ndate: 2017-12-29 22:16\ncomments: true\ncategories: [前端开发]\n---\n\n### 背景介绍\n\n在某前后端分离的项目中有一个根据用户的选择（可多选）查询相关记录的需求，后端接口由Backend(java)提供。接口格式类似如**http://www.domain.com/query?checked=1&checked=2&checked=3**，可知其中QueryString的参数为checked=1&checked=2&checked=3。前端为了实现需求将该字段的key定义为checked，value定义为1&cheked=2&checked=3的字符串，生成**{checked: \"1&checked=2&checked=3\"}**的一个对象做为参数，验证结果发现后端不能正常接收到checked<List>的参数。\n\n### 关键要点\n\n- 前后端分离的项目采用了接口代理（requrest、http proxy）\n- Backend接口中定义checked为一个枚举类型 (checked<List>)\n- 前端数据对象中key不要相同，因此只能采用字符串方式\n\n### 过程分析\n\n\n1、检验GET请求参数值\n\n```\n通过断点调试查看业务逻辑处理过程中生成的GET请求参数值为checked=1&checked=2&checked=3\n```\n\n2、检验接口代理层收到GET请求参数值\n\n```\n通过断点调试查看接口代理层接收到的GET请求参数值为checked=1&checked=2&checked=3\n```\n\n3、检验接口代理层发送时GET请求参数值\n\n```\n通过断点调试查看接口代理层发送时GET请求参数值变为checked[0]=1&checked[1]=2&checked[2]=3\n```\n\n4、检验后端接收GET请求参数值\n\n```\n通过与后端联调发现参数接收异常，不能正常解析checked[0]=1&checked[1]=2&checked[2]=3为枚举类型\n```\n\n通过以上几个步骤的排查发现HTTP GET请求在经过proxy时多个相同的键值对(checked)会被解析为不同的数组项，其主要原因是对QueryString进行参数解析时引入的qs模块会进行相同的键值对转数组项操作。\n\n### 解决方法\n\n- 修改为POST请求进行数组参数传递\n- 修改为GET请求是数组值以逗号等形式分割的字符串传递（checked=1,2,3）\n- 后端主动支持对数组项字符串的解析\n\n### 写在最后\n\n此问题在发现到排查以及最终解决花了不少时间，其实主要还是前端和后端人员对HTTP协议过程中数据传递的原理理解不同，如果大家能达成一致，快速给出应对方案，此问题将非常容易处理。\n\n","slug":"how-to-debug-that-send-an-array-with-an-http-get","published":1,"updated":"2018-05-30T08:12:15.910Z","photos":[],"link":"","_id":"cjhubytm2004cyis5oq0v0xy8","content":"<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><p>在某前后端分离的项目中有一个根据用户的选择（可多选）查询相关记录的需求，后端接口由Backend(java)提供。接口格式类似如<strong><a href=\"http://www.domain.com/query?checked=1&amp;checked=2&amp;checked=3\" target=\"_blank\" rel=\"noopener\">http://www.domain.com/query?checked=1&amp;checked=2&amp;checked=3</a></strong>，可知其中QueryString的参数为checked=1&amp;checked=2&amp;checked=3。前端为了实现需求将该字段的key定义为checked，value定义为1&amp;cheked=2&amp;checked=3的字符串，生成<strong>{checked: “1&amp;checked=2&amp;checked=3”}</strong>的一个对象做为参数，验证结果发现后端不能正常接收到checked<list>的参数。</list></p>\n<h3 id=\"关键要点\"><a href=\"#关键要点\" class=\"headerlink\" title=\"关键要点\"></a>关键要点</h3><ul>\n<li>前后端分离的项目采用了接口代理（requrest、http proxy）</li>\n<li>Backend接口中定义checked为一个枚举类型 (checked<list>)</list></li>\n<li>前端数据对象中key不要相同，因此只能采用字符串方式</li>\n</ul>\n<h3 id=\"过程分析\"><a href=\"#过程分析\" class=\"headerlink\" title=\"过程分析\"></a>过程分析</h3><p>1、检验GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过断点调试查看业务逻辑处理过程中生成的GET请求参数值为checked=1&amp;checked=2&amp;checked=3</span><br></pre></td></tr></table></figure>\n<p>2、检验接口代理层收到GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过断点调试查看接口代理层接收到的GET请求参数值为checked=1&amp;checked=2&amp;checked=3</span><br></pre></td></tr></table></figure>\n<p>3、检验接口代理层发送时GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过断点调试查看接口代理层发送时GET请求参数值变为checked[0]=1&amp;checked[1]=2&amp;checked[2]=3</span><br></pre></td></tr></table></figure>\n<p>4、检验后端接收GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过与后端联调发现参数接收异常，不能正常解析checked[0]=1&amp;checked[1]=2&amp;checked[2]=3为枚举类型</span><br></pre></td></tr></table></figure>\n<p>通过以上几个步骤的排查发现HTTP GET请求在经过proxy时多个相同的键值对(checked)会被解析为不同的数组项，其主要原因是对QueryString进行参数解析时引入的qs模块会进行相同的键值对转数组项操作。</p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ul>\n<li>修改为POST请求进行数组参数传递</li>\n<li>修改为GET请求是数组值以逗号等形式分割的字符串传递（checked=1,2,3）</li>\n<li>后端主动支持对数组项字符串的解析</li>\n</ul>\n<h3 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h3><p>此问题在发现到排查以及最终解决花了不少时间，其实主要还是前端和后端人员对HTTP协议过程中数据传递的原理理解不同，如果大家能达成一致，快速给出应对方案，此问题将非常容易处理。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"背景介绍\"><a href=\"#背景介绍\" class=\"headerlink\" title=\"背景介绍\"></a>背景介绍</h3><p>在某前后端分离的项目中有一个根据用户的选择（可多选）查询相关记录的需求，后端接口由Backend(java)提供。接口格式类似如<strong><a href=\"http://www.domain.com/query?checked=1&amp;checked=2&amp;checked=3\" target=\"_blank\" rel=\"noopener\">http://www.domain.com/query?checked=1&amp;checked=2&amp;checked=3</a></strong>，可知其中QueryString的参数为checked=1&amp;checked=2&amp;checked=3。前端为了实现需求将该字段的key定义为checked，value定义为1&amp;cheked=2&amp;checked=3的字符串，生成<strong>{checked: “1&amp;checked=2&amp;checked=3”}</strong>的一个对象做为参数，验证结果发现后端不能正常接收到checked<list>的参数。</list></p>\n<h3 id=\"关键要点\"><a href=\"#关键要点\" class=\"headerlink\" title=\"关键要点\"></a>关键要点</h3><ul>\n<li>前后端分离的项目采用了接口代理（requrest、http proxy）</li>\n<li>Backend接口中定义checked为一个枚举类型 (checked<list>)</list></li>\n<li>前端数据对象中key不要相同，因此只能采用字符串方式</li>\n</ul>\n<h3 id=\"过程分析\"><a href=\"#过程分析\" class=\"headerlink\" title=\"过程分析\"></a>过程分析</h3><p>1、检验GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过断点调试查看业务逻辑处理过程中生成的GET请求参数值为checked=1&amp;checked=2&amp;checked=3</span><br></pre></td></tr></table></figure>\n<p>2、检验接口代理层收到GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过断点调试查看接口代理层接收到的GET请求参数值为checked=1&amp;checked=2&amp;checked=3</span><br></pre></td></tr></table></figure>\n<p>3、检验接口代理层发送时GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过断点调试查看接口代理层发送时GET请求参数值变为checked[0]=1&amp;checked[1]=2&amp;checked[2]=3</span><br></pre></td></tr></table></figure>\n<p>4、检验后端接收GET请求参数值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过与后端联调发现参数接收异常，不能正常解析checked[0]=1&amp;checked[1]=2&amp;checked[2]=3为枚举类型</span><br></pre></td></tr></table></figure>\n<p>通过以上几个步骤的排查发现HTTP GET请求在经过proxy时多个相同的键值对(checked)会被解析为不同的数组项，其主要原因是对QueryString进行参数解析时引入的qs模块会进行相同的键值对转数组项操作。</p>\n<h3 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h3><ul>\n<li>修改为POST请求进行数组参数传递</li>\n<li>修改为GET请求是数组值以逗号等形式分割的字符串传递（checked=1,2,3）</li>\n<li>后端主动支持对数组项字符串的解析</li>\n</ul>\n<h3 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h3><p>此问题在发现到排查以及最终解决花了不少时间，其实主要还是前端和后端人员对HTTP协议过程中数据传递的原理理解不同，如果大家能达成一致，快速给出应对方案，此问题将非常容易处理。</p>\n"},{"layout":"post","title":"2017年终总结","date":"2018-01-02T13:18:00.000Z","comments":1,"_content":"\n**一年又过去了，每到年终总想写点什么来记录过去规划未来，不然总感觉有点不自在。**\n\n以下是今年的总结：\n\n**一、拥有第一辆车**: 入手了人生第一辆B级小轿车，提前实现了30岁前的一个小目标。\n\n**二、与爱相伴一生**：结束了七年爱情之路的漫跑，走进了婚姻的殿堂。让终将迎来花儿盛开的时刻，此生愿与你相伴到老，愿此后的每一天能带给亲爱的甜蜜的快乐！\n\n**三、旅行点亮地图**：一年间不经意的也去过了北京、昆明、大理、丽江、深圳、东莞、广州、厦门、晋江、九江等城市，亲临奇境，总会有不一样的感受。放飞心情，方能享受！\n\n**四、家人幸福相随**：爸妈给哥带小孩总算能有机会出来看看外面的世界，在这一年里家人相聚的次数明显很多，有家人的地方就是幸福。记得暑假的时候把姐姐和姐夫一家人接过来玩了几天，看到小孩子们灿烂的笑容，感觉很开心，很满足。愿以后的日子里家人能够更和谐，共同维护好这最浓的关系！有家人在，就有幸福！\n\n**五、新工作新挑战**：在工作上这一年感触特别深，发生了很多事情，同时也经历了很多，在这里也不想详谈。给我印象比较深刻的还是在[用友](http://www.yonyou.com/)那一年半左右的时间里，经历了创业期、合并期、产出期、衰退期等几个阶段的考验，跟坐过山车一样，有惊险、很刺激，其实最终想想还是有很多的收获。\n\n**六、最后**\n\n本篇总结写的很简短，感觉17年接触和经历的事情特别的多，涉及到不同领域、不同方向的话题特别的多，但是在写这篇文章的时候我却没有什么思路。对于新的一年，有了很多新的动力、新的方向、新的规划，不断的加强自我管理，实现自我突破！\n\n最后\n\n世界很美好，实现也“可以不残酷”！加油！！\n","source":"_posts/2018-01-02-summary-of-the-year.md","raw":"---\nlayout: post\ntitle: 2017年终总结\ndate: 2018-01-02 21:18\ncomments: true\ncategories: [总结]\n---\n\n**一年又过去了，每到年终总想写点什么来记录过去规划未来，不然总感觉有点不自在。**\n\n以下是今年的总结：\n\n**一、拥有第一辆车**: 入手了人生第一辆B级小轿车，提前实现了30岁前的一个小目标。\n\n**二、与爱相伴一生**：结束了七年爱情之路的漫跑，走进了婚姻的殿堂。让终将迎来花儿盛开的时刻，此生愿与你相伴到老，愿此后的每一天能带给亲爱的甜蜜的快乐！\n\n**三、旅行点亮地图**：一年间不经意的也去过了北京、昆明、大理、丽江、深圳、东莞、广州、厦门、晋江、九江等城市，亲临奇境，总会有不一样的感受。放飞心情，方能享受！\n\n**四、家人幸福相随**：爸妈给哥带小孩总算能有机会出来看看外面的世界，在这一年里家人相聚的次数明显很多，有家人的地方就是幸福。记得暑假的时候把姐姐和姐夫一家人接过来玩了几天，看到小孩子们灿烂的笑容，感觉很开心，很满足。愿以后的日子里家人能够更和谐，共同维护好这最浓的关系！有家人在，就有幸福！\n\n**五、新工作新挑战**：在工作上这一年感触特别深，发生了很多事情，同时也经历了很多，在这里也不想详谈。给我印象比较深刻的还是在[用友](http://www.yonyou.com/)那一年半左右的时间里，经历了创业期、合并期、产出期、衰退期等几个阶段的考验，跟坐过山车一样，有惊险、很刺激，其实最终想想还是有很多的收获。\n\n**六、最后**\n\n本篇总结写的很简短，感觉17年接触和经历的事情特别的多，涉及到不同领域、不同方向的话题特别的多，但是在写这篇文章的时候我却没有什么思路。对于新的一年，有了很多新的动力、新的方向、新的规划，不断的加强自我管理，实现自我突破！\n\n最后\n\n世界很美好，实现也“可以不残酷”！加油！！\n","slug":"summary-of-the-year","published":1,"updated":"2018-05-30T08:12:15.911Z","photos":[],"link":"","_id":"cjhubytm4004fyis5xtfvp2l2","content":"<p><strong>一年又过去了，每到年终总想写点什么来记录过去规划未来，不然总感觉有点不自在。</strong></p>\n<p>以下是今年的总结：</p>\n<p><strong>一、拥有第一辆车</strong>: 入手了人生第一辆B级小轿车，提前实现了30岁前的一个小目标。</p>\n<p><strong>二、与爱相伴一生</strong>：结束了七年爱情之路的漫跑，走进了婚姻的殿堂。让终将迎来花儿盛开的时刻，此生愿与你相伴到老，愿此后的每一天能带给亲爱的甜蜜的快乐！</p>\n<p><strong>三、旅行点亮地图</strong>：一年间不经意的也去过了北京、昆明、大理、丽江、深圳、东莞、广州、厦门、晋江、九江等城市，亲临奇境，总会有不一样的感受。放飞心情，方能享受！</p>\n<p><strong>四、家人幸福相随</strong>：爸妈给哥带小孩总算能有机会出来看看外面的世界，在这一年里家人相聚的次数明显很多，有家人的地方就是幸福。记得暑假的时候把姐姐和姐夫一家人接过来玩了几天，看到小孩子们灿烂的笑容，感觉很开心，很满足。愿以后的日子里家人能够更和谐，共同维护好这最浓的关系！有家人在，就有幸福！</p>\n<p><strong>五、新工作新挑战</strong>：在工作上这一年感触特别深，发生了很多事情，同时也经历了很多，在这里也不想详谈。给我印象比较深刻的还是在<a href=\"http://www.yonyou.com/\" target=\"_blank\" rel=\"noopener\">用友</a>那一年半左右的时间里，经历了创业期、合并期、产出期、衰退期等几个阶段的考验，跟坐过山车一样，有惊险、很刺激，其实最终想想还是有很多的收获。</p>\n<p><strong>六、最后</strong></p>\n<p>本篇总结写的很简短，感觉17年接触和经历的事情特别的多，涉及到不同领域、不同方向的话题特别的多，但是在写这篇文章的时候我却没有什么思路。对于新的一年，有了很多新的动力、新的方向、新的规划，不断的加强自我管理，实现自我突破！</p>\n<p>最后</p>\n<p>世界很美好，实现也“可以不残酷”！加油！！</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>一年又过去了，每到年终总想写点什么来记录过去规划未来，不然总感觉有点不自在。</strong></p>\n<p>以下是今年的总结：</p>\n<p><strong>一、拥有第一辆车</strong>: 入手了人生第一辆B级小轿车，提前实现了30岁前的一个小目标。</p>\n<p><strong>二、与爱相伴一生</strong>：结束了七年爱情之路的漫跑，走进了婚姻的殿堂。让终将迎来花儿盛开的时刻，此生愿与你相伴到老，愿此后的每一天能带给亲爱的甜蜜的快乐！</p>\n<p><strong>三、旅行点亮地图</strong>：一年间不经意的也去过了北京、昆明、大理、丽江、深圳、东莞、广州、厦门、晋江、九江等城市，亲临奇境，总会有不一样的感受。放飞心情，方能享受！</p>\n<p><strong>四、家人幸福相随</strong>：爸妈给哥带小孩总算能有机会出来看看外面的世界，在这一年里家人相聚的次数明显很多，有家人的地方就是幸福。记得暑假的时候把姐姐和姐夫一家人接过来玩了几天，看到小孩子们灿烂的笑容，感觉很开心，很满足。愿以后的日子里家人能够更和谐，共同维护好这最浓的关系！有家人在，就有幸福！</p>\n<p><strong>五、新工作新挑战</strong>：在工作上这一年感触特别深，发生了很多事情，同时也经历了很多，在这里也不想详谈。给我印象比较深刻的还是在<a href=\"http://www.yonyou.com/\" target=\"_blank\" rel=\"noopener\">用友</a>那一年半左右的时间里，经历了创业期、合并期、产出期、衰退期等几个阶段的考验，跟坐过山车一样，有惊险、很刺激，其实最终想想还是有很多的收获。</p>\n<p><strong>六、最后</strong></p>\n<p>本篇总结写的很简短，感觉17年接触和经历的事情特别的多，涉及到不同领域、不同方向的话题特别的多，但是在写这篇文章的时候我却没有什么思路。对于新的一年，有了很多新的动力、新的方向、新的规划，不断的加强自我管理，实现自我突破！</p>\n<p>最后</p>\n<p>世界很美好，实现也“可以不残酷”！加油！！</p>\n"},{"title":"博客从Jekyll迁移到Hexo","author":"Hankwins","date":"2018-05-31T06:47:00.000Z","_content":"博客从刚开始的[Wordpress](https://wordpress.com/)迁移到[Jekyll](https://jekyllrb.com/)那都是发生在2014年的事，到现在已经四年了。在这段时间里确实发生了很多事情，近段时间静下心来想想得到了一些感想，我认为“过去的就让它过去，现在重新认识自己，也来得及改变自己！”。\n\n这两天花了几个小时的时间将博客从[Jekyll](https://jekyllrb.com/)迁移到[Hexo](https://hexo.io/zh-cn/)，这里主要记录一下操作过程。\n\n**建站**\n\n按以下命令安装*Hexo*并初始化*blog*项目，这里默认用户机已安装*node*运行环境。\n\n```\n$ npm install hexo-cli -g\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo server\n```\n\n\n**迁移**\n\n把*_posts*文件夹内的所有文件复制到*source/_posts*文件夹，并在*_config.yml*中修改 *new_post_name*参数。\n\n```\nnew_post_name: :year-:month-:day-:title.md\n```\n\n**主题**\n\n项目初始化时默认采用*landscape*的主题，由于时间的关系我直接从官方[主题库](https://hexo.io/themes/)中选择了一款简约风格的[hexo-theme-Anatole](http://anatole.munen.cc/)主题。\n\n将*hexo-theme-Anatole*主题下载后放到*themes*目录，并在*_config.yml*修改*theme*参数。\n\n```\ntheme: hexo-theme-Anatole\n```\n\n**部署**\n\n这里主要是采用[GitHub Pages](https://pages.github.com/)的模式托管静态博客。\n\n1、新建仓库\n\n登录[GitHub](https://github.com/)并在[新建仓库](https://github.com/new)页面新建*blog*仓库。\n\n2、配置参数\n\n在本项目*_config.yml*文件中配置*deploy*下的参数，例如：\n\n```\ndeploy:\n  type: git\n  repo: https://github.com/username/blog\n  branch: gh-pages\n```\n\n3、绑定域名\n\n在*source*目录下新建*CNAME*文件，请输入个人域名，例如：\n\n```\nwww.domain.com\n```\n\n4、配置DNS\n\n这里以DNSPod为例，在DNS解析模块添加以下记录：\n\n```\n主机记录\t记录类型\t记录值\n@  \t\tCNAME\t\tusername.github.io\nwww\t\tCNAME\t\tusername.github.io\n```\n\n或\n\n```\n主机记录\t记录类型\t记录值\n@  \t\tA             192.30.252.153\n@  \t\tA             192.30.252.154\nwww\t\tCNAME         username.github.io\n```\n\n注：对DNS的配置不是立即生效的，过10分钟再去访问你的域名看看有没有配置成功 : )\n\n5、一键部署\n\n```\n$ hexo deploy\n```\n\n大功告成^_^，更多的部署方式以及详细介绍，请[点击这里](https://hexo.io/zh-cn/docs/deployment.html)","source":"_posts/2018-05-31-blog-migration-from-jekyll-to-hexo.md","raw":"title: 博客从Jekyll迁移到Hexo\nauthor: Hankwins\ntags:\n  - 博客迁移、Jekyll、Hexo\ncategories:\n  - 博客人生\ndate: 2018-05-31 14:47:00\n---\n博客从刚开始的[Wordpress](https://wordpress.com/)迁移到[Jekyll](https://jekyllrb.com/)那都是发生在2014年的事，到现在已经四年了。在这段时间里确实发生了很多事情，近段时间静下心来想想得到了一些感想，我认为“过去的就让它过去，现在重新认识自己，也来得及改变自己！”。\n\n这两天花了几个小时的时间将博客从[Jekyll](https://jekyllrb.com/)迁移到[Hexo](https://hexo.io/zh-cn/)，这里主要记录一下操作过程。\n\n**建站**\n\n按以下命令安装*Hexo*并初始化*blog*项目，这里默认用户机已安装*node*运行环境。\n\n```\n$ npm install hexo-cli -g\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo server\n```\n\n\n**迁移**\n\n把*_posts*文件夹内的所有文件复制到*source/_posts*文件夹，并在*_config.yml*中修改 *new_post_name*参数。\n\n```\nnew_post_name: :year-:month-:day-:title.md\n```\n\n**主题**\n\n项目初始化时默认采用*landscape*的主题，由于时间的关系我直接从官方[主题库](https://hexo.io/themes/)中选择了一款简约风格的[hexo-theme-Anatole](http://anatole.munen.cc/)主题。\n\n将*hexo-theme-Anatole*主题下载后放到*themes*目录，并在*_config.yml*修改*theme*参数。\n\n```\ntheme: hexo-theme-Anatole\n```\n\n**部署**\n\n这里主要是采用[GitHub Pages](https://pages.github.com/)的模式托管静态博客。\n\n1、新建仓库\n\n登录[GitHub](https://github.com/)并在[新建仓库](https://github.com/new)页面新建*blog*仓库。\n\n2、配置参数\n\n在本项目*_config.yml*文件中配置*deploy*下的参数，例如：\n\n```\ndeploy:\n  type: git\n  repo: https://github.com/username/blog\n  branch: gh-pages\n```\n\n3、绑定域名\n\n在*source*目录下新建*CNAME*文件，请输入个人域名，例如：\n\n```\nwww.domain.com\n```\n\n4、配置DNS\n\n这里以DNSPod为例，在DNS解析模块添加以下记录：\n\n```\n主机记录\t记录类型\t记录值\n@  \t\tCNAME\t\tusername.github.io\nwww\t\tCNAME\t\tusername.github.io\n```\n\n或\n\n```\n主机记录\t记录类型\t记录值\n@  \t\tA             192.30.252.153\n@  \t\tA             192.30.252.154\nwww\t\tCNAME         username.github.io\n```\n\n注：对DNS的配置不是立即生效的，过10分钟再去访问你的域名看看有没有配置成功 : )\n\n5、一键部署\n\n```\n$ hexo deploy\n```\n\n大功告成^_^，更多的部署方式以及详细介绍，请[点击这里](https://hexo.io/zh-cn/docs/deployment.html)","slug":"blog-migration-from-jekyll-to-hexo","published":1,"updated":"2018-05-31T10:32:11.698Z","_id":"cjhubytm5004hyis5em9nnl2g","comments":1,"layout":"post","photos":[],"link":"","content":"<p>博客从刚开始的<a href=\"https://wordpress.com/\" target=\"_blank\" rel=\"noopener\">Wordpress</a>迁移到<a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a>那都是发生在2014年的事，到现在已经四年了。在这段时间里确实发生了很多事情，近段时间静下心来想想得到了一些感想，我认为“过去的就让它过去，现在重新认识自己，也来得及改变自己！”。</p>\n<p>这两天花了几个小时的时间将博客从<a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a>迁移到<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a>，这里主要记录一下操作过程。</p>\n<p><strong>建站</strong></p>\n<p>按以下命令安装<em>Hexo</em>并初始化<em>blog</em>项目，这里默认用户机已安装<em>node</em>运行环境。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\">$ hexo init blog</span><br><span class=\"line\">$ cd blog</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p><strong>迁移</strong></p>\n<p>把<em>_posts</em>文件夹内的所有文件复制到<em>source/_posts</em>文件夹，并在<em>_config.yml</em>中修改 <em>new_post_name</em>参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure>\n<p><strong>主题</strong></p>\n<p>项目初始化时默认采用<em>landscape</em>的主题，由于时间的关系我直接从官方<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">主题库</a>中选择了一款简约风格的<a href=\"http://anatole.munen.cc/\" target=\"_blank\" rel=\"noopener\">hexo-theme-Anatole</a>主题。</p>\n<p>将<em>hexo-theme-Anatole</em>主题下载后放到<em>themes</em>目录，并在<em>_config.yml</em>修改<em>theme</em>参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: hexo-theme-Anatole</span><br></pre></td></tr></table></figure>\n<p><strong>部署</strong></p>\n<p>这里主要是采用<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a>的模式托管静态博客。</p>\n<p>1、新建仓库</p>\n<p>登录<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a>并在<a href=\"https://github.com/new\" target=\"_blank\" rel=\"noopener\">新建仓库</a>页面新建<em>blog</em>仓库。</p>\n<p>2、配置参数</p>\n<p>在本项目<em>_config.yml</em>文件中配置<em>deploy</em>下的参数，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/username/blog</span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<p>3、绑定域名</p>\n<p>在<em>source</em>目录下新建<em>CNAME</em>文件，请输入个人域名，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.domain.com</span><br></pre></td></tr></table></figure>\n<p>4、配置DNS</p>\n<p>这里以DNSPod为例，在DNS解析模块添加以下记录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主机记录\t记录类型\t记录值</span><br><span class=\"line\">@  \t\tCNAME\t\tusername.github.io</span><br><span class=\"line\">www\t\tCNAME\t\tusername.github.io</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主机记录\t记录类型\t记录值</span><br><span class=\"line\">@  \t\tA             192.30.252.153</span><br><span class=\"line\">@  \t\tA             192.30.252.154</span><br><span class=\"line\">www\t\tCNAME         username.github.io</span><br></pre></td></tr></table></figure>\n<p>注：对DNS的配置不是立即生效的，过10分钟再去访问你的域名看看有没有配置成功 : )</p>\n<p>5、一键部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>大功告成^_^，更多的部署方式以及详细介绍，请<a href=\"https://hexo.io/zh-cn/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">点击这里</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>博客从刚开始的<a href=\"https://wordpress.com/\" target=\"_blank\" rel=\"noopener\">Wordpress</a>迁移到<a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a>那都是发生在2014年的事，到现在已经四年了。在这段时间里确实发生了很多事情，近段时间静下心来想想得到了一些感想，我认为“过去的就让它过去，现在重新认识自己，也来得及改变自己！”。</p>\n<p>这两天花了几个小时的时间将博客从<a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a>迁移到<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a>，这里主要记录一下操作过程。</p>\n<p><strong>建站</strong></p>\n<p>按以下命令安装<em>Hexo</em>并初始化<em>blog</em>项目，这里默认用户机已安装<em>node</em>运行环境。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-cli -g</span><br><span class=\"line\">$ hexo init blog</span><br><span class=\"line\">$ cd blog</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p><strong>迁移</strong></p>\n<p>把<em>_posts</em>文件夹内的所有文件复制到<em>source/_posts</em>文件夹，并在<em>_config.yml</em>中修改 <em>new_post_name</em>参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new_post_name: :year-:month-:day-:title.md</span><br></pre></td></tr></table></figure>\n<p><strong>主题</strong></p>\n<p>项目初始化时默认采用<em>landscape</em>的主题，由于时间的关系我直接从官方<a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">主题库</a>中选择了一款简约风格的<a href=\"http://anatole.munen.cc/\" target=\"_blank\" rel=\"noopener\">hexo-theme-Anatole</a>主题。</p>\n<p>将<em>hexo-theme-Anatole</em>主题下载后放到<em>themes</em>目录，并在<em>_config.yml</em>修改<em>theme</em>参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: hexo-theme-Anatole</span><br></pre></td></tr></table></figure>\n<p><strong>部署</strong></p>\n<p>这里主要是采用<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">GitHub Pages</a>的模式托管静态博客。</p>\n<p>1、新建仓库</p>\n<p>登录<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a>并在<a href=\"https://github.com/new\" target=\"_blank\" rel=\"noopener\">新建仓库</a>页面新建<em>blog</em>仓库。</p>\n<p>2、配置参数</p>\n<p>在本项目<em>_config.yml</em>文件中配置<em>deploy</em>下的参数，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/username/blog</span><br><span class=\"line\">  branch: gh-pages</span><br></pre></td></tr></table></figure>\n<p>3、绑定域名</p>\n<p>在<em>source</em>目录下新建<em>CNAME</em>文件，请输入个人域名，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">www.domain.com</span><br></pre></td></tr></table></figure>\n<p>4、配置DNS</p>\n<p>这里以DNSPod为例，在DNS解析模块添加以下记录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主机记录\t记录类型\t记录值</span><br><span class=\"line\">@  \t\tCNAME\t\tusername.github.io</span><br><span class=\"line\">www\t\tCNAME\t\tusername.github.io</span><br></pre></td></tr></table></figure>\n<p>或</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主机记录\t记录类型\t记录值</span><br><span class=\"line\">@  \t\tA             192.30.252.153</span><br><span class=\"line\">@  \t\tA             192.30.252.154</span><br><span class=\"line\">www\t\tCNAME         username.github.io</span><br></pre></td></tr></table></figure>\n<p>注：对DNS的配置不是立即生效的，过10分钟再去访问你的域名看看有没有配置成功 : )</p>\n<p>5、一键部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>大功告成^_^，更多的部署方式以及详细介绍，请<a href=\"https://hexo.io/zh-cn/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">点击这里</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjhubytip0000yis58k0fy262","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytj60009yis5w65fpnvm"},{"post_id":"cjhubytit0001yis577fz5gua","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytjd000eyis5kb7ue7dc"},{"post_id":"cjhubytj8000byis5sv1d15kc","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytjh000hyis529cxy85m"},{"post_id":"cjhubytiz0003yis5i7gfwen1","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytjj000kyis5k5ypt7ec"},{"post_id":"cjhubytj10004yis5i7lzm66i","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjl000nyis5xjbbmjud"},{"post_id":"cjhubytjf000gyis5gld3bp0t","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjm000pyis5ehbvxv6i"},{"post_id":"cjhubytji000jyis5c3kllxdm","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjo000syis50bpp031w"},{"post_id":"cjhubytj20005yis54vv8mg6r","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjq000uyis5niwnxps1"},{"post_id":"cjhubytjj000lyis52lx706lx","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjr000xyis5zwa4l1ke"},{"post_id":"cjhubytjl000oyis5ml79cwc3","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjt000zyis5dxk4zwr2"},{"post_id":"cjhubytj40007yis5xxp3sts9","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytju0012yis5920c38i6"},{"post_id":"cjhubytjn000qyis5vnljp0jo","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytjw0014yis5f0o3p8kg"},{"post_id":"cjhubytjp000tyis5gjlvl2vw","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytjy0016yis5spkiblmu"},{"post_id":"cjhubytj50008yis5il63yn45","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytk00018yis537uwl783"},{"post_id":"cjhubytjq000vyis5vkaj9qz7","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytk2001ayis5qdlcvk90"},{"post_id":"cjhubytjs000yyis522kukkvw","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytk3001cyis5myyeybmn"},{"post_id":"cjhubytja000cyis58be43mp8","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytk6001fyis5kvresu3n"},{"post_id":"cjhubytjt0010yis5wpyfs1ps","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytk7001hyis5e9zvauuf"},{"post_id":"cjhubytjv0013yis5k1ekgn4w","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytk8001jyis5665l3vlj"},{"post_id":"cjhubytjd000fyis5viz55mog","category_id":"cjhubytju0011yis5ufkhmyfm","_id":"cjhubytk9001lyis5bbtjp363"},{"post_id":"cjhubytjw0015yis5xy41uo1t","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkb001nyis5efmxxcd7"},{"post_id":"cjhubytjy0017yis5a846g17z","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkc001pyis5mi0x6w52"},{"post_id":"cjhubytk2001byis5mdo4i9mq","category_id":"cjhubytju0011yis5ufkhmyfm","_id":"cjhubytke001ryis53c4zw77f"},{"post_id":"cjhubytk4001eyis5opjd24xh","category_id":"cjhubytju0011yis5ufkhmyfm","_id":"cjhubytkf001tyis5s3eoeywl"},{"post_id":"cjhubytk6001gyis51ak8zpaw","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkg001vyis5k0u7trk8"},{"post_id":"cjhubytk00019yis520hp2c0x","category_id":"cjhubytk3001dyis5ccfp27qr","_id":"cjhubytki001xyis52svgr3u3"},{"post_id":"cjhubytk7001iyis5dl5juath","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkj001zyis5tp0m8uwm"},{"post_id":"cjhubytk8001kyis5tcyon7fl","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkk0021yis5ftnod0rs"},{"post_id":"cjhubytka001myis5spzg6bpw","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkm0023yis50ws0eh2u"},{"post_id":"cjhubytkb001oyis5jv36f7vq","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkn0025yis5ahirtx1p"},{"post_id":"cjhubytkd001qyis5ccjosnv4","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytko0027yis5frybd0w0"},{"post_id":"cjhubytke001syis5z0mw2dw4","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytkq002ayis5lsbi1fo0"},{"post_id":"cjhubytkf001uyis596bvnaq6","category_id":"cjhubytk3001dyis5ccfp27qr","_id":"cjhubytkr002cyis5u8i2qmcf"},{"post_id":"cjhubytkh001wyis5gaatkuoi","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytks002fyis5tlxnluio"},{"post_id":"cjhubytki001yyis5q8d8a8nk","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytkv002hyis5tu120u29"},{"post_id":"cjhubytkj0020yis5qdr6y9r8","category_id":"cjhubytju0011yis5ufkhmyfm","_id":"cjhubytky002kyis5ycijo12f"},{"post_id":"cjhubytkk0022yis5jqgv5ma5","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytl0002myis5zlkqwsbv"},{"post_id":"cjhubytkq002byis53x5phupi","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytl2002pyis5k3s2nn0f"},{"post_id":"cjhubytkm0024yis5czit1wmf","category_id":"cjhubytko0028yis5nh9bvn0e","_id":"cjhubytl4002ryis5d3plxmfw"},{"post_id":"cjhubytkr002dyis5g1q6k9eu","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytl6002uyis52r1e72el"},{"post_id":"cjhubytkn0026yis53g6qo3xp","category_id":"cjhubytks002eyis58b0vhj7i","_id":"cjhubytl7002wyis54pbmm7xw"},{"post_id":"cjhubytky002lyis5m6svm7l1","category_id":"cjhubytkx002jyis5xto1ujjg","_id":"cjhubytl9002zyis5flpxuucn"},{"post_id":"cjhubytko0029yis5qnossl7q","category_id":"cjhubytkx002jyis5xto1ujjg","_id":"cjhubytla0031yis52rvgrgu6"},{"post_id":"cjhubytl3002qyis5129218pj","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytlb0033yis5kg5ziwm7"},{"post_id":"cjhubytks002gyis57qls84zf","category_id":"cjhubytkx002jyis5xto1ujjg","_id":"cjhubytld0036yis5lq10r4up"},{"post_id":"cjhubytl5002syis538todx5b","category_id":"cjhubytko0028yis5nh9bvn0e","_id":"cjhubytle0038yis5n3wk9jec"},{"post_id":"cjhubytl7002vyis52o1wb3nl","category_id":"cjhubytkx002jyis5xto1ujjg","_id":"cjhubytlh003byis58y8lcgxg"},{"post_id":"cjhubytkv002iyis5p5j6roxg","category_id":"cjhubytkx002jyis5xto1ujjg","_id":"cjhubytli003dyis5bmiz9yvh"},{"post_id":"cjhubytl1002nyis5ljcv98kh","category_id":"cjhubytl9002yyis5vqx8zgvy","_id":"cjhubytlj003gyis5hgei5uvj"},{"post_id":"cjhubytlb0032yis5mzy66f9q","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytlk003iyis5pafi8l7o"},{"post_id":"cjhubytlc0035yis5rhqe5j2v","category_id":"cjhubytj30006yis5r4260gtj","_id":"cjhubytlm003kyis5k4vf1g6q"},{"post_id":"cjhubytld0037yis561n78fj1","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytln003nyis5ocx1tf7g"},{"post_id":"cjhubytl8002xyis526qxxmw5","category_id":"cjhubytlc0034yis57hhaowq0","_id":"cjhubytlo003pyis55qgpoacw"},{"post_id":"cjhubytlh003cyis59u7g3s7d","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytlq003ryis5i2y2zmw5"},{"post_id":"cjhubytl90030yis5s208foat","category_id":"cjhubytlc0034yis57hhaowq0","_id":"cjhubytlr003uyis551i1py90"},{"post_id":"cjhubytli003eyis5mmflr864","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytls003wyis5e02qpp23"},{"post_id":"cjhubytlf0039yis5p773stea","category_id":"cjhubytlj003fyis5elmtsk4h","_id":"cjhubytlu003yyis5tm42y5o5"},{"post_id":"cjhubytll003jyis5uctnqtz3","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytlv0041yis517xwz8j3"},{"post_id":"cjhubytlm003myis5q1m6golq","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytlw0043yis5sfi03a3q"},{"post_id":"cjhubytlk003hyis50ecan56k","category_id":"cjhubytlm003lyis5mgpf2pho","_id":"cjhubytly0045yis5n1vaij7b"},{"post_id":"cjhubytlp003qyis54cp8fi44","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytm00047yis5ovf7xays"},{"post_id":"cjhubytlq003tyis5gu87xkbe","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytm10049yis5xs6yk67q"},{"post_id":"cjhubytln003oyis53phs8cn5","category_id":"cjhubytlq003syis5e8m2f2bv","_id":"cjhubytm2004byis5turpocwv"},{"post_id":"cjhubytls003xyis54v9zum8i","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytm3004dyis5lx6jrbhe"},{"post_id":"cjhubytlu0040yis5yac02a8c","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytm4004gyis51qpjyul3"},{"post_id":"cjhubytlr003vyis5tft2cxzd","category_id":"cjhubytlu003zyis5kitj8h1r","_id":"cjhubytm6004kyis5lerrykpw"},{"post_id":"cjhubytlw0044yis5yhqfigv9","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytm7004myis5ojigyklt"},{"post_id":"cjhubytly0046yis5q6qs15ac","category_id":"cjhubytix0002yis57sqfv634","_id":"cjhubytm7004oyis5z41qwdh1"},{"post_id":"cjhubytm00048yis5uakrxqmj","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytm8004pyis5rrmhavln"},{"post_id":"cjhubytm2004cyis5oq0v0xy8","category_id":"cjhubytjc000dyis5url7gvml","_id":"cjhubytm8004ryis5ga01kzxv"},{"post_id":"cjhubytm1004ayis598xthshi","category_id":"cjhubytm3004eyis5yaf0e93a","_id":"cjhubytm8004syis56e345d8q"},{"post_id":"cjhubytm4004fyis5xtfvp2l2","category_id":"cjhubytm6004jyis56kbh9r96","_id":"cjhubytm8004tyis52tj4gn3h"},{"post_id":"cjhubytm5004hyis5em9nnl2g","category_id":"cjhubytm7004nyis5cl0nnj45","_id":"cjhubytm8004uyis5ypcc5cdv"}],"PostTag":[{"post_id":"cjhubytm5004hyis5em9nnl2g","tag_id":"cjhubytm6004lyis5tnmyd0nh","_id":"cjhubytm8004qyis5nbphjvue"}],"Tag":[{"name":"博客迁移、Jekyll、Hexo","_id":"cjhubytm6004lyis5tnmyd0nh"}]}}